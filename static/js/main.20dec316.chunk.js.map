{"version":3,"sources":["cards.tsx","assets.ts","goals.tsx","utils.ts","Game.tsx","icons.tsx","actions.tsx","combiner.ts","Board.tsx","Title.tsx","avatars.ts","Lobby.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["CARDS","name","desc","effect_type","illust","effect","G","ctx","player","out","entities","push","has_fruit","score","idx","players","indexOf","upper_idx","lower_idx","add_fruits","other_players","filter","x","flipped","flip_card","p","move","deck","hand","card","discard","undefined","log_msg","discarded","slice","map","includes","find","AVATARS","goal_illust","score_based_on_fruit","fruit_idx","num_fruit","fruit","length","GOALS","aggressive_goal","target_idx","protective_goal","player_idx","protect_target","eliminate_target","greedy_goal","target_card","num_archives","goal","is_goal","check_requirements","requirements","self","is_achieved","reduce","acc","val","new_acc","cnt","gamelogs","unshift","console","log","PUBLIC_GOALS","is_public","map_object","fn","obj","new_obj","k","PRNG","seed","this","i","charCodeAt","Math","sin","result","floor","random","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","deck1","deck2","splice","init_round","num_places","phase","round","_","times","rng","shuffle","init_deck","init_player","finished","previous_action","goals","stackable","public_goals","g","init_goals","previous_actions","preset_ai_behaviour","ai_behaviour","init_draft","init_ai_behaviour","BEHAVIOURS","aggressive","protective","topdown","greedy","protective_growth","topdown_growth","greedy_growth","choice","fruits","j","get_next_idx","current_idx","next_idx","place","from_idx","card_idx","direction","from_player","ai_moves","ai_players","ai","card_weights","weight","sorted_by_score","sort","a","b","top","danger","to_disturb","another_player","disturb_direction","sorted_weights","actions","change_hands_or_enter_action_phase","hands","next_action","active_player_idx","num_moves","enter_action_phase","placed","active_player","shield_idx","proceed","skipped","all_finished","enter_place_phase","flip","flip_action","INVALID_MOVE","skipper","skipper_idx","archive","archive_idx","execute","execute_action","added","msg","CSPR","setup","setup_player","host","numPlayers","f1","f2","moves","setup_scenario","avatars","add_avatars","set_ai_players","num_ai","set_ai_behaviours","behaviours","add_action","action","carry_actions","ai_act","minPlayers","maxPlayers","turn","activePlayers","ActivePlayers","ALL","plugins","fnWrap","args","fruit_style","height","width","FRUITS","src","style","shield_icon","skip_icon","init_state","board","dream_count","get_operations","S","hand_selected","names","get_place_operations","flip_actions","execute_actions","ACTIONS","select_hand","change_hand_selected","clear_state","change_board","enter_dream","COMBINED","add_place_action","TopPanel","props","className","onClick","checkGoal","addAI","gameCount","DeckArea","cardNum","PlayArea","Card","playedCard","CardAreas","Avatar","border","selected","display","InfoLine","color","content","PlayerInfo","info","Player","playerInfo","Central","InfoPanel","Controller","move1","operations","autoMove","useEffect","operation","setTimeout","combined","CardContainer","handleClick","CardRow","cards","handleCardClick","get_player_info","entity","get_entity_icon","get_position","diff","GameBoard","list","indexes","process_player","alert","ceil","Goal","goal_illust_src","process_public_goal","fruits_lookup","A","B","C","split","char","BOARDS","GoalBoard","FinalBoard","Board","useState","setS","produce","board_props","parseInt","playerID","Date","TitleScreen","titleImg","title","dadiao","href","API","LobbyAvatar","borderColor","is_player","avatar","Room","get_avatar","locked","pid","sum","c","rand","fetch_rooms","setter","api","fetch","then","res","json","L","rooms","send_post_req","data","method","headers","body","JSON","stringify","onOperate","get_room_operation","room","player_id","player_contained","room_id","leave_room","enter_room","Lobby","uuidv4","setL","interval","setInterval","exit_lobby","clearInterval","window","addEventListener","removeEventListener","player_room","enter_game","flatMap","changer","max_players","direct_enter","SERVER","SocketIO","server","SingleClient","Client","game","debug","introduce_gameplay","Title","CSPRLobby","App","scene","matchID","game_instance","finish_game","game_data","prompt","Scene","GameInstance","multiplayer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAIaA,EAAiB,CAC5B,CACEC,KAAM,eACNC,KAAM,eACNC,YAAa,aACbC,OAAQ,oGACRC,OALF,SAKSC,EAAGC,EAAKC,GACbC,EAAID,KAGR,CACEP,KAAM,eACNC,KAAM,4EACNC,YAAa,aACbC,OAAQ,qGACRC,OALF,SAKSC,EAAGC,EAAKC,GACbA,EAAOE,SAASC,KAAK,YAGzB,CACEV,KAAM,eACNC,KAAM,sBACNC,YAAa,SACbS,WAAW,EACXR,OAAQ,4CACRC,OANF,SAMSC,EAAGC,EAAKC,GACbA,EAAOK,OAAS,IAGtB,CACIZ,KAAM,2BACNC,KAAM,sBAENC,YAAa,UACbC,OAAQ,4CACRC,OANJ,SAMWC,EAAGC,EAAKC,GACbA,EAAOK,OAAS,IAGtB,CACIZ,KAAM,eACNC,KAAM,yDAENC,YAAa,UACbC,OAAQ,wHACRC,OANJ,SAMWC,EAAGC,EAAKC,GACbA,EAAOE,SAAW,KAGtB,CACET,KAAM,qBACNC,KAAM,0DACNC,YAAa,SACbC,OAAQ,wGACRC,OALF,SAKSC,EAAGC,EAAKC,GACb,IAAIM,EAAMR,EAAES,QAAQC,QAAQR,GACxBS,GAAaH,EAAM,GAAK,EACxBI,GAAaJ,EAAM,GAAK,EAC5BR,EAAES,QAAQE,GAAWJ,OAAS,EAC9BP,EAAES,QAAQG,GAAWL,OAAS,IAGlC,CACEZ,KAAM,qBACNC,KAAM,gEACNC,YAAa,SACbC,OAAQ,oGACRC,OALF,SAKSC,EAAGC,EAAKC,GAGXW,EAAWb,EAAGC,EAAKC,EAAQ,CAAC,EAAE,EAAE,MAIxC,CACIP,KAAM,eACNC,KAAM,0DACNC,YAAa,SACbC,OAAQ,mGACRC,OALJ,SAKWC,EAAGC,EAAKC,GAGXW,EAAWb,EAAGC,EAAKC,EAAQ,CAAC,EAAE,EAAE,MAIxC,CACIP,KAAM,eACNC,KAAM,0DACNC,YAAa,SACbC,OAAQ,yGACRC,OALJ,SAKWC,EAAGC,EAAKC,GAIbW,EAAWb,EAAGC,EAAKC,EAAQ,CAAC,EAAE,EAAE,MAMpC,CACEP,KAAM,2BACNC,KAAM,0LACNE,OAAQ,8GACRC,OAJF,SAISC,EAAGC,EAAKC,GACb,IADqB,EACjBY,EAAgBd,EAAES,QAAQM,QAAO,SAAAC,GAAC,OAAIA,GAAKd,IAAWc,EAAEb,OADvC,cAEPW,GAFO,IAErB,2BAA6B,CAAC,IACxBG,EAAUC,EADa,SAEvBD,GAA2B,gBAAhBA,EAAQtB,OACrBO,EAAOK,OAAS,IALC,iCAUzB,CACEZ,KAAM,2BACNC,KAAM,kQACNE,OAAQ,sGACRC,OAJF,SAISC,EAAGC,EAAKC,GACb,IADqB,EACjBY,EAAgBd,EAAES,QAAQM,QAAO,SAAAC,GAAC,OAAIA,GAAKd,IAAWc,EAAEb,OADvC,cAEPW,GAFO,IAErB,2BAA6B,CAAC,IAArBK,EAAoB,QACvBF,EAAUC,EAAUC,GACpBF,GAA2B,gBAAhBA,EAAQtB,OACrBQ,EAAIgB,GACJjB,EAAOK,OAAS,IANC,iCAWzB,CACEZ,KAAM,2BACNC,KAAM,gEACNE,OAAQ,6GACRC,OAJF,SAISC,EAAGC,EAAKC,GACb,IADqB,EACjBY,EAAgBd,EAAES,QAAQM,QAAO,SAAAC,GAAC,OAAIA,GAAKd,IAAWc,EAAEb,OADvC,cAEPW,GAFO,IAErB,2BAA6B,CAAC,IAArBK,EAAoB,QAC3BC,EAAKD,EAAEE,KAAMF,EAAEG,OAHI,iCAOzB,CACE3B,KAAM,eACNC,KAAM,8CACNU,WAAW,EACXT,YAAa,aACbC,OAAQ,2GACRC,OANF,SAMSC,EAAGC,EAAKC,GACbA,EAAOE,SAASC,KAAK,UAG3B,CACIV,KAAM,eACNC,KAAM,4BACNU,WAAW,EACXT,YAAa,aACbC,OAAQ,2GACRC,OANJ,SAMWC,EAAGC,EAAKC,GACbkB,EAAKlB,EAAOmB,KAAMnB,EAAOoB,QAG/B,CACI3B,KAAM,eACNC,KAAM,yFACNU,WAAW,EACXR,OAAQ,4GACRC,OALJ,SAKWC,EAAGC,EAAKC,GACb,IAAIqB,EAAOH,EAAKlB,EAAOmB,KAAMnB,EAAOsB,cACxBC,GAARF,QAAoCE,GAAfF,EAAKxB,SAC5B2B,EAAQ1B,EAAGC,EAAK,uDAAWsB,EAAK5B,KAAhB,oBAChB4B,EAAKxB,OAAOC,EAAGC,EAAKC,GACpBqB,EAAKxB,OAAOC,EAAGC,EAAKC,MAI1B,CACEP,KAAM,eACNC,KAAM,+LACNU,WAAW,EACXT,YAAa,aACbC,OAAQ,oGACRC,OANF,SAMSC,EAAGC,EAAKC,GACb,IAAIqB,EAAOrB,EAAOmB,KAAK,GACvB,QAAYI,GAARF,EAAmB,CAErB,GADAG,EAAQ1B,EAAGC,EAAK,yEAAcsB,EAAK5B,SAClB,gBAAb4B,EAAK5B,KAKP,OAJAyB,EAAKlB,EAAOmB,KAAMnB,EAAOsB,SACzBtB,EAAOK,OAAS,KAQxB,CACEZ,KAAM,eACNC,KAAM,6KACNC,YAAa,aACbC,OAAQ,iGACRC,OALF,SAKSC,EAAGC,EAAKC,GACb,IAAIyB,EAAY3B,EAAEqB,KAAKO,MAAM,EAAG,GAChC1B,EAAOmB,KAAOnB,EAAOmB,KAAKO,MAAM,GAChC1B,EAAOsB,QAAP,sBAAqBG,GAArB,YAAmCzB,EAAOsB,UAC1CE,EAAQ1B,EAAGC,EAAK,+EAAe0B,EAAUE,KAAI,SAAAb,GAAC,OAAI,iCAAOA,EAAErB,KAAT,cAC9CgC,EAAUE,KAAI,SAAAb,GAAC,OAAIA,EAAErB,QAAMmC,SAAS,gBACtC3B,EAAID,GAGJA,EAAOK,OAAS,IAKtB,CACEZ,KAAM,eACNC,KAAM,0DACNC,YAAa,UACbC,OAAQ,qGACRC,OALF,SAKSC,EAAGC,EAAKC,GACbA,EAAOmB,KAAP,sBAAkBrB,EAAEqB,KAAKO,MAAM,EAAE,IAAjC,YAAwC1B,EAAOmB,OAC/CrB,EAAEqB,KAAOrB,EAAEqB,KAAKO,MAAM,KAI1B,CACEjC,KAAM,eACNC,KAAM,kFACNC,YAAa,SACbC,OAAQ,2GACRQ,WAAW,EACXP,OANF,SAMSC,EAAGC,EAAKC,QAEAuB,GADDvB,EAAOE,SAAS2B,MAAK,SAAAf,GAAC,MAAgB,iBAALA,OAE3Cd,EAAOK,OAAS,MC9OXyB,EAAU,CACvB,4CACA,4CACA,4CACA,4CACA,4CACA,4CACA,4CACA,4CACA,4CACA,6CAGaC,EAAc,sGCP3B,SAASC,EAAqBhC,EAAiBiC,GAC7C,IAAIC,EAAYlC,EAAOE,SAASW,QAAO,SAAAC,GAAC,MAAkB,iBAALA,GAAmBA,EAAEqB,OAASF,KAAaG,OAChG,GAAIF,GAAa,EACflC,EAAOK,OAAS,OAEb,GAAiB,GAAb6B,EACPlC,EAAOK,OAAS,MAEb,IAAiB,GAAb6B,EAIP,OAHAlC,EAAOK,OAAS,GAwBb,IAiMMgC,EAjMqB,CAChC,CACE5C,KAAM,yCACNC,KAAM,kFAEN4C,gBAAiB,EACjBzC,OALF,SAKSC,EAAGC,EAAKC,GACb,IACIuC,GADazC,EAAES,QAAQC,QAAQR,GACJ,GAAK,EAGlB,GAFLF,EAAES,QAAQgC,GAEZtC,MACTD,EAAOK,OAAS,KAIxB,CACIZ,KAAM,yCACNC,KAAM,kFAEN4C,gBAAiB,EACjBzC,OALJ,SAKWC,EAAGC,EAAKC,GACb,IACIuC,GADazC,EAAES,QAAQC,QAAQR,GACJ,GAAK,EAGlB,GAFLF,EAAES,QAAQgC,GAEZtC,MACTD,EAAOK,OAAS,KAKxB,CACIZ,KAAM,yCACNC,KAAM,sHACN4C,gBAAiB,EACjBE,gBAAiB,EACjB3C,OALJ,SAKWC,EAAGC,EAAKC,GACb,IAAIyC,EAAa3C,EAAES,QAAQC,QAAQR,GAC/B0C,EAAiB5C,EAAES,SAASkC,EAAa,GAAK,GAC9CE,EAAmB7C,EAAES,SAASkC,EAAa,GAAK,GAE1B,GAAtBC,EAAezC,KAAuC,GAAxB0C,EAAiB1C,MACjDD,EAAOK,OAAS,KAIxB,CACIZ,KAAM,yCACNC,KAAM,sHACN4C,gBAAiB,EACjBE,gBAAiB,EACjB3C,OALJ,SAKWC,EAAGC,EAAKC,GACb,IAAIyC,EAAa3C,EAAES,QAAQC,QAAQR,GAC/B0C,EAAiB5C,EAAES,SAASkC,EAAa,GAAK,GAC9CE,EAAmB7C,EAAES,SAASkC,EAAa,GAAK,GAE1B,GAAtBC,EAAezC,KAAuC,GAAxB0C,EAAiB1C,MACjDD,EAAOK,OAAS,KAkCtB,CACEZ,KAAM,mCAENC,KAAM,6FACNkD,YAAa,EACb/C,OALF,SAKSC,EAAGC,EAAKC,GACbgC,EAAqBhC,EAAQ,KAGnC,CACIP,KAAM,6BAENC,KAAM,uFACNkD,YAAa,EACb/C,OALJ,SAKWC,EAAGC,EAAKC,GACbgC,EAAqBhC,EAAQ,KAGnC,CACIP,KAAM,mCAENC,KAAM,uFACNkD,YAAa,EACb/C,OALJ,SAKWC,EAAGC,EAAKC,GACbgC,EAAqBhC,EAAQ,KAGjC,CACEP,KAAM,6BACNC,KAAM,mGACNmD,YAAa,eACbhD,OAJF,SAISC,EAAGC,EAAKC,GACb,IAAI8C,EAAe9C,EAAOoB,KAAKgB,OAC/B,GAAoB,GAAhBU,EACF9C,EAAOK,OAAS,MAEb,MAAIyC,GAAgB,GAIvB,OAHA9C,EAAOK,OAAS,KAOtB,CACEZ,KAAM,+CACNC,KAAM,sGACNmD,YAAa,eACbhD,OAJF,SAISC,EAAGC,EAAKC,QAEDuB,GADDvB,EAAOsB,QAAQO,MAAK,SAAAf,GAAC,MAAc,gBAAVA,EAAErB,UAEpCO,EAAOK,OAAS,KAyBtB,CACEZ,KAAM,mCACNC,KAAM,kHACNG,OAHF,SAGSC,EAAGC,EAAKC,QAECuB,GADDvB,EAAOsB,QAAQO,MAAK,SAAAf,GAAC,OAAIA,EAAErB,KAAKmC,SAAS,qBAEpD5B,EAAOK,OAAS,KAKtB,CACEZ,KAAM,6BACNC,KAAM,iGACNmD,YAAa,eACbhD,OAJF,SAISC,EAAGC,EAAKC,GACDA,EAAOE,SAASW,QAAO,SAAAC,GAAC,MAAS,QAALA,KAC9BsB,QAAU,IAClBpC,EAAOK,OAAS,MAOOsB,KAlN/B,SAAsBoB,GACpB,OAAO,2BACFA,GADL,IAEEC,SAAS,EACTpD,OAAQmC,OAgNNkB,EAAqB,SAACC,EAAwB7C,GAAzB,OAA2C,SAACP,EAAUC,EAAUC,EAAiBmD,GACtGA,IAASA,EAAKC,eACHpD,EAAOE,SAASmD,QAAO,SAACC,EAAKC,GACxC,GAAkB,iBAAPA,EAAiB,CAC1B,IAAIC,EAAO,YAAOF,GAElB,OADAE,EAAQD,EAAIpB,QAAU,EACfqB,EAGP,OAAOF,IAER,CAAC,EAAE,EAAE,IACW3B,KAAI,SAAC8B,EAAKnD,GAAN,OAAemD,EAAMP,EAAa5C,IAAS,KAC/CsB,UAAS,KAG1B5B,EAAOK,OAASA,EAChB8C,EAAKC,aAAc,EACnBtD,EAAE4D,SAASC,QAAQ,iBACnBC,QAAQC,IAAI,eAAMV,EAAKzD,KAAMyD,EAAKC,iBA2E3BU,EAlE4B,CACvC,CACErE,KAAM,oCACNC,KAAM,MACNG,OAAQoD,EAAmB,CAAC,EAAE,EAAE,GAAI,GACpCL,YAAa,GAEf,CACEnD,KAAM,oCACNC,KAAM,MACNG,OAAQoD,EAAmB,CAAC,EAAE,EAAE,GAAI,GACpCL,YAAa,GAEf,CACEnD,KAAM,oCACNC,KAAM,MACNG,OAAQoD,EAAmB,CAAC,EAAE,EAAE,GAAI,GACpCL,YAAa,GAEf,CACEnD,KAAM,oCACNC,KAAM,KACNG,OAAQoD,EAAmB,CAAC,EAAE,EAAE,GAAI,GACpCL,YAAa,GAEf,CACEnD,KAAM,oCACNC,KAAM,KACNG,OAAQoD,EAAmB,CAAC,EAAE,EAAE,GAAI,GACpCL,YAAa,GAEf,CACEnD,KAAM,oCACNC,KAAM,KACNG,OAAQoD,EAAmB,CAAC,EAAE,EAAE,GAAI,IAEtC,CACExD,KAAM,oCACNC,KAAM,MACNG,OAAQoD,EAAmB,CAAC,EAAE,EAAE,GAAI,GACpCL,YAAa,IA0B4BjB,KA1S7C,SAA6BoB,GAC3B,OAAO,2BACFA,GADL,IAEEC,SAAS,EACTe,WAAW,EACXnE,ODpB8B,8G,cEb3B,SAASoE,EAAgBC,EAAiCC,GAC/D,IAAIC,EAA4B,GAEhC,IAAK,IAAIC,KAAKF,EACZC,EAAQC,GAAKH,EAAGC,EAAIE,GAAIA,GAG1B,OAAOD,EAuBF,IAAME,EAAb,WAIE,WAAYC,EAAuBf,GAGjC,GAHgD,yBAHlDe,UAGiD,OAFjDf,SAEiD,EAC/CgB,KAAKD,KAAOA,GAAQ,OAET/C,GAAPgC,EAEF,GADAgB,KAAKhB,IAAM,EACQ,iBAARe,EACT,IAAK,IAAIE,EAAE,EAAGA,EAAEF,EAAKlC,OAAQoC,IAC3BD,KAAKhB,KAAOe,EAAKG,WAAWD,QAI9BD,KAAKhB,IAAMe,OAOfC,KAAKhB,IAAMA,EAtBf,qDA2BI,IAAIzC,EAA2B,IAAvB4D,KAAKC,IAAIJ,KAAKhB,OAClBqB,EAAS9D,EAAI4D,KAAKG,MAAM/D,GAE5B,OADAyD,KAAKhB,KAAO,EACLqB,IA9BX,gCAiCY9D,GACR,OAAO4D,KAAKG,MAAM/D,EAAIyD,KAAKO,YAlC/B,6BAqCSC,GACL,IAAIC,EAAMD,EAAI3C,OACd,OAAO2C,EAAIR,KAAKU,UAAUD,MAvC9B,8BA0CU7D,GAMN,IALA,IAAI+D,EAAQ/D,EAAKO,MAAM,GACnByD,EAAWhE,EAAKiB,OAChBgD,EAAW,EACXC,EAAW,IAAIC,MAAMH,GAElBA,GAAU,CACf,IAAII,EAAaJ,EAAWZ,KAAKO,SAAY,EAC7CO,EAASD,KAAcF,EAAMK,GAC7BL,EAAMK,GAAaL,IAAQC,GAG7B,OAAOE,MAtDX,KCdO,SAASnE,EAAKsE,EAAgBC,GAEnC,IAAIpE,EAAOmE,EAAME,OAAO,EAAG,GAAG,GAC9B,OAAIrE,GACFoE,EAAM9B,QAAQtC,GACPA,QAGP,EAgDJ,IAuCMsE,EAAmB,SAAC7F,EAAGC,GAE3BD,EAAE8F,WAAa,EAGf9F,EAAE+F,MAAQ,QACV/F,EAAEgG,OAAS,EACXhG,EAAEqB,KA1FJ,SAAmBrB,EAASC,GAE1B,IAF6C,EAGzCoB,EADS,sBAAO4E,IAAEC,MAAM,GAAG,iBAAM,mBAAxB,YAAkCD,IAAEC,MAAM,GAAG,iBAAM,mBAAnD,YAA6DD,IAAEC,MAAM,GAAG,iBAAM,mBAA9E,YAAwFD,IAAEC,MAAM,GAAG,iBAAI,+BAAvG,YAAmHD,IAAEC,MAAM,GAAG,iBAAM,mBAApI,YAA6ID,IAAEC,MAAM,GAAG,iBAAM,mBAA9J,YAAuKD,IAAEC,MAAM,GAAG,iBAAM,mBAAxL,YAAiMD,IAAEC,MAAM,GAAG,iBAAM,mBAAlN,YAA2ND,IAAEC,MAAM,GAAG,iBAAM,mBAA5O,YAAqPD,IAAEC,MAAM,GAAG,iBAAM,mBAAtQ,YAA+QD,IAAEC,MAAM,GAAG,iBAAM,yBAAhS,YAA0SD,IAAEC,MAAM,GAAG,iBAAM,yBAA3T,YAAqUD,IAAEC,MAAM,GAAG,iBAAM,mBAAtV,YAA+VD,IAAEC,MAAM,GAAG,iBAAM,mBAAhX,YAAyXD,IAAEC,MAAM,GAAG,iBAAI,mBAAxY,CAA+Y,2BAAQ,2BAAQ,iBACvZrE,KAAI,SAAAlC,GAAI,OAAID,EAAMqC,MAAK,SAAAf,GAAC,OAAIA,EAAErB,MAAQA,QAAOoB,QAAO,SAAAC,GAAC,YAASS,GAALT,KAAgBa,KAAI,SAAAb,GAAC,sBAASA,MAH/D,cAI5BK,GAJ4B,IAI7C,2BAAuB,CAAC,IAAfE,EAAc,QACjBA,EAAKjB,YACPiB,EAAKc,MAAQrC,EAAEmG,IAAIhB,UAAU,KANY,8BAS7C,OAAOnF,EAAEmG,IAAIC,QAAQ/E,GAiFZgF,CAAUrG,GACnBA,EAAEsG,aAAetG,EAAEsG,YAAc,GAAK,EARH,oBAWhBtG,EAAES,SAXc,IAWnC,2BAA8B,CAAC,IAAtBP,EAAqB,QAC5BA,EAAOmB,KAAO,GACdnB,EAAOoB,KAAO,GACdpB,EAAOsB,QAAU,GACjBtB,EAAOE,SAAW,CAAC,QACnBF,EAAOC,KAAM,EACbD,EAAOqG,UAAW,EAClBrG,EAAOsG,iBAAmB,GAlBO,+BAbZ,SAACxG,EAAGC,GAI3B,IAHA,IAAIwG,EAAQzG,EAAEmG,IAAIC,QAAN,sBAAkB7D,GAAlB,YAA4BA,EAAMxB,QAAO,SAAAC,GAAC,OAAIA,EAAE0F,gBAGnDhC,EAAE,EAAGA,EAAE1E,EAAES,QAAQ6B,OAAQoC,IACnB1E,EAAES,QAAQiE,GAEhB+B,MAAQA,EAAM7E,MAAM8C,EAAGA,EAAE,GAGlC1E,EAAE2G,aAAe3G,EAAEmG,IAAIC,QAAQpC,EAAanC,KAAI,SAAA+E,GAAC,kCAAOA,GAAP,IAAUtD,aAAa,QAAU1B,MAAM,EAAE,GAwB1FiF,CAAW7G,GA5DY,SAACA,EAAGC,GAAQ,oBAEhBD,EAAES,SAFc,IAEnC,2BAA8B,CAAC,IAAtBP,EAAqB,QAE5BA,EAAOoB,KAAOtB,EAAEqB,KAAKO,MAAM,EADX,GAEhB5B,EAAEqB,KAAOrB,EAAEqB,KAAKO,MAFA,GAIhB1B,EAAO4G,iBAAmB,GAEtB5G,EAAO6G,sBACT7G,EAAO8G,aAAe9G,EAAO6G,sBAVE,+BA6DnCE,CAAWjH,IAmCN,IAaMkH,EAA0B,SAAClH,EAAGC,GA+DzC,IA9DA,IAAMkH,EAA2B,CAE/B,CACEC,WAAY,EACZC,WAAY,EACZC,QAAS,EACTC,OAAQ,EACRC,kBAAmB,EACnBC,eAAgB,EAChBC,cAAe,GAGjB,CACEN,WAAY,EACZC,WAAY,EACZC,QAAS,EACTC,OAAQ,EACRC,kBAAmB,EACnBC,eAAgB,EAChBC,cAAe,GAGjB,CACEN,WAAY,GACZC,WAAY,GACZC,QAAS,EACTC,OAAQ,EACRC,kBAAmB,EACnBC,eAAgB,EAChBC,cAAe,GAGjB,CACEN,WAAY,EACZC,WAAY,EACZC,QAAS,EACTC,OAAQ,EACRC,kBAAmB,EACnBC,eAAgB,EAChBC,cAAe,GAGjB,CACEN,WAAY,EACZC,WAAY,EACZC,QAAS,EACTC,OAAQ,GACRC,kBAAmB,EACnBC,eAAgB,EAChBC,cAAe,GAGjB,CACEN,WAAY,EACZC,WAAY,EACZC,QAAS,EACTC,OAAQ,GACRC,kBAAmB,EACnBC,eAAgB,EAChBC,cAAe,IAGVhD,EAAE,EAAGA,EAAE,EAAGA,IACjB1E,EAAES,QAAQiE,GAAGqC,oBAAsB/G,EAAEmG,IAAIwB,OAAOR,IAU7C,SAAStG,EAAWb,EAASC,EAASC,EAAiB0H,GAC5D,IAAK,IAAIlD,EAAE,EAAGA,EAAE,EAAGA,IACjB,IAAK,IAAImD,EAAE,EAAGA,EAAED,EAAOlD,GAAImD,IACzB3H,EAAOE,SAASC,KAAK,CAACgC,MAAOqC,IAH6C,oBAM7D1E,EAAE2G,cAN2D,yBAMrE1D,EANqE,QAO3Ee,EAAajC,MAAK,SAAAf,GAAC,OAAIA,EAAEpB,MAAQqD,EAAKrD,QAAgBG,OAAOC,EAAGC,EAAKC,EAAQ+C,IADhF,2BAAkC,IAN4C,+BAqBhF,SAAS6E,EAAarH,EAAoBsH,GACxC,IAAIC,GAAYD,EAAc,GAAMtH,EAAQ6B,OAC5C,OAAI7B,EAAQuH,GAAUzB,UAAY9F,EAAQuH,GAAU7H,IAC3C2H,EAAarH,EAASuH,GAGtBA,EAIX,IAAMC,EAAc,SAACjI,EAAGC,EAAKiI,EAAkBC,EAAkBC,GAC/D,IAAIC,EAAcrI,EAAES,QAAQyH,GACxB3G,EAAO8G,EAAY/G,KAAK6G,GAC5BE,EAAY/G,KAAO+G,EAAY/G,KAAKP,QAAO,SAAAC,GAAC,OAAKA,GAAKO,KAEtCvB,EAAES,SAASyH,EAAWE,GAAapI,EAAES,QAAQ6B,QACnDjB,KAAKwC,QAAQtC,GAEvB8G,EAAY7B,gBAAkB4B,GAG1BE,EAAiB,SAACtI,EAAGC,GAAS,IAAD,gBACjBD,EAAEuI,YADe,IACjC,2BAA8B,CAM5B,IAN6B,IAAtB/H,EAAqB,QAIxBgI,EAAKxI,EAAES,QAAQD,GACfiI,EAA8B,GACzB/D,EAAE,EAAGA,EAAE8D,EAAGlH,KAAKgB,OAAQoC,IAC9B+D,EAAapI,KAAK,CAChBqI,OAAQ,EACRN,UAAW,KAGf,IAAIO,EAAkB,YAAI3I,EAAES,SAASmI,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAEvI,MAAQsI,EAAEtI,SAC3DwI,EAAMJ,EAAgB,GAGtBI,GAAOP,IAETO,EAAMJ,EAAgB,IAGpB3I,EAAEgG,OAAS,IACT2C,EAAgB/G,MAAM,EAAE,GAAGE,SAAS0G,IACtCA,EAAGxB,aAAaM,SAAWkB,EAAGxB,aAAaS,eAC3Ce,EAAGxB,aAAaK,YAAcmB,EAAGxB,aAAaQ,mBAG9CgB,EAAGxB,aAAaO,QAAUiB,EAAGxB,aAAaU,eAG9C,IA9B4B,EAuCvB,EATDsB,EAAS,EA9Be,cA+BdhJ,EAAES,SA/BY,IA+B5B,2BAAyB,CAAC,IAAjBU,EAAgB,QACnBA,EAAEqF,kBAAqBxG,EAAES,QAAQC,QAAQS,GAAGA,EAAEqF,iBAAmB,GAAKhG,IACxEwI,GAAU,IAjCc,8BAoC5B,GAAc,GAAVA,EACFR,EAAGxB,aAAaO,QAAUiB,EAAGxB,aAAaU,mBAK1Cc,EAAGxB,aAAaO,QAAS,UAAAiB,EAAGzB,2BAAH,eAAwBQ,SAAU,EAC3DiB,EAAGxB,aAAaQ,mBAAqBgB,EAAGxB,aAAaQ,kBA3C3B,oBA+CXgB,EAAG/B,OA/CQ,IA+C5B,2BAA2B,CAAC,IAAnBxD,EAAkB,QACzB,GAAIA,EAAKT,gBACP,IAAK,IAAIkC,EAAE,EAAGA,EAAE8D,EAAGlH,KAAKgB,OAAQoC,IAAK,CACnC,IAAInD,EAAOiH,EAAGlH,KAAKoD,GACfgE,EAASD,EAAa/D,GACF,cAApBnD,EAAK1B,cACP6I,EAAOA,QAAUF,EAAGxB,aAAaI,WAAa,GAC9CsB,EAAON,UAAU/H,KAAK4C,EAAKT,kBAIjC,GAAIS,EAAKH,YACP,IAAK,IAAI4B,EAAE,EAAGA,EAAE8D,EAAGlH,KAAKgB,OAAQoC,IAAK,CACnC,IAAInD,EAAOiH,EAAGlH,KAAKoD,GACfgE,EAASD,EAAa/D,GACtBnD,EAAKc,OAASY,EAAKH,cACrB4F,EAAOA,QAAUF,EAAGxB,aAAaO,OACjCmB,EAAON,UAAU/H,KAAK,IAI5B,GAAI4C,EAAKF,YACP,IAAK,IAAI2B,EAAE,EAAGA,EAAE8D,EAAGlH,KAAKgB,OAAQoC,IAAK,CACnC,IAAInD,EAAOiH,EAAGlH,KAAKoD,GACfgE,EAASD,EAAa/D,GACtBnD,EAAK5B,MAAQsD,EAAKF,cACpB2F,EAAOA,QAAUF,EAAGxB,aAAaO,OACjCmB,EAAON,UAAU/H,KAAK,MA1EF,8BAgF5B,IAAK,IAAIqE,EAAE,EAAGA,EAAE8D,EAAGlH,KAAKgB,OAAQoC,IAAK,CACnC,IAAInD,EAAOiH,EAAGlH,KAAKoD,GACfgE,EAASD,EAAa/D,GACF,UAApBnD,EAAK1B,cACP6I,EAAOA,QAAUF,EAAGxB,aAAaO,OAChB,sBAAbhG,EAAK5B,KACP+I,EAAON,UAAU/H,KAAK,GAGtBqI,EAAON,UAAU/H,KAAKL,EAAEmG,IAAIwB,OAAO,CAAC,EAAE,MAK5C,IAAK,IAAIjD,EAAE,EAAGA,EAAE8D,EAAGlH,KAAKgB,OAAQoC,IAAK,CACnC,IAAInD,EAAOiH,EAAGlH,KAAKoD,GACfgE,EAASD,EAAa/D,GACF,cAApBnD,EAAK1B,cACP6I,EAAOA,QAAUF,EAAGxB,aAAaK,WACjCqB,EAAON,UAAU/H,KAAK,IAI1B,IAAK,IAAIqE,EAAE,EAAGA,EAAE8D,EAAGlH,KAAKgB,OAAQoC,IAAK,CACnC,IAAInD,EAAOiH,EAAGlH,KAAKoD,GACfgE,EAASD,EAAa/D,GACF,WAApBnD,EAAK1B,aAAgD,cAApB0B,EAAK1B,cACxC6I,EAAOA,QAAUF,EAAGxB,aAAaM,QACjCoB,EAAON,UAAU/H,MAAM,EAAIL,EAAES,QAAQC,QAAQqI,GAAOvI,GAAK,IAI7D,IAAIyI,EAAa,CAAC,EAAE,EAAE,EAAE,GACxBA,EAAWzI,IAAQ,GACnB,IAAK,IAAIkE,EAAE,EAAGA,EAAE1E,EAAES,QAAQ6B,OAAQoC,IAChC,CAAa1E,EAAES,QAAQiE,GACvB,IADA,IACSmD,EAAE,EAAGA,EAAE7H,EAAES,QAAQ6B,OAAQuF,IAChC,GAAInD,GAAKmD,EAAG,CACV,IADU,EACNqB,EAAiBlJ,EAAES,QAAQoH,GADrB,cAEkBqB,EAAepC,kBAFjC,IAEV,2BAA6D,EACtDe,EADsD,SAC/B,GAAKnD,IAC/BuE,EAAWvE,IAAM,IAJX,gCAWhB,IADA,IAAIyE,GAAqB,GAAMF,EAAWvI,QAAQ,GAAK,GAAK,EAAKF,GAAO,EAC/DkE,EAAE,EAAGA,EAAE8D,EAAGlH,KAAKgB,OAAQoC,IAAK,CACnC,IAAInD,EAAOiH,EAAGlH,KAAKoD,GACfgE,EAASD,EAAa/D,GACF,WAApBnD,EAAK1B,aAAgD,cAApB0B,EAAK1B,cACxC6I,EAAOA,QAAUF,EAAGxB,aAAaI,aAAe,EAAEoB,EAAGlH,KAAKgB,QAAQ,GAClEoG,EAAON,UAAU/H,KAAK8I,IAK1B,IAAIC,EAAc,UAAOX,GACzBW,EAAeR,MAAK,SAACC,EAAEC,GAAH,OAAOA,EAAEJ,OAASG,EAAEH,UACxC,IAAIP,EAAWM,EAAa/H,QAAQ0I,EAAe,IAC/ChB,EAAY,EACZgB,EAAe,GAAGhB,UAAU9F,OAAS,IACvC8F,EAAYpI,EAAEmG,IAAIwB,OAAOyB,EAAe,GAAGhB,YAI5B,GAAbA,GAAoD,cAAjCI,EAAGlH,KAAK6G,GAAUtI,aAAgE,WAAjC2I,EAAGlH,KAAK6G,GAAUtI,aACxFiE,QAAQC,IAAI,8BAGd/D,EAAEqJ,QAAQhJ,KAAK,CACb6H,SAAU1H,EACV2H,WACAC,eA3J6B,gCAgL7BkB,EAA2C,SAACtJ,EAAGC,GACnD,IAAIsJ,EAAQvJ,EAAES,QAAQoB,KAAI,SAAA3B,GAAM,OAAIA,EAAOoB,QACvC4D,EAAMqE,EAAMjH,OAOhB,GAA0B,GANDiH,EAAM,GAAGjH,OAOhCwB,QAAQC,IAAI,kCA1BiB,SAAC/D,EAAGC,GACnCD,EAAE+F,MAAQ,SADiC,oBAGxB/F,EAAES,SAHsB,IAG3C,2BAA8B,CAAC,IAAtBP,EAAqB,QAE5BA,EAAOmB,KAAOrB,EAAEmG,IAAIC,QAAQlG,EAAOmB,MACnCnB,EAAOmB,KAAP,sBAAkBnB,EAAOmB,MAAzB,YAAkCnB,EAAOuG,SANA,8BAU3CzG,EAAEwJ,YAAc,OAChBxJ,EAAEyJ,kBAAoBzJ,EAAEsG,YACxBtG,EAAE0J,UAAY,EAeZC,CAAmB3J,OAGhB,CACH8D,QAAQC,IAAI,cACZwF,EAAK,CAAIA,EAAMrE,EAAI,IAAd,mBAAqBqE,EAAM3H,MAAM,EAAGsD,EAAI,KAC7C,IAAK,IAAIR,EAAE,EAAGA,EAAEQ,EAAKR,IACnB1E,EAAES,QAAQiE,GAAGpD,KAAOiI,EAAM7E,GAlB6B,oBAsBzC1E,EAAES,SAtBuC,IAsB3D,IAAI,EAAJ,qBAA6B,SACpBmJ,QAAS,GAvByC,gCAyDtD,SAAS1I,EAAU2I,GACxB,IAAItI,EAAOsI,EAAcxI,KAAK,GAK9B,YAJYI,GAARF,IACFsI,EAAcxI,KAAOwI,EAAcxI,KAAKO,MAAM,GAC9CiI,EAAcrI,QAAQqC,QAAQtC,IAEzBA,EAGF,SAASpB,EAAID,GAClB,IAAI4J,EAAa5J,EAAOE,SAASyB,KAAI,SAACb,EAAER,GAAH,MAAiB,UAALQ,EAAgBR,OAAMiB,KAAWV,QAAO,SAAAC,GAAC,YAASS,GAALT,KAAgB,GAC9G8C,QAAQC,IAAI,eAAgB+F,QACVrI,GAAdqI,EACF5J,EAAOE,SAAWF,EAAOE,SAASW,QAAO,SAACC,EAAER,GAAH,OAAYA,GAAOsJ,MAG5DhG,QAAQC,IAAR,iBAAsB7D,EAAOK,MAA7B,kBACAL,EAAOC,KAAM,EACbD,EAAOqG,UAAW,GA4BtB,IAIMwD,EAAgB,SAAC/J,EAAGC,EAAK+J,GAE7B,GADAhK,EAAE0J,WAAa,EACM,WAAjB1J,EAAEwJ,aAA4BQ,EAGhC,GA/TJ,SAAsBhK,GAEpB,YAAyByB,GADDzB,EAAES,QAAQsB,MAAK,SAAAf,GAAC,QAAMA,EAAEuF,UAAYvF,EAAEb,QA8TxD8J,CAAajK,IATW,SAACA,EAAGC,GAClC4F,EAAW7F,GASPkK,CAAkBlK,OAEf,CACH,IAAIgI,EAAWF,EAAa9H,EAAES,QAAST,EAAEyJ,mBACzCzJ,EAAEyJ,kBAAoBzB,EACtBhI,EAAEwJ,YAAc,YAKlBxJ,EAAEwJ,YAAc,WAIdW,EAAa,SAACnK,EAAGC,EAAK0C,EAAoByH,GAE9C,GAAqB,QAAjBpK,EAAEwJ,aAAyBxJ,EAAEyJ,mBAAqB9G,EAwCpD,OAAO0H,IAvCP,IAAIR,EAAgB7J,EAAES,QAAQT,EAAEyJ,mBAC5BO,GAAU,EACVM,EAAUT,EAAczJ,SAAS2B,MAAK,SAAAf,GAAC,MAAS,QAALA,KAE/C,GAAmB,QAAfoJ,QAAoC3I,GAAX6I,EAAsB,CACjD,IAAIC,EAAcV,EAAczJ,SAASM,QAAQ4J,GACjDpJ,EAAU2I,GACVA,EAAczJ,SAASwF,OAAO2E,EAAa,GAC3CP,GAAU,EACVtI,EAAQ1B,EAAGC,EAAJ,4BAE0B,GAA7B4J,EAAcxI,KAAKiB,SACrBuH,EAActD,UAAW,QAKxB,GAA2B,iBAAhB6D,GAA4B,gBAAiBA,EAAa,CACxE,IAAII,EAAUX,EAAcvI,KAAK8I,EAAYK,aAC7C,QAAehJ,GAAX+I,EAKF,OAAOH,IAJPR,EAAcvI,KAAOuI,EAAcvI,KAAKP,QAAO,SAAAC,GAAC,OAAIA,GAAKwJ,KACzDX,EAAcrI,QAAQqC,QAAQ2G,QAShCtJ,EAAU2I,GACV/F,QAAQC,IAAI,qBAAO8F,EAAcrI,QAAQ,GAAG7B,MAC5C+B,EAAQ1B,EAAGC,EAAJ,uBAAe4J,EAAcrI,QAAQ,GAAG7B,OAGjDoK,EAAQ/J,EAAGC,EAAK+J,IAQdU,EAAgB,SAAC1K,EAAGC,EAAK0C,EAAoBgI,GACjD,GAAIhI,GAAc3C,EAAEyJ,kBAiClB,OAAOY,IAhCP,IAAInK,EAASF,EAAES,QAAQT,EAAEyJ,mBACrBlI,EAAOrB,EAAOsB,QAAQ,GAE1B,GADAsC,QAAQC,IAAR,UAAepB,EAAf,kBACsB,SAAlBgI,EAA2B,CAE7B,GADA7G,QAAQC,IAAI,wBACMtC,GAAdF,EAAKc,MAQP,OAAOgI,IANP,IAAIO,EAAQ,CAAC,EAAE,EAAE,GACjBA,EAAMrJ,EAAKc,OAAS,EACpBxB,EAAWb,EAAGC,EAAKC,EAAQ0K,GAC3BlJ,EAAQ1B,EAAGC,EAAJ,iBAAcsB,EAAK5B,KAAnB,mCAOTmE,QAAQC,IAAR,uBAA4BxC,EAAK5B,QAEjC4B,GAAQA,EAAK2B,QAAQX,EAAM7C,GAAOqC,MAAK,SAAAf,GAAC,OAAIA,EAAErB,MAAQ4B,EAAK5B,SAEtDI,QAAUwB,EAAKxB,OAAOC,EAAGC,EAAKC,EAAQqB,GAC3CG,EAAQ1B,EAAGC,EAAJ,uBAAesB,EAAK5B,OAK7BO,EAAOqG,SAAYrG,EAAOC,KAA8B,GAAtBD,EAAOmB,KAAKiB,OAE9CyH,EAAQ/J,IAsDC0B,EAAgB,SAAC1B,EAAGC,EAAK4K,GACpC7K,EAAE4D,SAASC,QAAQgH,IAGRC,EAAO,CAClBC,MAvlBF,SAAe9K,GACb,IAAMkG,EAAM,IAAI5B,EAAK,QACfvE,EAAW,CACfqB,KAAM,GACNZ,QAASwF,IAAEC,MAjIK,GAiIc,kBArGlC,SAAsBC,GA6BpB,MA5BmB,CACjB5F,MAAO,EACPe,KAAM,GACND,KAAM,GACNG,QAAS,GACTiF,MAAO,GAEPrG,SAAU,CAAC,QAEXoG,iBAAkB,EAClBM,iBAAkB,GAElBP,UAAU,EACVpG,KAAK,EAIL6G,aAAc,CACZI,WAAYjB,EAAIhB,UAAU,IAC1BkC,WAAYlB,EAAIhB,UAAU,IAC1BoC,OAAQpB,EAAIhB,UAAU,IACtBmC,QAASnB,EAAIhB,UAAU,IACvBuC,cAAevB,EAAIhB,UAAU,GAC7BqC,kBAAmBrB,EAAIhB,UAAU,GACjCsC,eAAgBtB,EAAIhB,UAAU,KA4EE6F,CAAa7E,MAC/CQ,aAAc,GACdR,MACAkD,QAAS,GACTrD,OAAQ,EACRM,YAAa,EACbmD,kBAAmB,EACnBD,YAAa,QAEbzD,MAAO,QAEPkF,KAAM,EACN1C,WAAY,CAAC,EAAE,EAAE,EAAE,GAAG3G,MAAM3B,EAAIiL,YAChCtH,SAAU,GACVkC,WAAY,EACZ4D,UAAW,EAEXyB,GAAI,iBAAM,MACVC,GAAI,iBAAM,OAMZ,OAHAtH,QAAQC,IAAR,+BAAoC9D,EAAIiL,WAAxC,YAAsDlL,EAAEuI,aAGjDvI,GA4jBPqL,MAAO,CACLC,eA1jBgC,SAACtL,EAAGC,EAAKuE,GAC3CxE,EAAEmG,IAAM,IAAI5B,EAAKC,GAjFO,SAACxE,EAAGC,GAK5B,IAJA,IAAIiF,EAAMlF,EAAES,QAAQ6B,OAGhBiJ,EAAUvL,EAAEmG,IAAIC,QAAQpE,GAASJ,MAAM,EAAGsD,GACrCR,EAAE,EAAGA,EAAEQ,EAAKR,IACnB1E,EAAES,QAAQiE,GAAG5E,OAASyL,EAAQ7G,GA4EhC8G,CAAYxL,GACZkH,EAAkBlH,EAAGC,GACrB4F,EAAW7F,IAujBTyL,eAnjBgC,SAACzL,EAAGC,EAAKyL,GAC3C1L,EAAEuI,WAAa,CAAC,EAAE,EAAE,EAAE,GAAG3G,OAAO8J,GAChC5H,QAAQC,IAAI,iBAAkB/D,EAAEuI,aAkjB9BoD,kBA3emC,SAAC3L,EAAGC,EAAK2L,GAC9C,IAAK,IAAIlH,EAAE,EAAGA,EAAE,EAAGA,IACjB1E,EAAES,QAAQiE,GAAGqC,oBAAsB6E,EAAWlH,IA0e9CmH,WAtOqB,SAAC7L,EAAGC,EAAK6L,QAClBrK,GAAVqK,IACF9L,EAAEqJ,QAAQhJ,KAAKyL,GACf9L,EAAES,QAAQqL,EAAO5D,UAAU0B,QAAS,EAGrBkC,EAAO5D,UACNlI,EAAEiL,MAChB3C,EAAStI,IAMTA,EAAEqJ,QAAQ/G,QAAUtC,EAAES,QAAQ6B,QAzBR,SAACtC,EAAGC,GAAS,IAAD,gBACnBD,EAAEqJ,SADiB,IACtC,2BAA8B,CAAC,IAAtByC,EAAqB,QAC5B7D,EAAMjI,EAAGC,EAAK6L,EAAO5D,SAAU4D,EAAO3D,SAAU2D,EAAO1D,WACvDpI,EAAES,QAAQqL,EAAO5D,UAAUpB,iBAAkBzG,KAAKyL,EAAO1D,YAHrB,8BAKtCpI,EAAEqJ,QAAU,GACZrJ,EAAE8F,YAAc,EAEhBwD,EAAmCtJ,GAkBjC+L,CAAc/L,IAwNdmK,OACAO,UACApC,WACA0D,OA7DiB,SAAChM,EAAGC,EAAKiI,GAC5B,IAAIlI,EAAEuI,WAAWzG,SAAS9B,EAAEyJ,oBAAuBzJ,EAAEiL,MAAQ/C,EA0C3D,OAAOmC,IAzCP,IAAI7B,EAAKxI,EAAES,QAAQT,EAAEyJ,mBACrB,GAAqB,QAAjBzJ,EAAEwJ,YAAuB,CAE3B,IAAIY,EAA0B,OAG9B,GAAI5B,EAAGlH,KAAKgB,OAAS,EAAG,CACtB,IAAIkI,EAAUhC,EAAGlH,KAAK,GACK,cAAvBkJ,EAAQ3K,aAAsD,WAAvB2K,EAAQ3K,aAAuD,gBAA3B2I,EAAG/B,MAAM,GAAG1D,cACzFqH,EAAc,CAACK,YAAa,IAK3BjC,EAAGpI,SAAS0B,SAAS,SACzB0G,EAAGnH,KAAKiB,OAAS,GACjBkG,EAAGnH,KAAKiB,OAAS,GACU,gBAA3BkG,EAAG/B,MAAM,GAAG1D,aACZyF,EAAGxB,aAAaK,WAAamB,EAAGxB,aAAaO,SAC5CiB,EAAGpI,SAAS0B,SAAS,YACrBgC,QAAQC,IAAR,0BAA+ByE,EAAGnH,KAAKiB,OAAvC,YAAiDkG,EAAGpI,WACpDgK,EAAc,QAGhBD,EAAKnK,EAAGC,EAAKD,EAAEyJ,kBAAmBW,OAE/B,IAAqB,WAAjBpK,EAAEwJ,YAWT,OAAOa,IAVP,IAAIM,EAAgC,UAEhCnC,EAAGxB,aAAaO,OAASiB,EAAGxB,aAAaK,YAC3C,sBAAIrH,EAAE2G,aAAa5F,QAAO,SAAA6F,GAAC,OAAKA,EAAEtD,eAAazB,KAAI,SAAA+E,GAAC,OAAIA,EAAE9D,gBAA1D,CAAwE0F,EAAG/B,MAAM,GAAG3D,cAAa/B,QAAO,SAAA6F,GAAC,YAASnF,GAALmF,KAAgB9E,SAAS0G,EAAGhH,QAAQ,GAAGa,SACpJyB,QAAQC,IAAR,iDAAoC/D,EAAE2G,aAAa9E,KAAI,SAAA+E,GAAC,OAAIA,EAAE9D,gBAA9D,CAA4E0F,EAAG/B,MAAM,GAAG3D,cAAxF,YAAwG0F,EAAGhH,QAAQ,GAAGa,QACtHsI,EAAiB,SAEnBD,EAAQ1K,EAAGC,EAAKD,EAAEyJ,kBAAmBkB,KA0BvCjJ,WAEFuK,WAAY,EACZC,WAAY,EACZC,KAAM,CACJC,cAAeC,IAAcC,KAE/BC,QAAS,CACP,CACE5M,KAAM,MACN6M,OAAQ,SAACrI,GAAD,OAAY,SAACnE,EAASC,GAA4B,IAAD,uBAAfwM,EAAe,iCAAfA,EAAe,kBAEvD,OADAzM,EAAImE,EAAE,WAAF,8BAAOnE,GAAP,IAAUmG,IAAK,IAAI5B,EAAK,OAAQvE,EAAEmG,IAAI1C,OAAOxD,GAA7C,OAAqDwM,S,QCjvB3DC,G,MAAc,CAClBC,OAAQ,OACRC,MAAO,UAGIC,EAAqB,CAChC,oGACA,mGACA,0GACAhL,KAAI,SAAAiL,GAAG,OAAI,qBAAKA,IAAKA,EAAKC,MAAOL,OAEtBM,EAAc,qBAAKF,IAAI,qGAAqGC,MAAOL,IAEnIO,EAAY,qBAAKH,IAAI,2GAA2GC,MAAOL,IChB7I,SAASQ,IACd,MAAO,CACLC,MAAO,YACPxK,WAAY,EACZoB,IAAK,GACLqJ,YAAa,GAuCV,SAASC,EAAerN,EAAUsN,GACvC,IAAIpN,EAASF,EAAES,QAAQ6M,EAAE3K,YACzB,GAAe,SAAX3C,EAAE+F,MACJ,OAAK7F,EAAO0J,aAA6BnI,GAAnB6L,EAAEC,cAIf,GAjCb,SAA8BrF,EAAkBC,GAC9C,IACIqF,EAAQ,CAAC,eAAM,eAAM,eAAM,gBAE/B,MAHiB,CAAC,EAAG,EAAG,EAAG,GAGT3L,KAAI,SAACuG,EAAW5H,GAAZ,MAAqB,CACzCb,KAAM6N,EAAMhN,GACZsL,OAAQ,mBACRW,KAAM,CAACvE,EAAUC,EAAUC,OAuBlBqF,CAAqBH,EAAE3K,WAAY2K,EAAEC,eAO9C,GAAIvN,EAAEyJ,mBAAqB6D,EAAE3K,WAAY,CACvC,GAAI2K,EAAE3K,YAAc3C,EAAEiL,MAAQjL,EAAEuI,WAAWzG,SAAS9B,EAAEyJ,mBACpD,MAAO,CACL,CACE9J,KAAM,eACNmM,OAAQ,SACRW,KAAM,CAACa,EAAE3K,cAIf,GAAqB,QAAjB3C,EAAEwJ,YAAuB,CAC3B,IAAIkE,EAA6B,CAC/B,CAAC/N,KAAM,eAAMmM,OAAQ,OAAQW,KAAM,CAACa,EAAE3K,WAAY,UAQpD,OANIzC,EAAOE,SAAS0B,SAAS,SAC3B4L,EAAarN,KAAK,CAACV,KAAM,eAAMmM,OAAQ,OAAQW,KAAM,CAACa,EAAE3K,WAAY,UAEjEzC,EAAOoB,KAAKgB,OAAS,QAA0Bb,GAAnB6L,EAAEC,eACjCG,EAAa7J,QAAQ,CAAClE,KAAM,2BAAQmM,OAAQ,OAAQW,KAAM,CAACa,EAAE3K,WAAY,CAAC8H,YAAa6C,EAAEC,kBAEpFG,EAGP,IAAIC,EAAgC,CAClC,CAAChO,KAAM,eAAMmM,OAAQ,UAAWW,KAAM,CAACa,EAAE3K,WAAY,aAMvD,YAHsBlB,GADPvB,EAAOsB,QAAQ,GACjBa,OACXsL,EAAgBtN,KAAK,CAACV,KAAM,2BAAQmM,OAAQ,UAAWW,KAAM,CAACa,EAAE3K,WAAY,WAEvEgL,EAIT,OAAIL,EAAE3K,YAAc3C,EAAEiL,MAAQjL,EAAEuI,WAAWzG,SAAS9B,EAAEyJ,mBAC7C,CACL,CACE9J,KAAM,eACNmM,OAAQ,SACRW,KAAM,CAACa,EAAE3K,cAKN,GAMf,IAiBMjB,EAAkB,SAAC4L,EAAGzC,GAC1ByC,EAAEvJ,IAAM8G,GAOG+C,EAAkC,CAC7CC,YA1B0B,SAACP,EAAG9M,EAAaN,IAhGR,SAACoN,EAAG9M,GACnC8M,EAAEC,eAAiB/M,EACrB8M,EAAEC,mBAAgB9L,EAGlB6L,EAAEC,cAAgB/M,EA4FpBsN,CAAqBR,EAAG9M,GACxB,IAAIe,EAAOrB,EAAOoB,KAAKd,GAClBN,EAAO0J,QACVlI,EAAQ4L,EAAG,iCAAO/L,EAAK5B,KAAZ,KAAoB4B,EAAK3B,UAuBtCmO,YAnB0B,SAACT,GAC3BA,EAAEC,mBAAgB9L,GAmBlBuM,aAf2B,SAACV,EAAGH,GAC/BG,EAAEH,MAAQA,GAeVzL,UACAuM,YAT0B,SAACX,GAC3BA,EAAEF,aAAe,ICnGNc,EAA2C,CACtDC,iBA7BuC,SAAC9C,EAAOhC,EAASnB,EAAkBC,EAAkBC,GAC5FiD,EAAMQ,WAAW,CAAC3D,WAAUC,WAAUC,cACtCiB,EAAQ0E,eA4BR/B,OAzB6B,SAACX,EAAOhC,EAASnB,GAC9CmD,EAAMW,OAAO9D,IAyBbiC,KAjB2B,SAACkB,EAAOhC,EAAS1G,EAAoByH,GAChEiB,EAAMlB,KAAKxH,EAAYyH,IAiBvBM,QAb8B,SAACW,EAAOhC,EAAS1G,EAAoBgI,GACnEU,EAAMX,QAAQ/H,EAAYgI,IAa1BrC,SAxB+B,SAAC+C,EAAOhC,EAASnB,GAChDmD,EAAM/C,SAASJ,GACfmD,EAAMQ,eCGR,SAASuC,EAASC,GAChB,OAAO,sBAAKC,UAAU,YAAf,UACL,wBAAQA,UAAU,oBAAoBC,QAASF,EAAMG,UAArD,sCACA,qBAAKD,QAASF,EAAMI,MAApB,SAA4BJ,EAAMK,eAItC,SAASC,GAASN,GAChB,OAAO,qBAAKC,UAAU,YAAf,SACL,qBAAKA,UAAU,WAAf,SACGD,EAAMO,YAKb,SAASC,GAASR,GAChB,OAAO,qBAAKC,UAAU,YAAf,SACL,cAACQ,GAAD,eAAUT,EAAMU,eAIpB,SAASC,GAAUX,GAGjB,OAAO,sBAAKC,UAAU,aAAf,UACL,cAACK,GAAD,CAAUC,QAASP,EAAMO,UACzB,cAACC,GAAD,CAAUE,WAAYV,EAAMU,gBAIhC,SAASE,GAAOZ,GACd,OAAO,sBAAKC,UAAU,SAASvB,MAAO,CAACmC,OAAQb,EAAMc,SAAU,oBAAqBd,EAAMlO,IAAK,yBAAoBsB,GAA5G,UACL,qBAAKqL,IAAKuB,EAAMvO,OAAQwO,UAAU,eAClC,qBAAKxB,IAAI,+GAA+GwB,UAAU,YAAYvB,MAAO,CAACqC,QAASf,EAAMzE,YAAQnI,EAAY,aAI7L,SAAS4N,GAAShB,GAChB,OAAO,qBAAKC,UAAU,YAAYvB,MAAO,CAACuC,MAAuB,sBAAfjB,EAAMkB,QAAgB,eAAU9N,GAA3E,SACJ4M,EAAMkB,UAWX,SAASC,GAAWnB,GAClB,OAAO,sBAAKC,UAAU,cAAf,UACL,cAACW,GAAD,CAAQnP,OAAQuO,EAAMvO,OAAQqP,SAAUd,EAAMc,SAAUhP,IAAKkO,EAAMlO,IAAKyJ,OAAQyE,EAAMzE,SACtF,cAACyF,GAAD,CAAUE,QAAO,UAAKlB,EAAM1O,KAAX,YAAmB0O,EAAM9N,MAAzB,aACjB,cAAC8O,GAAD,CAAUE,QAASlB,EAAMoB,UAI7B,SAASC,GAAOrB,GACd,OAAO,sBAAKC,UAAU,SAAf,UACL,cAACU,GAAD,CAAWJ,QAASP,EAAMsB,WAAWtO,KAAKiB,OAAQyM,WAAYV,EAAMsB,WAAWnO,QAAQ,KACvF,cAACgO,GAAD,eAAgBnB,EAAMsB,gBAI1B,SAASC,GAAQvB,GACf,OAAO,qBAAKC,UAAU,UAAf,SACJD,EAAM5N,QAAQoB,KAAI,SAAA3B,GAAM,OAEvB,aADF,CACGwP,GAAD,CAAQC,WAAYzP,SAK1B,SAAS2P,GAAUxB,GAGjB,OAAO,qBAAKC,UAAU,aAAf,SACJD,EAAMtK,MAIX,SAAS+L,GAAWzB,GAElB,IAAI0B,EAAQ1B,EAAM2B,WAAW,GACzBC,EAAWF,GAAwB,gBAAdA,EAAMpQ,KAC/BuQ,qBAAU,WACR,GAAgB,GAAZD,EAAJ,CACE,IAAIE,EAAY9B,EAAM2B,WAAW,GACjClM,QAAQC,IAAR,6BAAkCsK,EAAMrO,EAAEyJ,kBAA1C,YAA+D4E,EAAMrO,EAAEwJ,cACvE4G,YAAW,WAAK,IAAD,GACb,EAAA/B,EAAMgC,UAASF,EAAUrE,QAAzB,oBAAqCqE,EAAU1D,MAAQ,OACtD,QAKJ,CAAC4B,EAAMrO,EAAEyJ,kBAAmB4E,EAAMrO,EAAEwJ,YAAa6E,EAAMrO,EAAE0J,YAE5D,IAAIsG,EAAcC,EAAW,GAAK5B,EAAM2B,WAExC,OAAO,qBAAK1B,UAAU,aAAf,SACJ0B,EAAWnO,KAAI,SAAAsO,GAAS,OACvB,wBAAQ7B,UAAU,oBAAoBC,QAAS,wBAAM,EAAAF,EAAMgC,UAASF,EAAUrE,QAAzB,oBAAqCqE,EAAU1D,MAAQ,MAA5G,SAAmH0D,EAAUxQ,YAKnI,SAASmP,GAAKT,GACZ,OAAO,sBAAKC,UAAU,OAAf,UACL,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,SAASxB,IAAKuB,EAAMvO,WAErC,qBAAKwO,UAAU,aAAavB,MAAO,CAACqC,aAAwB3N,GAAf4M,EAAMhM,WAAoBZ,EAAU,QAAjF,cAA2GA,GAAf4M,EAAMhM,MAAqBwK,EAAOwB,EAAMhM,OAAS,QAIjJ,SAASiO,GAAcjC,GACrB,OAAO,qBACLC,UAAY,iBACZvB,MAAS,CAACmC,OAA+B,GAAvBb,EAAM9M,KAAK4N,SAAkB,yBAAoB1N,GACnE8M,QAAWF,EAAMkC,YAHZ,SAKL,cAACzB,GAAD,eAAUT,EAAM9M,SAIpB,SAASiP,GAAQnC,GACf,OAAO,qBAAKC,UAAU,WAAf,SACJD,EAAMoC,MAAM5O,KAAI,SAACN,EAAMf,GAAP,OAAe,cAAC8P,GAAD,CAAe/O,KAAMA,EAAMgP,YAAalC,EAAMqC,gBAAgBlQ,UAgBlG,SAASmQ,GAAgBzQ,EAAiBF,EAAUsN,GAClD,MAAe,SAAXtN,EAAE+F,OAC2B,GAA3B7F,EAAOsG,iBACSxG,EAAES,QAAQC,QAAQR,GAAUA,EAAOsG,iBAAmB,GACtD8G,EAAE3K,YAAwC,GAA1BzC,EAAOsG,gBAChC,qBAGA,CAAC,2BAAQ,2BAAQ,2BAAQ,4BAAStG,EAAOsG,iBAI3C,2BAILtG,EAAOqG,SACLrG,EAAOC,IACF,qBAGA,qBAIFD,EAAOE,SAASyB,KAAI,SAAA+O,GAAM,OHtKhC,SAAyBA,GAC9B,MAAqB,iBAAVA,EACF/D,EAAO+D,EAAOvO,OAEJ,UAAVuO,EACA5D,EAGAC,EG8JgC4D,CAAgBD,MAK3D,SAASE,GAAatQ,EAAamC,GACjC,IAAIoO,EAAOvQ,EAAMmC,EACjB,OAAIoO,EAAO,EACF,EAAIA,EAGJA,EAaX,SAASC,GAAU3C,GACjB,IAzDsBf,EL/IG2D,EAAWC,EKiNpC,OAAO,sBAAK5C,UAAU,QAAf,UACL,cAACsB,GAAD,CACEnP,SLnNqBwQ,EKmNF5C,EAAMrO,EAAES,QAAQoB,KAAI,SAAC3B,EAAQM,GAAT,OArB7C,SAAwBN,EAAiBM,EAAaR,EAAUsN,GAC9D,OAAO,2BACFpN,GADL,IAEEP,KAAM,CAAC,eAAM,eAAM,eAAM,gBAAMmR,GAAatQ,EAAK8M,EAAE3K,aACnD8M,KAAMkB,GAAgBzQ,EAAQF,EAAGsN,GACjC6B,SAAsB,UAAXnP,EAAE+F,OAAuBvF,GAAOR,EAAEyJ,oBAgBa0H,CAAejR,EAAQM,EAAK6N,EAAMrO,EAAGqO,EAAMf,MLnNnE4D,EKmNwE,EAAE7C,EAAMf,EAAE3K,WAAW,GAAG,GAAG0L,EAAMf,EAAE3K,WAAW,GAAG,GAAG0L,EAAMf,EAAE3K,WAAW,GAAG,EAAE0L,EAAMf,EAAE3K,YLlNzLuO,EAAQrP,KAAI,SAAArB,GAAG,OAAIyQ,EAAKzQ,SKoN7B,cAACqP,GAAD,CAAW9L,IAAuB,SAAjBsK,EAAMrO,EAAE+F,MAAmBsI,EAAMf,EAAEvJ,IAAMsK,EAAMrO,EAAE4D,SAAS,KAI3E,cAACkM,GAAD,CACEE,WAAc3C,EAAegB,EAAMrO,EAAGqO,EAAMf,GAC5C+C,SAAYhC,EAAMgC,SAClBrQ,EAAKqO,EAAMrO,IAEb,cAACwQ,GAAD,CACEC,MAASpC,EAAMrO,EAAES,QAAQ4N,EAAMf,EAAE3K,YAAYrB,KAAKO,KAhFhCyL,EAgFmDe,EAAMf,EA/ExE,SAAC/L,EAAMf,GAAP,mBAAC,eACHe,GADE,IAEL4N,SAAU7B,EAAEC,eAAiB/M,OA8E3BkQ,gBAAmB,SAAAlQ,GAAG,OAAI,kBAAM6N,EAAMhF,QAAQwE,YAAYrN,EAAK6N,EAAMrO,EAAES,QAAQ4N,EAAMf,EAAE3K,iBAEzF,cAACyL,EAAD,CAAUM,UAAS,UAAK,qBAAM9J,KAAKG,MAAMsJ,EAAMrO,EAAEgG,MAAM,KAApC,OAA0CqI,EAAMrO,EAAEgG,MAAQ,EAAI,EAA9D,UAAoEwI,UAAW,kBAAIH,EAAMhF,QAAQ2E,aAAa,cAAcS,MA1BlI,WACb,IAAIrB,EAAciB,EAAMf,EAAEF,YAAc,EACpCA,EAAc,GAAK,IACrBgE,MAAM,oCACN/C,EAAMhD,MAAMI,eAAe7G,KAAKyM,KAAKjE,EAAc,KAErDiB,EAAMhF,QAAQ4E,oBAwBlB,SAASqD,GAAKjD,GACZ,IAAIpM,EAAuC,GAAxBoM,EAAMpL,KAAKgB,UAAoB,yGAAyGsN,EAI3J,OAHIlD,EAAMvO,SACRmC,EAAcoM,EAAMvO,QAEf,sBAAKwO,UAAU,OAAf,UACL,qBAAKA,UAAU,wBAAwBvB,MAAO,CAACmC,OAASb,EAAMc,SAAU,yBAAoB1N,GAA5F,SACE,qBAAK6M,UAAU,cAAcxB,IAAK7K,MAEpC,qBAAKqM,UAAU,sBAAf,SAEE,sBAAKA,UAAU,YAAf,UACGD,EAAMpL,KAAKtD,KAAK,uBAChB0O,EAAMpL,KAAKrD,aAMpB,SAAS4R,GAAoB5R,GAC3B,IAAI6R,EAAoC,CAACC,EAAE7E,EAAO,GAAI8E,EAAE9E,EAAO,GAAI+E,EAAE/E,EAAO,IAC5E,OAAQjN,EAAgBiS,MAAM,IAAIhQ,KAAI,SAAAiQ,GAAI,OAAIL,EAAcK,GAAML,EAAcK,GAAMA,KA0BxF,IAAMC,GAA0D,CAC9Df,aACAgB,UAzBF,SAAmB3D,GAGjB,OAAO,sBAAKC,UAAU,QAAf,UACL,sBAAKA,UAAU,kBAAf,UACGD,EAAMrO,EAAE2G,aAAa5F,QAAO,SAAAkC,GAAI,OAAKA,EAAKK,eAAazB,KAAI,SAAAoB,GAAI,OAAI,cAACqO,GAAD,CAAMrO,KAAM,CAACtD,KAAMsD,EAAKtD,KAAMC,KAAK4R,GAAoBvO,EAAKrD,MAAOqE,UAAUhB,EAAKgB,gBACrJoK,EAAMrO,EAAES,QAAQ4N,EAAMf,EAAE3K,YAAY8D,MAAM5E,KAAI,SAAAoB,GAAI,OAAI,cAACqO,GAAD,CAAMrO,KAAM,CAACtD,KAAMsD,EAAKtD,KAAMC,KAAKqD,EAAKrD,KAAMqE,UAAUhB,EAAKgB,mBAEtH,wBAAQqK,UAAU,iBAAiBC,QAAS,kBAAMF,EAAMhF,QAAQ2E,aAAa,cAA7E,8BAkBFiE,WAdF,SAAoB5D,GAClB,OAAO,qBAAKC,UAAU,QAAf,SACL,qBAAKA,UAAU,kBAAf,SAGGD,EAAMrO,EAAES,QAAQoB,KAAI,SAAAV,GAAC,sBAASA,MAAKyH,MAAK,SAACC,EAAEC,GAAH,OAAOA,EAAEvI,MAAMsI,EAAEtI,SAAOsB,KAAI,SAAC3B,EAAQM,GAAT,OAAiB,cAAC8Q,GAAD,CAAMrO,KAAM,CAACtD,KAAK,GAAD,OAAKa,EAAI,EAAT,UAAeZ,KAAK,GAAD,OAAKM,EAAOK,MAAZ,WAAuBT,OAAQI,EAAOJ,OAAQqP,SAAUjP,EAAOJ,QAAUuO,EAAMrO,EAAES,QAAQ4N,EAAMf,EAAE3K,YAAY7C,kBAYtO,SAASoS,GAAM7D,GAA6B,IAAD,EAChC8D,mBAAiBjF,GADe,mBAC3CI,EAD2C,KACxC8E,EADwC,KAE5C/I,EAAUnF,GACZ,SAAA4H,GAAM,OAAI,sCAAIW,EAAJ,yBAAIA,EAAJ,uBAAoB2F,EAAKC,aAAQ,SAAA/E,GAAC,OAAIxB,EAAM,WAAN,GAAOwB,GAAP,OAAab,WAC7DmB,GAEEyC,EAAWnM,GACb,SAAA4H,GAAM,OAAI,sCAAIW,EAAJ,yBAAIA,EAAJ,uBAAoBX,EAAM,WAAN,GAAOuC,EAAMhD,MAAOhC,GAApB,OAAgCoD,OAC9DyB,GAEGlO,EAAiBqO,EAAjBrO,EAAGC,EAAcoO,EAAdpO,IAAKoL,EAASgD,EAAThD,MACTiH,EAA0B,CAC5BtS,IAAGC,MAAKoL,QAAOiC,IAAGjE,UAASgH,YA0D7B,OAxCAH,qBAAU,WACO,SAAXlQ,EAAE+F,OAA2C,GAAvB/F,EAAEuI,WAAWjG,QACrC+G,EAAQ2E,aAAa,eAEtB,CAAChO,EAAE+F,QAENmK,qBAAU,WACRkC,EAAK,2BAAI9E,GAAL,IAAQ3K,WAAY4P,SAASlE,EAAMmE,UAAY,QACnD1O,QAAQC,IAAR,eAAgBsK,IAChBvK,QAAQC,IAAR,4BAAiCsK,EAAMmE,YACzBnE,EAAMmE,UAAYnE,EAAMrO,EAAEiL,KAAO,SACbxJ,GAAlB4M,EAAMmE,YACpB1O,QAAQC,IAAI,oBACZsK,EAAMhD,MAAMC,eAAemH,WAE5B,IAKHvC,qBAAU,YACJ7B,EAAMrO,EAAEgG,OAAS,QAAiDvE,GAA5C4M,EAAMrO,EAAES,QAAQsB,MAAK,SAAAf,GAAC,OAAIA,EAAET,OAAS,QAC7D8I,EAAQ2E,aAAa,gBAEtB,CAACK,EAAMrO,EAAEgG,QAEZkK,qBAAU,WACRpM,QAAQC,IAAI,cAAesK,EAAMrO,EAAE8F,YACF,GAA7BuI,EAAMrO,EAAEuI,WAAWjG,QAAgC,SAAjB+L,EAAMrO,EAAE+F,QAC5CjC,QAAQC,IAAI,oBACZqM,YAAW,WACTC,EAAS/H,WACTxE,QAAQC,IAAI,YACX,QAEJ,CAACsK,EAAMrO,EAAEuI,WAAY8F,EAAMrO,EAAE8F,cAEeiM,GAAOzE,EAAEH,QAAU6D,IAGrDsB,G,UCpWFI,GAAc,SAACrE,GAAD,OACzB,qBAAKC,UAAU,QAAf,SACA,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,YAAYxB,IAAKuB,EAAMsE,aAExC,oBAAIrE,UAAU,QAAd,SAAwBD,EAAMuE,QAC9B,sBAAK7F,MAAO,CAACqC,QAAUf,EAAMwE,YAAQpR,EAAY,QAAjD,2BACM,mBAAGqR,KAAK,8CAA8CxE,UAAU,UAAhE,yCAELD,EAAM2B,WAAWnO,KAAI,SAAAsO,GAAS,OAAI,iCAAM,wBAAQ7B,UAAU,8BAA8BC,QAAS4B,EAAUpQ,OAAnE,SAA4EoQ,EAAUxQ,OAAc,mC,SCnBpIqC,I,MACb,CAAC,CAAC,eAAM,0EACR,CAAC,qBAAO,mFACR,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,mCAAW,2GACZ,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,IAAK,yDACN,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,UAAW,+DACZ,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,SAAK,iEACN,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,SAAK,iEACN,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,SAAK,iEACN,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,2BAAQ,4FACT,CAAC,2BAAQ,4FACT,CAAC,2BAAQ,4FACT,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,2BAAQ,4FACT,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eA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","file":"static/js/main.20dec316.chunk.js","sourcesContent":["import React from 'react';\nimport { ICard } from './types';\nimport { move, out, log_msg, add_fruits, flip_card } from './Game';\n\nexport const CARDS: ICard[] = [\n  {\n    name: \"炸弹\",\n    desc: \"嘣！\",\n    effect_type: \"aggressive\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/emojidex/112/bomb_1f4a3.png\",\n    effect(G, ctx, player) {\n      out(player);\n    },\n  },\n  {\n    name: \"护甲\",\n    desc: \"放入持续区，可抵挡1次出局\",\n    effect_type: \"protective\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\",\n    effect(G, ctx, player) {\n      player.entities.push(\"shield\");\n    },\n  },\n  {\n    name: \"白嫖\",\n    desc: \"获得1分\",\n    effect_type: \"greedy\",\n    has_fruit: true,\n    illust: \"https://s3.ax1x.com/2020/12/16/rQ2Eef.jpg\",\n    effect(G, ctx, player) {\n      player.score += 1;\n    },\n  },\n{\n    name: \"反向白嫖\",\n    desc: \"失去1分\",\n    // has_fruit: true,\n    effect_type: \"topdown\",\n    illust: \"https://s3.ax1x.com/2020/12/27/r4zS8H.jpg\",\n    effect(G, ctx, player) {\n      player.score -= 1;\n    },\n  },\n{\n    name: \"裸奔\",\n    desc: \"弃掉持续区的所有牌\",\n    // has_fruit: true,\n    effect_type: \"topdown\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/man-running_1f3c3-200d-2642-fe0f.png\",\n    effect(G, ctx, player) {\n      player.entities = [];\n    },\n  },\n  {\n    name: \"送温暖\",\n    desc: \"上家和下家各获得1分\",\n    effect_type: \"greedy\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/pot-of-food_1f372.png\",\n    effect(G, ctx, player) {\n      let idx = G.players.indexOf(player);\n      let upper_idx = (idx + 1) % 4;\n      let lower_idx = (idx + 3) % 4;\n      G.players[upper_idx].score += 1;\n      G.players[lower_idx].score += 1;\n    }\n  },\n  {\n    name: \"西红柿\",\n    desc: \"将2个西红柿放入持续区\",\n    effect_type: \"greedy\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/tomato_1f345.png\",\n    effect(G, ctx, player) {\n      // for (let i=0; i<2; i++){\n        // player.entities.push({fruit: 0});\n        add_fruits(G, ctx, player, [2,0,0]);\n      // }\n    }\n  },\n{\n    name: \"柠檬\",\n    desc: \"将2个柠檬放入持续区\",\n    effect_type: \"greedy\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/lemon_1f34b.png\",\n    effect(G, ctx, player) {\n      // for (let i=0; i<2; i++){\n        // player.entities.push({fruit: 1});\n        add_fruits(G, ctx, player, [0,2,0]);\n      // }\n    }\n  },\n{\n    name: \"苹果\",\n    desc: \"将2个苹果放入持续区\",\n    effect_type: \"greedy\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/green-apple_1f34f.png\",\n    effect(G, ctx, player) {\n      // for (let i=0; i<2; i++){\n      //   player.entities.push({fruit: 2});\n      // }\n      add_fruits(G, ctx, player, [0,0,2]);\n    }\n  },\n\n\n\n  {\n    name: \"集体拆弹\",\n    desc: \"所有其他玩家弃掉牌库顶的1张牌，每有1个弃掉炸弹的玩家，就获得1分\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/cityscape-at-dusk_1f306.png\",\n    effect(G, ctx, player) {\n      let other_players = G.players.filter(x => x != player && !x.out);\n      for (let p of other_players) {\n        let flipped = flip_card(p);\n        if (flipped && flipped.name == \"炸弹\") {\n          player.score += 1;\n        }\n      }\n    }\n  },\n  {\n    name: \"集体引爆\",\n    desc: \"所有其他玩家弃掉牌库顶的1张牌，弃掉炸弹的玩家出局，然后每有1个因此出局的玩家，就失去2分\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/collision_1f4a5.png\",\n    effect(G, ctx, player) {\n      let other_players = G.players.filter(x => x != player && !x.out);\n      for (let p of other_players) {\n        let flipped = flip_card(p);\n        if (flipped && flipped.name == \"炸弹\") {\n          out(p);\n          player.score -= 2;\n        }\n      }\n    }\n  },\n  {\n    name: \"集体存档\",\n    desc: \"所有其他玩家存档1张牌\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/night-with-stars_1f303.png\",\n    effect(G, ctx, player) {\n      let other_players = G.players.filter(x => x != player && !x.out);\n      for (let p of other_players) {\n        move(p.deck, p.hand);\n      }\n    }\n  },\n  {\n    name: \"鞋子\",\n    desc: \"获得1次跳过机会\",\n    has_fruit: true,\n    effect_type: \"protective\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/running-shoe_1f45f.png\",\n    effect(G, ctx, player) {\n      player.entities.push(\"skip\");\n    }\n  },\n{\n    name: \"存档\",\n    desc: \"存档1张牌\",\n    has_fruit: true,\n    effect_type: \"protective\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/whatsapp/273/floppy-disk_1f4be.png\",\n    effect(G, ctx, player) {\n      move(player.deck, player.hand);\n    },\n  },\n{\n    name: \"加速\",\n    desc: \"弃掉牌堆顶的1张牌，并执行其2次\",\n    has_fruit: true,\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/racing-car_1f3ce-fe0f.png\",\n    effect(G, ctx, player) {\n      let card = move(player.deck, player.discard);\n      if (card != undefined && card.effect != undefined) {\n        log_msg(G, ctx, <span>执行了 {card.name} 两次</span>);\n        card.effect(G, ctx, player);\n        card.effect(G, ctx, player);\n      }\n    },\n  },\n  {\n    name: \"拆弹\",\n    desc: \"查看牌堆顶的1张牌，如果是炸弹，将其弃掉并获得1分，否则放回牌库顶\",\n    has_fruit: true,\n    effect_type: \"protective\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/wrench_1f527.png\",\n    effect(G, ctx, player) {\n      let card = player.deck[0];\n      if (card != undefined) {\n        log_msg(G, ctx, <span>使用拆弹翻开 {card.name}</span>);\n        if (card.name == \"炸弹\") {\n          move(player.deck, player.discard);\n          player.score += 1;\n        }\n        else {\n          return;\n        }\n      }\n    }\n  },\n  {\n    name: \"引爆\",\n    desc: \"弃掉牌库顶的2张牌，如果其中有炸弹，则直接出局，否则获得1分\",\n    effect_type: \"aggressive\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/fire_1f525.png\",\n    effect(G, ctx, player) {\n      let discarded = G.deck.slice(0, 2);\n      player.deck = player.deck.slice(2);\n      player.discard = [...discarded, ...player.discard];\n      log_msg(G, ctx, <span>因为引爆弃掉了 {discarded.map(x => <span>{x.name} </span>)}</span>);\n      if (discarded.map(x => x.name).includes(\"炸弹\")) {\n        out(player);\n      }\n      else {\n        player.score += 1;\n      }\n    }\n  },\n\n  {\n    name: \"机会\",\n    desc: \"将2张山牌放到牌库顶\",\n    effect_type: \"topdown\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/game-die_1f3b2.png\",\n    effect(G, ctx, player) {\n      player.deck = [...G.deck.slice(0,2), ...player.deck];\n      G.deck = G.deck.slice(2);\n    }\n  },\n\n  {\n    name: \"果汁\",\n    desc: \"如果持续区有水果，则获得2分\",\n    effect_type: \"greedy\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/cup-with-straw_1f964.png\",\n    has_fruit: true,\n    effect(G, ctx, player) {\n      let fruit = player.entities.find(x => typeof x == \"object\");\n      if (fruit != undefined) {\n        player.score += 2;\n      }\n    }\n  },\n\n];","export const AVATARS = [\n\"https://s1.ax1x.com/2020/11/08/BI5SKA.png\",\n\"https://s1.ax1x.com/2020/11/08/BI5pDI.png\",\n\"https://s1.ax1x.com/2020/11/08/BI4xvd.png\",\n\"https://s1.ax1x.com/2020/11/08/BI4j8e.png\",\n\"https://s1.ax1x.com/2020/11/08/BI4vgH.png\",\n\"https://s1.ax1x.com/2020/11/08/BI59bt.png\",\n\"https://s1.ax1x.com/2020/11/08/BI5PVP.png\",\n\"https://s1.ax1x.com/2020/11/08/BI5iUf.png\",\n\"https://s1.ax1x.com/2020/11/08/BI5F58.png\",\n\"https://s1.ax1x.com/2020/11/08/BI5APS.png\",\n];\n\nexport const goal_illust = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/beer-mug_1f37a.png\";\n\nexport const public_goal_illust = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/green-salad_1f957.png\";","import { Ctx } from 'boardgame.io';\nimport React from 'react';\nimport { goal_illust, public_goal_illust } from './assets';\nimport { FRUITS } from './icons';\nimport { ICard, IGame, IPlayer } from './types';\n\nfunction score_based_on_fruit(player: IPlayer, fruit_idx: number) {\n  let num_fruit = player.entities.filter(x => ((typeof x == \"object\") && (x.fruit == fruit_idx))).length;\n  if (num_fruit >= 4) {\n    player.score += 7;\n  }\n  else if (num_fruit == 3) {\n    player.score += 4;\n  }\n  else if (num_fruit == 2) {\n    player.score += 2;\n  }\n  else {\n    return;\n  }\n}\n\nfunction process_goal(goal: ICard): ICard {\n  return {\n    ...goal,\n    is_goal: true,\n    illust: goal_illust,\n  };\n}\n\nfunction process_public_goal(goal: ICard): ICard {\n  return {\n    ...goal,\n    is_goal: true,\n    is_public: true,\n    illust: public_goal_illust,\n  };\n}\n\nexport const goals_raw: ICard[] = [\n  {\n    name: \"目标: 击杀上家\",\n    desc: \"如果上家已经出局，则获得3分\",\n    // stackable: true,\n    aggressive_goal: 3,\n    effect(G, ctx, player) {\n      let player_idx = G.players.indexOf(player);\n      let target_idx = (player_idx + 3) % 4;\n      let target = G.players[target_idx];\n\n      if (target.out == true) {\n        player.score += 3;\n      }\n    }\n  },\n{\n    name: \"目标: 击杀下家\",\n    desc: \"如果下家已经出局，则获得3分\",\n    // stackable: true,\n    aggressive_goal: 1,\n    effect(G, ctx, player) {\n      let player_idx = G.players.indexOf(player);\n      let target_idx = (player_idx + 1) % 4;\n      let target = G.players[target_idx];\n\n      if (target.out == true) {\n        player.score += 3;\n      }\n    }\n  },\n\n{\n    name: \"目标: 保上搞下\",\n    desc: \"如果上家依然存活且下家被击杀，则获得5分\",\n    aggressive_goal: 1,\n    protective_goal: 3,\n    effect(G, ctx, player) {\n      let player_idx = G.players.indexOf(player);\n      let protect_target = G.players[(player_idx + 3) % 4];\n      let eliminate_target = G.players[(player_idx + 1) % 4];\n\n      if (protect_target.out != true && eliminate_target.out == true) {\n        player.score += 5;\n      }\n    }\n  },\n{\n    name: \"目标: 保下搞上\",\n    desc: \"如果下家依然存活且上家被击杀，则获得5分\",\n    aggressive_goal: 3,\n    protective_goal: 1,\n    effect(G, ctx, player) {\n      let player_idx = G.players.indexOf(player);\n      let protect_target = G.players[(player_idx + 1) % 4];\n      let eliminate_target = G.players[(player_idx + 3) % 4];\n\n      if (protect_target.out != true && eliminate_target.out == true) {\n        player.score += 5;\n      }\n    }\n  },\n  // {\n  //   name: \"目标: 保护下家\",\n  //   desc: \"如果下家依然存活，则获得2分，否则失去1分\",\n  //   effect(G, ctx, player) {\n  //     let player_idx = G.players.indexOf(player);\n  //     let target_idx = (player_idx + 1) % 4;\n  //     let target = G.players[target_idx];\n  //     if (target.out != true) {\n  //       player.score += 2;\n  //     }\n  //     else {\n  //       player.score -= 1;\n  //     }\n  //   }\n  // },\n  // {\n  //   name: \"目标: 保护上家\",\n  //   desc: \"如果上家依然存活，则获得2分，否则失去1分\",\n  //   effect(G, ctx, player) {\n  //     let player_idx = G.players.indexOf(player);\n  //     let target_idx = (player_idx + 3) % 4;\n  //     let target = G.players[target_idx];\n  //     if (target.out != true) {\n  //       player.score += 2;\n  //     }\n  //     else {\n  //       player.score -= 1;\n  //     }\n  //   }\n  // },\n  {\n    name: \"目标: 西红柿\",\n    // desc: <span>如果你拥有2/3/4个{FRUITS[0]}，则获得2/4/7分</span>,\n    desc: \"如果你拥有2/3个西红柿，则获得2/4分\",\n    greedy_goal: 0,\n    effect(G, ctx, player) {\n      score_based_on_fruit(player, 0);\n    }\n  },\n{\n    name: \"目标: 柠檬\",\n    // desc: <span>如果你拥有2/3/4个{FRUITS[1]}，则获得2/4/7分</span>,\n    desc: \"如果你拥有2/3个柠檬，则获得2/4分\",\n    greedy_goal: 1,\n    effect(G, ctx, player) {\n      score_based_on_fruit(player, 1);\n    }\n  },\n{\n    name: \"目标: 青苹果\",\n    // desc: <span>如果你拥有2/3/4个{FRUITS[2]}，则获得2/4/7分</span>,\n    desc: \"如果你拥有2/3个苹果，则获得2/4分\",\n    greedy_goal: 2,\n    effect(G, ctx, player) {\n      score_based_on_fruit(player, 2);\n    }\n  },\n  {\n    name: \"目标: 存档\",\n    desc: \"如果你的存档中有1/2张牌，则获得2/5分\",\n    target_card: \"存档\",\n    effect(G, ctx, player) {\n      let num_archives = player.hand.length;\n      if (num_archives == 1) {\n        player.score += 2;\n      }\n      else if (num_archives >= 2) {\n        player.score += 5;\n      }\n      else {\n        return;\n      }\n    }\n  },\n  {\n    name: \"目标: 玩个刺激的\",\n    desc: \"如果你的弃牌堆中有\\\"引爆\\\"，则获得3分\",\n    target_card: \"引爆\",\n    effect(G, ctx, player) {\n      let card = player.discard.find(x => x.name == \"引爆\");\n      if (card != undefined) {\n        player.score += 3;\n      }\n    }\n  },\n  // {\n  //   name: \"目标: 机会\",\n  //   desc: \"如果你的弃牌堆中有\\\"机会\\\"，则获得2分\",\n  //   effect(G, ctx, player) {\n  //     let card = player.discard.find(x => x.name == \"机会\");\n  //     if (card != undefined) {\n  //       player.score += 2;\n  //     }\n  //   }\n  // },\n  // {\n  //   name: \"目标: 险中求胜\",\n  //   desc: \"如果你的弃牌堆中有\\\"炸弹\\\"，则获得2分\",\n  //   target_card: \"拆弹\",\n  //   effect(G, ctx, player) {\n  //     let boom = player.discard.find(x => x.name == \"炸弹\");\n  //     if (boom != undefined) {\n  //       player.score += 2;\n  //     }\n  //   }\n  // },\n  {\n    name: \"目标: 领导力\",\n    desc: \"如果你的弃牌堆中有\\\"集体\\\"类牌，则获得2分\",\n    effect(G, ctx, player) {\n      let leader = player.discard.find(x => x.name.includes(\"集体\"));\n      if (leader != undefined) {\n        player.score += 2;\n      }\n    }\n  },\n  \n  {\n    name: \"目标: 飞鞋\",\n    desc: \"如果你至少拥有2个\\\"鞋子\\\"，则获得2分\",\n    target_card: \"鞋子\",\n    effect(G, ctx, player) {\n      let shoes = player.entities.filter(x => x == \"skip\");\n      if (shoes.length >= 2) {\n        player.score += 2;\n      }\n    }\n  }\n  ,\n];\n\nexport const GOALS = goals_raw.map(process_goal);\n\nconst check_requirements = (requirements: number[], score: number) => (G: IGame, ctx: Ctx, player: IPlayer, self?: ICard) => {\n  if (self && !self.is_achieved) {\n    let fruits = player.entities.reduce((acc, val) => {\n      if (typeof val == \"object\") {\n        let new_acc = [...acc];\n        new_acc[val.fruit] += 1;\n        return new_acc;\n      }\n      else {\n        return acc;\n      }\n    }, [0,0,0]);\n    let diffs = fruits.map((cnt, idx) => (cnt - requirements[idx]) >= 0);\n    let agari = !diffs.includes(false);\n    // console.log(`D:${diffs}, F:${fruits}, A:${agari}`);\n    if (agari) {\n      player.score += score;\n      self.is_achieved = true;\n      G.gamelogs.unshift(\"和牌!\");\n      console.log(\"和牌\", self.desc, self.is_achieved);\n    }\n  }\n  else {\n    // console.log(\"Already achieved\");\n    return;\n  }\n}\n\nexport const public_goals_raw: ICard[] = [\n  {\n    name: \"公共目标(4分)\",\n    desc: \"AAA\",\n    effect: check_requirements([3,0,0], 4),\n    greedy_goal: 0,\n  },\n  {\n    name: \"公共目标(4分)\",\n    desc: \"BBB\",\n    effect: check_requirements([0,3,0], 4),\n    greedy_goal: 1,\n  },\n  {\n    name: \"公共目标(4分)\",\n    desc: \"CCC\",\n    effect: check_requirements([0,0,3], 4),\n    greedy_goal: 2,\n  },\n  {\n    name: \"公共目标(2分)\",\n    desc: \"AA\",\n    effect: check_requirements([2,0,0], 2),\n    greedy_goal: 0,\n  },\n  {\n    name: \"公共目标(2分)\",\n    desc: \"BB\",\n    effect: check_requirements([0,2,0], 2),\n    greedy_goal: 1,\n  },\n  {\n    name: \"公共目标(2分)\",\n    desc: \"CC\",\n    effect: check_requirements([0,0,2], 2),\n  },\n  {\n    name: \"公共目标(5分)\",\n    desc: \"ABC\",\n    effect: check_requirements([1,1,1], 5),\n    greedy_goal: 2,\n  },\n  // {\n  //   name: \"公共目标(3分)\",\n  //   desc: \"AAB\",\n  //   effect: check_requirements([2,1,0], 3),\n  // },\n  // {\n  //   name: \"公共目标(3分)\",\n  //   desc: \"ACC\",\n  //   effect: check_requirements([1,0,2], 3),\n  // },\n  // {\n  //   name: \"公共目标(3分)\",\n  //   desc: \"BBC\",\n  //   effect: check_requirements([0,2,1], 3),\n  // },\n  // {\n  //   name: \"公共目标(3分)\",\n  //   desc: \"归档区有2张牌\",\n  //   effect(G, ctx, player) {\n\n  //   },\n  // },\n];\n\nexport const PUBLIC_GOALS = public_goals_raw.map(process_public_goal);","import _ from 'lodash';\n\nexport function map_object<a,b>(fn: (arg: a, key?: string) => b, obj: Record<string,a>) {\n  let new_obj: Record<string,b> = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function reorder<a>(list: a[], indexes: number[]): a[] {\n  return indexes.map(idx => list[idx]);\n}\n\nexport function contain_key<a,b>(value: a, key: b) {\n  if (typeof value == \"object\" && key in value) {\n    return true;\n  }\n  else {\n    return false;\n  }\n}\n\nexport function rand(seed: string) {\n  let val = _.sum(seed.split(\"\").map((c, idx) => seed.charCodeAt(idx)));\n  let x = Math.sin(val++) * 10000;\n  return x - Math.floor(x);\n}\n\n\nexport class PRNG {\n  seed: string | number;\n  val: number;\n\n  constructor(seed: string | number, val?: number) {\n    this.seed = seed || 0;\n\n    if (val == undefined) {\n      this.val = 0;\n      if (typeof seed == \"string\"){\n        for (let i=0; i<seed.length; i++) {\n          this.val += seed.charCodeAt(i);\n        }\n      }\n      else {\n        this.val = seed;\n      }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n    }\n  else {\n    this.val = val;\n  }\n}\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x: number) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr: any[]) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck: any[]) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import React, { ReactNode as EL } from 'react';\nimport { ActivePlayers } from 'boardgame.io/core';\nimport _ from 'lodash';\nimport { Ctx, Move as GeneralMove } from 'boardgame.io';\nimport { INVALID_MOVE } from 'boardgame.io/core';\nimport { CARDS } from './cards';\n\nimport { IGame, ICard, IPlayer, IAction, FlipAction, ExecuteAction, ICardWeight, IBehaviour } from './types';\nimport { AVATARS } from './assets';\nimport { GOALS, PUBLIC_GOALS } from './goals';\nimport { PRNG } from './utils';\n\n// No \"turn based\" stuffs are used\n\nconst NUM_PLAYERS = 4;\n\ntype Move = (G: IGame, ctx: Ctx, ...args: any[]) => any;\n\nexport function move(deck1: ICard[], deck2: ICard[]) {\n  // This time, only procedure method, works\n  let card = deck1.splice(0, 1)[0];\n  if (card) {\n    deck2.unshift(card);\n    return card\n  }\n  else {\n    return undefined;\n  }\n}\n\nfunction init_deck(G:IGame, ctx: Ctx): ICard[] {\n  // let deck_data = \"\".split(\" \")\n  let deck_data = [..._.times(6, () => \"炸弹\"), ..._.times(4, () => \"护甲\"), ..._.times(3, () => \"白嫖\"), ..._.times(2, ()=>\"反向白嫖\"), ..._.times(2, () => \"拆弹\"),..._.times(2, () => \"引爆\"),..._.times(3, () => \"归档\"),..._.times(2, () => \"鞋子\"),..._.times(1, () => \"裸奔\"),..._.times(2, () => \"果汁\"),..._.times(2, () => \"送温暖\"),..._.times(1, () => \"西红柿\"),..._.times(1, () => \"柠檬\"),..._.times(1, () => \"苹果\"),..._.times(1, ()=>\"机会\"), \"集体拆弹\", \"集体归档\", \"果汁\"];\n  let deck = deck_data.map(name => CARDS.find(x => x.name == name)).filter(x => x != undefined).map(x => ({...x})) as ICard[];\n  for (let card of deck) {\n    if (card.has_fruit) {\n      card.fruit = G.rng.randRange(3);\n    }\n  }\n  return G.rng.shuffle(deck);\n}\n\nfunction setup_player(rng: PRNG): IPlayer {\n  const P: IPlayer = {\n    score: 0,\n    hand: [],\n    deck: [],\n    discard: [],\n    goals: [],\n\n    entities: [\"skip\"],\n\n    previous_action: -1,\n    previous_actions: [],\n\n    finished: false,\n    out: false,\n\n    // TODO: add goals\n\n    ai_behaviour: {\n      aggressive: rng.randRange(10),\n      protective: rng.randRange(10),\n      greedy: rng.randRange(10),\n      topdown: rng.randRange(10),\n      greedy_growth: rng.randRange(3),\n      protective_growth: rng.randRange(3),\n      topdown_growth: rng.randRange(5),\n    },\n  };\n\n  return P;\n}\n\nconst init_draft: Move = (G, ctx) => {\n  // After all cards are into the deck and deck is shuffled\n  for (let player of G.players) {\n    let num_cards = 7;\n    player.hand = G.deck.slice(0, num_cards);\n    G.deck = G.deck.slice(num_cards);\n\n    player.previous_actions = [];\n\n    if (player.preset_ai_behaviour) {\n      player.ai_behaviour = player.preset_ai_behaviour;\n    }\n  }\n\n};\n\nconst add_avatars: Move = (G, ctx) => {\n  let len = G.players.length;\n  // console.log(G.rng);\n  // console.log(G.rng.shuffle);\n  let avatars = G.rng.shuffle(AVATARS).slice(0, len);\n  for (let i=0; i<len; i++) {\n    G.players[i].illust = avatars[i];\n  }\n}\n\nconst init_goals: Move = (G, ctx) => {\n  let goals = G.rng.shuffle([...GOALS, ...GOALS.filter(x => x.stackable)]);\n\n  // Debug is 1, then change to 2\n  for (let i=0; i<G.players.length; i++) {\n    let player = G.players[i];\n    // player.goals = goals.slice(2*i, 2*i+2);\n    player.goals = goals.slice(i, i+1);\n  }\n\n  G.public_goals = G.rng.shuffle(PUBLIC_GOALS.map(g=>({...g, is_achieved: false}))).slice(0,2);\n}\n\nconst init_round: Move = (G, ctx) => {\n  // Reset values\n  G.num_places = 0;\n\n  // Reset the deck, pass the init player\n  G.phase = \"place\";\n  G.round += 1;\n  G.deck = init_deck(G, ctx);\n  G.init_player = (G.init_player + 1) % 4;\n\n  // Reset player data\n  for (let player of G.players) {\n    player.deck = [];\n    player.hand = [];\n    player.discard = [];\n    player.entities = [\"skip\"];\n    player.out = false;\n    player.finished = false;\n    player.previous_action = -1;\n  }\n\n  init_goals(G, ctx);\n  init_draft(G, ctx);\n}\n\n// This is just for init\nfunction setup(ctx: Ctx): IGame {\n  const rng = new PRNG(114514);\n  const G: IGame = {\n    deck: [],\n    players: _.times(NUM_PLAYERS, ()=>setup_player(rng)),\n    public_goals: [],\n    rng, \n    actions: [],\n    round: -1,\n    init_player: 0,\n    active_player_idx: 0,\n    next_action: \"place\",\n\n    phase: \"place\",\n\n    host: 0,\n    ai_players: [0,1,2,3].slice(ctx.numPlayers),\n    gamelogs: [],\n    num_places: 0,\n    num_moves: 0,\n\n    f1: () => \"f1\",\n    f2: () => \"f2\",\n  };\n\n  console.log(`How many Players AI: ${ctx.numPlayers} ${G.ai_players}`);\n  \n\n  return G;\n}\n\nexport const setup_scenario: Move = (G, ctx, seed) => {\n  G.rng = new PRNG(seed);\n  add_avatars(G, ctx);\n  init_ai_behaviour(G, ctx);\n  init_round(G, ctx);\n  // G.f2 = () => \"f12\";\n}\n\nexport const set_ai_players: Move = (G, ctx, num_ai) => {\n  G.ai_players = [0,1,2,3].slice(-num_ai);\n  console.log(\"New AI Players\", G.ai_players);\n}\n\nexport const init_ai_behaviour: Move = (G, ctx) => {\n  const BEHAVIOURS: IBehaviour[] = [\n    // Average greedy\n    {\n      aggressive: 5,\n      protective: 5,\n      topdown: 0,\n      greedy: 7,\n      protective_growth: 0,\n      topdown_growth: 1,\n      greedy_growth: 4,\n    },\n    // Protective growth\n    {\n      aggressive: 1,\n      protective: 4,\n      topdown: 3,\n      greedy: 5,\n      protective_growth: 6,\n      topdown_growth: 1,\n      greedy_growth: 1,\n    },\n    // Aggressive growing greedy\n    {\n      aggressive: 10,\n      protective: 10,\n      topdown: 2,\n      greedy: 7,\n      protective_growth: 0,\n      topdown_growth: 4,\n      greedy_growth: 6,\n    },\n    // Really greedy\n    {\n      aggressive: 1,\n      protective: 3,\n      topdown: 0,\n      greedy: 7,\n      protective_growth: 1,\n      topdown_growth: 0,\n      greedy_growth: 4,\n    },\n// Average with average growth\n    {\n      aggressive: 7,\n      protective: 7,\n      topdown: 1,\n      greedy: 10,\n      protective_growth: 5,\n      topdown_growth: 3,\n      greedy_growth: 4,\n    },\n// Topdown\n    {\n      aggressive: 7,\n      protective: 9,\n      topdown: 4,\n      greedy: 10,\n      protective_growth: 0,\n      topdown_growth: 6,\n      greedy_growth: 3,\n    },\n  ];\n  for (let i=0; i<4; i++) {\n    G.players[i].preset_ai_behaviour = G.rng.choice(BEHAVIOURS);\n  }\n}\n\nexport const set_ai_behaviours: Move = (G, ctx, behaviours: IBehaviour[]) => {\n  for (let i=0; i<4; i++) {\n    G.players[i].preset_ai_behaviour = behaviours[i];\n  }\n}\n\nexport function add_fruits(G:IGame, ctx:Ctx, player: IPlayer, fruits: number[]) {\n  for (let i=0; i<3; i++) {\n    for (let j=0; j<fruits[i]; j++) {\n      player.entities.push({fruit: i});\n    }\n  }\n  for (let goal of G.public_goals) {\n    (PUBLIC_GOALS.find(x => x.desc == goal.desc) as ICard).effect(G, ctx, player, goal);\n  }\n}\n\nfunction all_finished(G: IGame): boolean {\n  let unfinished_player = G.players.find(x => !(x.finished || x.out));\n  if (unfinished_player != undefined) {\n    return false;\n  }\n  else {\n    return true;\n  }\n}\n\nfunction get_next_idx(players: IPlayer[], current_idx: number): number {\n  let next_idx = (current_idx + 1) % (players.length);\n  if (players[next_idx].finished || players[next_idx].out) {\n    return get_next_idx(players, next_idx);\n  }\n  else {\n    return next_idx;\n  }\n}\n\nconst place: Move = (G, ctx, from_idx: number, card_idx: number, direction: number) => {\n  let from_player = G.players[from_idx];\n  let card = from_player.hand[card_idx];\n  from_player.hand = from_player.hand.filter(x => (x != card));\n\n  let to_player = G.players[(from_idx + direction) % G.players.length];\n  to_player.deck.unshift(card);\n\n  from_player.previous_action = direction;\n};\n\nconst ai_moves: Move = (G, ctx) => {\n  for (let idx of G.ai_players) {\n    // AI IMPLEMENT: card_idx and direction\n    // let card_idx = G.rng.randRange(G.players[idx].hand.length);\n    // let direction = G.rng.randRange(G.players.length);\n    let ai = G.players[idx];\n    let card_weights: ICardWeight[] = [];\n    for (let i=0; i<ai.hand.length; i++) {\n      card_weights.push({\n        weight: 0,\n        direction: [],\n      }); \n    }\n    let sorted_by_score = [...G.players].sort((a,b) => b.score - a.score);\n    let top = sorted_by_score[0];\n\n    // Growth\n    if (top == ai) {\n      // ai.ai_behaviour.topdown = 0;\n      top = sorted_by_score[1];\n    }\n\n    if (G.round >= 4) {\n      if (sorted_by_score.slice(0,2).includes(ai)) {\n        ai.ai_behaviour.topdown += ai.ai_behaviour.topdown_growth;\n        ai.ai_behaviour.protective += ai.ai_behaviour.protective_growth;\n      }\n      else {\n        ai.ai_behaviour.greedy += ai.ai_behaviour.greedy_growth;\n      }\n    }\n    let danger = 0;\n    for (let p of G.players) {\n      if (p.previous_action && ((G.players.indexOf(p)+p.previous_action) % 4 == idx)) {\n        danger += 1;\n      }\n    }\n    if (danger == 0) {\n      ai.ai_behaviour.greedy += ai.ai_behaviour.greedy_growth;\n    }\n    else {\n      // ai.ai_behaviour.greedy -= ai.ai_behaviour.protective_growth;\n      // ai.ai_behaviour.greedy = G.rng.randRange(10);\n      ai.ai_behaviour.greedy = ai.preset_ai_behaviour?.greedy || 0;\n      ai.ai_behaviour.protective_growth += ai.ai_behaviour.protective_growth;\n    }\n\n    // Aggressive goals\n    for (let goal of ai.goals) {\n      if (goal.aggressive_goal) {\n        for (let i=0; i<ai.hand.length; i++) {\n          let card = ai.hand[i];\n          let weight = card_weights[i];\n          if (card.effect_type == \"aggressive\") {\n            weight.weight += ai.ai_behaviour.aggressive + 10;\n            weight.direction.push(goal.aggressive_goal);\n          }\n        }\n      }\n      if (goal.greedy_goal) {\n        for (let i=0; i<ai.hand.length; i++) {\n          let card = ai.hand[i];\n          let weight = card_weights[i];\n          if (card.fruit == goal.greedy_goal) {\n            weight.weight += ai.ai_behaviour.greedy;\n            weight.direction.push(0);\n          }\n        }\n      }\n      if (goal.target_card) {\n        for (let i=0; i<ai.hand.length; i++) {\n          let card = ai.hand[i];\n          let weight = card_weights[i];\n          if (card.name == goal.target_card) {\n            weight.weight += ai.ai_behaviour.greedy;\n            weight.direction.push(0);\n          }\n        }\n      }\n    }\n    // Greedy\n    for (let i=0; i<ai.hand.length; i++) {\n      let card = ai.hand[i];\n      let weight = card_weights[i];\n      if (card.effect_type == \"greedy\") {\n        weight.weight += ai.ai_behaviour.greedy;\n        if (card.name != \"送温暖\") {\n          weight.direction.push(0);\n        }\n        else {\n          weight.direction.push(G.rng.choice([1,3]));\n        }\n      }\n    }\n    // Protective\n    for (let i=0; i<ai.hand.length; i++) {\n      let card = ai.hand[i];\n      let weight = card_weights[i];\n      if (card.effect_type == \"protective\") {\n        weight.weight += ai.ai_behaviour.protective;\n        weight.direction.push(0);\n      }\n    }\n    // Topdown\n    for (let i=0; i<ai.hand.length; i++) {\n      let card = ai.hand[i];\n      let weight = card_weights[i];\n      if (card.effect_type == \"topdown\" || card.effect_type == \"aggressive\") {\n        weight.weight += ai.ai_behaviour.topdown;\n        weight.direction.push((4 + G.players.indexOf(top) - idx)%4);\n      }\n    }\n    // Disturb\n    let to_disturb = [0,0,0,0];\n    to_disturb[idx] = -99;\n    for (let i=0; i<G.players.length; i++) {\n      let player = G.players[i];\n      for (let j=0; j<G.players.length; j++) {\n        if (i != j) {\n          let another_player = G.players[j];\n          for (let previous_action of another_player.previous_actions) {\n            if ((j + previous_action) % 4 == i) {\n              to_disturb[i] += 1;\n            }\n          }\n        }\n      }\n    }\n    let disturb_direction = (4 + ((to_disturb.indexOf(0) + 4) % 4) - idx) % 4;\n    for (let i=0; i<ai.hand.length; i++) {\n      let card = ai.hand[i];\n      let weight = card_weights[i];\n      if (card.effect_type == \"topdown\" || card.effect_type == \"aggressive\") {\n        weight.weight += ai.ai_behaviour.aggressive * ((7-ai.hand.length)/7);\n        weight.direction.push(disturb_direction);\n      }\n    }\n\n\n    let sorted_weights = [...card_weights];\n    sorted_weights.sort((a,b)=>b.weight - a.weight);\n    let card_idx = card_weights.indexOf(sorted_weights[0]);\n    let direction = 0;\n    if (sorted_weights[0].direction.length > 0) {\n      direction = G.rng.choice(sorted_weights[0].direction);\n    }\n\n    // console.log(\"Weights:\", card_weights);\n    if (direction == 0 && (ai.hand[card_idx].effect_type == \"aggressive\" || ai.hand[card_idx].effect_type == \"topdown\")) {\n      console.log(\"AI is doing something fool\");\n    }\n\n    G.actions.push({\n      from_idx: idx,\n      card_idx, \n      direction,\n    });\n  }\n};\n\nconst enter_action_phase: Move = (G, ctx) => {\n  G.phase = \"action\";\n\n  for (let player of G.players) {\n    // console.log(\"Deck before:\", player.deck.map(card=>({...card})));\n    player.deck = G.rng.shuffle(player.deck);\n    player.deck = [...player.deck, ...player.goals];\n    // console.log(player.deck);\n  }\n\n  G.next_action = \"flip\";\n  G.active_player_idx = G.init_player;\n  G.num_moves = 0;\n};\n\n\nconst change_hands_or_enter_action_phase: Move = (G, ctx) => {\n  let hands = G.players.map(player => player.hand);\n  let len = hands.length;\n  let num_remained_cards = hands[0].length;\n  // console.log(G.rng);\n  // console.log(\"Shuffle:\", G.rng.shuffle);\n  // console.log(\"F1:\", G.f1);\n  // console.log(\"F2:\", G.f2);\n\n  if (num_remained_cards == 0) {\n    console.log(\"Time to enter the action phase\");\n    enter_action_phase(G, ctx);\n  }\n\n  else {\n    console.log(\"Pass hands\");\n    hands = [hands[len-1], ...hands.slice(0, len-1)];\n    for (let i=0; i<len; i++) {\n      G.players[i].hand = hands[i];\n    }\n  }\n\n  for(let player of G.players) {\n    player.placed = false;\n  }\n};\n\nconst carry_actions: Move = (G, ctx) => {\n  for (let action of G.actions) {\n    place(G, ctx, action.from_idx, action.card_idx, action.direction);\n    G.players[action.from_idx].previous_actions!.push(action.direction);\n  }\n  G.actions = [];\n  G.num_places += 1;\n\n  change_hands_or_enter_action_phase(G, ctx);\n};\n\nconst add_action: Move = (G, ctx, action?: IAction) => {\n  if (action != undefined) {\n    G.actions.push(action);\n    G.players[action.from_idx].placed = true;\n\n    // let host move\n    let from_idx = action.from_idx;\n    if (from_idx == G.host) {\n      ai_moves(G, ctx);\n    }\n    // console.log(`Actions length: ${G.actions.length}`);\n  }\n\n  // Check whether it's full\n  if (G.actions.length == G.players.length) {\n    carry_actions(G, ctx);\n  }\n};\n\nexport function flip_card(active_player: IPlayer) {\n  let card = active_player.deck[0];\n  if (card != undefined) {\n    active_player.deck = active_player.deck.slice(1);\n    active_player.discard.unshift(card);\n  }\n  return card;\n}\n\nexport function out(player: IPlayer) {\n  let shield_idx = player.entities.map((x,idx) => (x == \"shield\")? idx : undefined).filter(x => x != undefined)[0];\n  console.log(\"Find shield:\", shield_idx);\n  if (shield_idx != undefined) {\n    player.entities = player.entities.filter((x,idx) => (idx != shield_idx));\n  }\n  else {\n    console.log(`Player ${player.score}分 is out`)\n    player.out = true;\n    player.finished = true;\n  }\n}\n\n// const enter_place_phase: Move = (G, ctx) => {\n//   G.phase = \"place\";\n//   // EH: Reconstruct this into reset instead of just copy all setup stuffs\n\n//   G.round += 1;\n//   G.init_player = (G.init_player + 1) % 4;\n\n//   for (let player of G.players) {\n//     G.deck = [...G.deck, ...player.discard, ...player.hand, ...player.deck];\n\n//     player.deck = [];\n//     player.hand = [];\n//     player.discard = [];\n//     player.entities = [\"skip\"];\n//     player.out = false;\n//     player.finished = false;\n//     player.previous_action = undefined;\n//   }\n\n//   G.deck = G.rng.shuffle(G.deck);\n\n//   init_draft(G, ctx);\n// };\n\nconst enter_place_phase: Move = (G, ctx) => {\n  init_round(G, ctx);\n}\n\nconst proceed: Move = (G, ctx, skipped?: boolean) => {\n  G.num_moves += 1;\n  if (G.next_action == \"execute\" || skipped) {\n    // Check whether end the action phase, or pass to the next player\n    // Or say that pass to the next player, and if there's nobody to pass, then enter the action phase\n    if (all_finished(G)) {\n      enter_place_phase(G, ctx);\n    }\n    else {\n      let next_idx = get_next_idx(G.players, G.active_player_idx);\n      G.active_player_idx = next_idx;\n      G.next_action = \"flip\";\n    }\n  }\n\n  else {\n    G.next_action = \"execute\";\n  }\n};\n\nconst flip: Move = (G, ctx, player_idx: number, flip_action: FlipAction) => {\n  // Double check is fine\n  if (G.next_action == \"flip\" && G.active_player_idx == player_idx) {\n    let active_player = G.players[G.active_player_idx];\n    let skipped = false;\n    let skipper = active_player.entities.find(x => x == \"skip\");\n\n    if (flip_action == \"skip\" && skipper != undefined) {\n      let skipper_idx = active_player.entities.indexOf(skipper);\n      flip_card(active_player);\n      active_player.entities.splice(skipper_idx, 1);\n      skipped = true;\n      log_msg(G, ctx, `选择跳过`);\n      // Check finished here as finished is only checked after execute before\n      if (active_player.deck.length == 0) {\n        active_player.finished = true;\n      }\n    }\n\n    // EH: Write this in \"utils\" to make it more haskell-styled\n    else if (typeof(flip_action) == \"object\" && \"archive_idx\" in flip_action) {\n      let archive = active_player.hand[flip_action.archive_idx];\n      if (archive != undefined) {\n        active_player.hand = active_player.hand.filter(x => x != archive);\n        active_player.discard.unshift(archive);\n      }\n      else {\n        return INVALID_MOVE;\n      }\n    }\n\n    // Normal flip goes here\n    else {\n      flip_card(active_player);\n      console.log(\"翻开牌\", active_player.discard[0].name);\n      log_msg(G, ctx, `翻开 ${active_player.discard[0].name}`);\n    }\n\n    proceed(G, ctx, skipped);\n    \n  }\n  else {\n    return INVALID_MOVE;\n  }\n};\n\nconst execute: Move = (G, ctx, player_idx: number, execute_action: ExecuteAction) => {\n  if (player_idx == G.active_player_idx) {\n    let player = G.players[G.active_player_idx];\n    let card = player.discard[0];\n    console.log(`${player_idx} is executing`);\n    if (execute_action == \"fruit\") {\n      console.log(\"Gonna add fruit\");\n      if (card.fruit != undefined) {\n        // player.entities.push({fruit: card.fruit});\n        let added = [0,0,0];\n        added[card.fruit] = 1;\n        add_fruits(G, ctx, player, added);\n        log_msg(G, ctx, `将 ${card.name} 作为水果`);\n      }\n      else {\n        return INVALID_MOVE;\n      }\n    }\n    else {\n      console.log(`Just execute ${card.name}`);\n      // Add functions\n      card = (card.is_goal?GOALS:CARDS).find(x => x.name == card.name) as ICard;\n      // console.log({...card});\n      card.effect && card.effect(G, ctx, player, card);\n      log_msg(G, ctx, `执行 ${card.name}`);\n    }\n\n    // Check finished\n    // EH: move all \"finished\" into a getter function, just check whether is out or deck length is 0, this is the best way to \"finish\"\n    player.finished = (player.out || (player.deck.length == 0));\n\n    proceed(G, ctx);\n  }\n  else {\n    return INVALID_MOVE;\n  }\n};\n\nconst ai_act: Move = (G, ctx, from_idx: number) => {\n  if (G.ai_players.includes(G.active_player_idx) && (G.host == from_idx)) {\n    let ai = G.players[G.active_player_idx];\n    if (G.next_action == \"flip\") {\n      // AI IMPLEMENT: Flip action and execute action\n      let flip_action: FlipAction = \"flip\";\n\n      // Play archive\n      if (ai.hand.length > 0) {\n        let archive = ai.hand[0];\n        if (archive.effect_type != \"aggressive\" && archive.effect_type != \"topdown\" && ai.goals[0].target_card != \"归档\") {\n          flip_action = {archive_idx: 0};\n        }\n      }\n\n      // Skip if protective is more important\n      if ((ai.entities.includes(\"skip\")) && \n      (ai.deck.length > 1) && \n      (ai.deck.length < 5) && \n      (ai.goals[0].target_card != \"鞋子\") &&\n      (ai.ai_behaviour.protective > ai.ai_behaviour.greedy) && \n      (!ai.entities.includes(\"shield\"))) {\n        console.log(`It's skip time! ${ai.deck.length} ${ai.entities}`);\n        flip_action = \"skip\";\n      }\n\n      flip(G, ctx, G.active_player_idx, flip_action);\n    }\n    else if (G.next_action == \"execute\") {\n      let execute_action: ExecuteAction = \"execute\";\n      // console.log(`AI Act: Greedy ${ai.ai_behaviour.greedy} Protective ${ai.ai_behaviour.protective}`)\n      if (ai.ai_behaviour.greedy > ai.ai_behaviour.protective && \n        [...G.public_goals.filter(g => !g.is_achieved).map(g => g.greedy_goal), ai.goals[0].greedy_goal].filter(g => g != undefined).includes(ai.discard[0].fruit)) {\n        console.log(`It's fruit time! ${[...G.public_goals.map(g => g.greedy_goal), ai.goals[0].greedy_goal]} ${ai.discard[0].fruit}`);\n        execute_action = \"fruit\"\n      }\n      execute(G, ctx, G.active_player_idx, execute_action);\n    }\n    else {\n      return INVALID_MOVE;\n    }\n  }\n  else {\n    return INVALID_MOVE;\n  }\n};\n\nexport const log_msg: Move = (G, ctx, msg: string) => {\n  G.gamelogs.unshift(msg);\n}\n\nexport const CSPR = {\n  setup: setup,\n  moves: {\n    setup_scenario,\n    set_ai_players,\n    set_ai_behaviours,\n    add_action,\n    flip,\n    execute,\n    ai_moves,\n    ai_act,\n    log_msg,\n  },\n  minPlayers: 1,\n  maxPlayers: 4,\n  turn: {\n    activePlayers: ActivePlayers.ALL,\n  },\n  plugins: [\n    {\n      name: \"rng\",\n      fnWrap: (fn:any) => (G:IGame, ctx:Ctx, ...args:any[]) => {\n        G = fn({...G, rng: new PRNG(114514, G.rng.val)}, ctx, ...args);\n        return G;\n      }\n    },\n  ],\n};","import React, { ReactNode } from 'react';\nimport { Entity } from './types';\n\n// import './icons.css';\nimport { contain_key } from './utils';\n\nconst fruit_style = {\n  height: \"auto\",\n  width: \"1.0em\",\n};\n\nexport const FRUITS: ReactNode[]= [\n  \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/tomato_1f345.png\",\n  \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/lemon_1f34b.png\",\n  \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/green-apple_1f34f.png\",\n].map(src => <img src={src} style={fruit_style} />);\n\nexport const shield_icon = <img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\" style={fruit_style} />;\n\nexport const skip_icon = <img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/running-shoe_1f45f.png\" style={fruit_style} />;\n\nexport function get_entity_icon(entity: Entity): ReactNode {\n  if (typeof entity == \"object\") {\n    return FRUITS[entity.fruit];\n  }\n  else if (entity == \"shield\") {\n    return shield_icon;\n  }\n  else {\n    return skip_icon;\n  }\n}","import React from 'react';\nimport { IState, Action, Phase, IOperation, IGame, ICard, FlipAction, IPlayer } from './types'\n\nexport function init_state(): IState {\n  return {\n    board: \"GoalBoard\",\n    player_idx: 0,\n    log: \"\",\n    dream_count: 0,\n  };\n}\n\nconst change_hand_selected: Action = (S, idx: number) => {\n  if (S.hand_selected == idx) {\n    S.hand_selected = undefined;\n  }\n  else {\n    S.hand_selected = idx;\n  }\n}\n\nfunction get_place_operations(from_idx: number, card_idx: number): IOperation[] {\n  let directions = [0, 1, 3, 2];\n  let names = [\"自己\", \"下家\", \"上家\", \"对家\"];\n\n  return directions.map((direction, idx) => ({\n    name: names[idx],\n    action: \"add_place_action\",\n    args: [from_idx, card_idx, direction],\n  }));\n}\n\n// const change_operations_on_select_hand: Action = (S, should_change: boolean) => {\n//   if (should_change) {\n//     if (S.hand_selected != undefined) {\n//       S.operations = get_place_operations(S.player_idx, S.hand_selected);\n//     }\n//     else {\n//       S.operations = [];\n//     }\n//   }\n//   else {\n//     console.log(\"Should not change\");\n//     return;\n//   }\n// }\n\nexport function get_operations(G: IGame, S: IState): IOperation[] {\n  let player = G.players[S.player_idx];\n  if (G.phase == \"place\") {\n    if (!player.placed && S.hand_selected != undefined) {\n      return get_place_operations(S.player_idx, S.hand_selected);\n    }\n    else {\n      return [];\n    }\n  }\n  else {\n    if (G.active_player_idx == S.player_idx) {\n      if (S.player_idx == G.host && G.ai_players.includes(G.active_player_idx)) {\n        return [\n          {\n            name: \"行动\",\n            action: \"ai_act\",\n            args: [S.player_idx],\n          }\n        ];\n      }\n      if (G.next_action == \"flip\") {\n        let flip_actions: IOperation[] = [\n          {name: \"翻开\", action: \"flip\", args: [S.player_idx, \"flip\"]},\n        ];\n        if (player.entities.includes(\"skip\")) {\n          flip_actions.push({name: \"跳过\", action: \"flip\", args: [S.player_idx, \"skip\"]});\n        }\n        if ((player.hand.length > 0) && (S.hand_selected != undefined)) {\n          flip_actions.unshift({name: \"打出存档\", action: \"flip\", args: [S.player_idx, {archive_idx: S.hand_selected}]});\n        }\n        return flip_actions;\n      }\n      else {\n        let execute_actions: IOperation[] = [\n          {name: \"执行\", action: \"execute\", args: [S.player_idx, \"execute\"]},\n        ];\n        let top_card = player.discard[0];\n        if (top_card.fruit != undefined) {\n          execute_actions.push({name: \"作为水果\", action: \"execute\", args: [S.player_idx, \"fruit\"]});\n        }\n        return execute_actions;\n      }\n    }\n    else {\n      if (S.player_idx == G.host && G.ai_players.includes(G.active_player_idx)) {\n        return [\n          {\n            name: \"行动\",\n            action: \"ai_act\",\n            args: [S.player_idx],\n          }\n        ];\n      }\n      else {\n        return [];\n      }\n    }\n  }\n}\n\nconst select_hand: Action = (S, idx: number, player: IPlayer) => {\n  change_hand_selected(S, idx);\n  let card = player.hand[idx];\n  if (!player.placed) {\n    log_msg(S, <span>{card.name}: {card.desc}</span>);\n  }\n}\n\nconst clear_state: Action = (S) => {\n  S.hand_selected = undefined;\n  // log_msg(S, \"已扣牌\");\n}\n\nconst change_board: Action = (S, board) => {\n  S.board = board;\n}\n\nconst log_msg: Action = (S, msg) => {\n  S.log = msg;\n}\n\nconst enter_dream: Action = (S) => {\n  S.dream_count += 1;\n}\n\nexport const ACTIONS: Record<string, Action> = {\n  select_hand,\n  clear_state,\n  change_board,\n  log_msg,\n  enter_dream,\n};","import { CombinedAction, Dispatcher, ExecuteAction, FlipAction, IState } from './types';\n\n// EH: Should be able to wait when a value is changed then make move, not only combine those things\nconst add_place_action: CombinedAction = (moves, actions, from_idx: number, card_idx: number, direction: number) => {\n  moves.add_action({from_idx, card_idx, direction});\n  actions.clear_state();\n};\n\nconst ai_act: CombinedAction = (moves, actions, from_idx: number) => {\n  moves.ai_act(from_idx);\n};\n\nconst ai_moves: CombinedAction = (moves, actions, from_idx: number) => {\n  moves.ai_moves(from_idx);\n  moves.add_action();\n};\n\nconst flip: CombinedAction = (moves, actions, player_idx: number, flip_action: FlipAction) => {\n  moves.flip(player_idx, flip_action);\n}\n\n\nconst execute: CombinedAction = (moves, actions, player_idx: number, execute_action: ExecuteAction) => {\n  moves.execute(player_idx, execute_action);\n}\n\n// const select_hand: CombinedAction = (moves, actions, hand_idx: number) => {\n//   actions.select_hand(hand_idx);\n//   moves.show_hand_info(hand_idx);\n// }\n\nexport const COMBINED: Record<string, CombinedAction> = {\n  add_place_action,\n  ai_act,\n  flip,\n  execute,\n  ai_moves,\n  // select_hand,\n};","import React, { ReactNode as EL, FC, useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { AVATARS } from './assets';\n\nimport './Board.css';\n\nimport { ICard, IPlayer, IGame, IState, Action, IOperation, Dispatcher, CombinedAction, BoardProps } from './types';\nimport { FRUITS, get_entity_icon } from './icons';\nimport { Ctx } from 'boardgame.io';\nimport { BoardProps as BGBoardProps } from 'boardgame.io/react';\nimport { CARDS } from './cards';\nimport { ACTIONS, get_operations, init_state } from './actions';\nimport { map_object, reorder } from './utils';\nimport { COMBINED } from './combiner';\nimport { goal_illust as goal_illust_src } from './assets';\n\nfunction TopPanel(props: {gameCount: string|number, checkGoal:()=>void, addAI:()=>void}) {\n  return <div className=\"top-panel\">\n    <button className=\"check-goal-button\" onClick={props.checkGoal} >查看目标</button>\n    <div onClick={props.addAI}>{props.gameCount}</div>\n  </div>;\n}\n\nfunction DeckArea(props: {cardNum: number}) {\n  return <div className=\"deck-area\">\n    <div className=\"card-num\">\n      {props.cardNum}\n    </div>\n  </div>;\n}\n\nfunction PlayArea(props: {playedCard?: ICard}) {\n  return <div className=\"play-area\">\n    <Card {...props.playedCard} />\n  </div>;\n}\n\nfunction CardAreas(props: {cardNum: number, playedCard?: ICard}) {\n  // Both draw pile and discard pile go together,\n  // Also, Card should be 100% and be contained with card containers\n  return <div className=\"card-areas\">\n    <DeckArea cardNum={props.cardNum} />\n    <PlayArea playedCard={props.playedCard} />\n  </div>;\n}\n\nfunction Avatar(props: {illust?: string, selected?: boolean, out?: boolean, placed?: boolean}) {\n  return <div className=\"avatar\" style={{border:(props.selected)?\"3px solid #61dafb\":(props.out)?\"1px solid #f5222d\":undefined}}>\n    <img src={props.illust} className=\"avatar-img\" />\n    <img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/check-mark-button_2705.png\" className=\"tick-icon\" style={{display: props.placed? undefined : \"none\"}} />\n  </div>;\n}\n\nfunction InfoLine(props: {content: string|EL}) {\n  return <div className=\"info-line\" style={{color: (props.content==\"扣给你\")?\"#61dafb\":undefined}}>\n    {props.content}\n  </div>;\n}\n\n// TODO: Make an adapter to fit those two\nexport interface IPlayerInfo extends IPlayer {\n  selected?: boolean, \n  name: string, \n  info: string | EL[],\n};\n\nfunction PlayerInfo(props: IPlayerInfo) {\n  return <div className=\"player-info\">\n    <Avatar illust={props.illust} selected={props.selected} out={props.out} placed={props.placed} />\n    <InfoLine content={`${props.name}(${props.score}分)`} />\n    <InfoLine content={props.info}/>\n  </div>;\n}\n\nfunction Player(props: {playerInfo: IPlayerInfo}) {\n  return <div className=\"player\">\n    <CardAreas cardNum={props.playerInfo.deck.length} playedCard={props.playerInfo.discard[0]} />\n    <PlayerInfo {...props.playerInfo} />\n  </div>;\n}\n\nfunction Central(props: {players: IPlayerInfo[]}) {\n  return <div className=\"central\">\n    {props.players.map(player => \n    // illust name score info\n      <Player playerInfo={player} />\n    )}\n  </div>;\n}\n\nfunction InfoPanel(props: {log: string}) {\n  // Top panel is only used to display count, all other logs are displayed in info panel\n  // useEffect(()=>console.log(props.log), [props.log]);\n  return <div className=\"info-panel\">\n    {props.log}\n  </div>;\n}\n\nfunction Controller(props: {operations: IOperation[], combined: Record<string, Dispatcher>, autoMove?: boolean, G:IGame}) {\n  // Use this method at first, and props.autoMove is only used when needed\n  let move1 = props.operations[0];\n  let autoMove = move1 && (move1.name == \"行动\");\n  useEffect(() => {\n    if (autoMove == true) {\n      let operation = props.operations[0];\n      console.log(`Ready to auto_move ${props.G.active_player_idx} ${props.G.next_action}`);\n      setTimeout(()=>{\n        props.combined[operation.action](...(operation.args || []));\n      }, 600);\n    }\n    else {\n      return;\n    }\n  }, [props.G.active_player_idx, props.G.next_action, props.G.num_moves]);\n\n  let operations = (autoMove)? [] : props.operations;\n\n  return <div className=\"controller\">\n    {operations.map(operation => \n      <button className=\"controller-button\" onClick={() => props.combined[operation.action](...(operation.args || []))}>{operation.name}</button>\n    )}\n  </div>;\n}\n\nfunction Card(props: Partial<ICard>) {\n  return <div className=\"card\">\n    <div className=\"illust-container\">\n      <img className=\"illust\" src={props.illust} />\n    </div>\n    <div className=\"card-fruit\" style={{display:(props.fruit != undefined)?undefined:\"none\"}}>{(props.fruit != undefined)? FRUITS[props.fruit] : \"\"}</div>\n  </div>;\n}\n\nfunction CardContainer(props: {card: Partial<ICard>, handleClick: ()=>void}) {\n  return <div \n    className = \"card-container\" \n    style = {{border:(props.card.selected == true)?\"3px solid #61dafb\":undefined}}\n    onClick = {props.handleClick}\n  >\n    <Card {...props.card} />\n  </div>;\n}\n\nfunction CardRow(props: {cards: ICard[], handleCardClick: (idx: number)=>()=>void}) {\n  return <div className=\"card-row\">\n    {props.cards.map((card, idx) => <CardContainer card={card} handleClick={props.handleCardClick(idx)} />)}\n  </div>;\n}\n\nfunction Template(props: {}) {\n  return <div className=\"template\">\n  </div>;\n}\n\nfunction hand_processor(S: IState): (card: ICard, idx: number) => ICard {\n  return (card, idx) => ({\n    ...card,\n    selected: S.hand_selected == idx,\n  });\n}\n\nfunction get_player_info(player: IPlayer, G: IGame, S: IState): string | EL[] {\n  if (G.phase == \"place\") {\n    if (player.previous_action != -1) {\n      let target_idx = (G.players.indexOf(player) + player.previous_action) % 4;\n      if (target_idx == S.player_idx && player.previous_action != 0) {\n        return \"扣给你\";\n      }\n      else {\n        return [\"扣给自己\", \"扣给下家\", \"扣给对家\", \"扣给上家\",][player.previous_action];\n      }\n    }\n    else {\n      return \"准备扣牌\";\n    }\n  }\n  else {\n    if (player.finished) {\n      if (player.out) {\n        return \"已出局\";\n      }\n      else {\n        return \"已完成\";\n      }\n    }\n    else {\n      return player.entities.map(entity => get_entity_icon(entity));\n    }\n  }\n}\n\nfunction get_position(idx: number, player_idx: number) {\n  let diff = idx - player_idx;\n  if (diff < 0) {\n    return 4 + diff;\n  }\n  else {\n    return diff;\n  }\n}\n\nfunction process_player(player: IPlayer, idx: number, G: IGame, S: IState): IPlayerInfo {\n  return {\n    ...player,\n    name: [\"玩家\", \"下家\", \"对家\", \"上家\"][get_position(idx, S.player_idx)],\n    info: get_player_info(player, G, S),\n    selected: (G.phase == \"action\") && (idx == G.active_player_idx),\n  };\n}\n\nfunction GameBoard(props: BoardProps){\n  const add_ai = () => {\n    let dream_count = props.S.dream_count + 1;\n    if (dream_count % 3 == 2) {\n      alert(\"增加了一个AI\");\n      props.moves.set_ai_players(Math.ceil(dream_count / 3));\n    }\n    props.actions.enter_dream();\n  }\n\n  return <div className=\"board\">\n    <Central \n      players = {reorder(props.G.players.map((player, idx) => process_player(player, idx, props.G, props.S)), [(props.S.player_idx+2)%4,(props.S.player_idx+3)%4,(props.S.player_idx+1)%4,props.S.player_idx])}\n    />\n    <InfoPanel log={(props.G.phase == \"place\")? props.S.log : props.G.gamelogs[0]} />\n    {/* <InfoPanel log=\"这是一条log\" /> */}\n    {/* <InfoPanel log={props.S.log} /> */}\n    {/* <InfoPanel log={props.G.gamelog} /> */}\n    <Controller \n      operations = {get_operations(props.G, props.S)}\n      combined = {props.combined}\n      G = {props.G}\n    />\n    <CardRow \n      cards = {props.G.players[props.S.player_idx].hand.map(hand_processor(props.S))}  \n      handleCardClick = {idx => () => props.actions.select_hand(idx, props.G.players[props.S.player_idx])}\n    />\n    <TopPanel gameCount={`${\"東南西\"[Math.floor(props.G.round/4)]}${props.G.round % 4 + 1}局`} checkGoal={()=>props.actions.change_board(\"GoalBoard\")} addAI={add_ai} />\n  </div>;\n}\n\nfunction Goal(props: {goal: Partial<ICard>, illust?: string, selected?: boolean}) {\n  let goal_illust = (props.goal.is_public == true)? \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/green-salad_1f957.png\":goal_illust_src;\n  if (props.illust) {\n    goal_illust = props.illust;\n  }\n  return <div className=\"goal\">\n    <div className=\"goal-illust-container\" style={{border: (props.selected)?\"3px solid #52c41a\":undefined}}>\n      <img className=\"goal-illust\" src={goal_illust} />\n    </div>\n    <div className=\"goal-desc-container\">\n      {/*props.goal.name <br/> props.goal.desc*/}\n      <div className=\"goal-desc\">\n        {props.goal.name}<br/>\n        {props.goal.desc}\n      </div>\n    </div>\n  </div>;\n}\n\nfunction process_public_goal(desc: string|EL): EL {\n  let fruits_lookup: Record<string, EL> = {A:FRUITS[0], B:FRUITS[1], C:FRUITS[2]};\n  return (desc as string).split(\"\").map(char => fruits_lookup[char]?fruits_lookup[char]:char);\n}\n\nfunction GoalBoard(props: BoardProps) {\n  // console.log(\"All publics:\", props.G.public_goals);\n  // console.log(\"Unachieved:\", props.G.public_goals.filter(goal => !goal.is_achieved));\n  return <div className=\"board\">\n    <div className=\"goals-container\">\n      {props.G.public_goals.filter(goal => !goal.is_achieved).map(goal => <Goal goal={{name: goal.name, desc:process_public_goal(goal.desc), is_public:goal.is_public}} />)}\n      {props.G.players[props.S.player_idx].goals.map(goal => <Goal goal={{name: goal.name, desc:goal.desc, is_public:goal.is_public}}/>)}\n    </div>\n    <button className=\"gb-back-button\" onClick={() => props.actions.change_board(\"GameBoard\")} >返回</button>\n  </div>;\n}\n\nfunction FinalBoard(props: BoardProps) {\n  return <div className=\"board\">\n    <div className=\"goals-container\">\n      {/* {props.G.public_goals.filter(goal => !goal.is_achieved).map(goal => <Goal goal={{name: goal.name, desc:process_public_goal(goal.desc), is_public:goal.is_public}} />)} */}\n      {/* {props.G.players[props.S.player_idx].goals.map(goal => <Goal goal={{name: goal.name, desc:goal.desc, is_public:goal.is_public}}/>)} */}\n      {props.G.players.map(p => ({...p})).sort((a,b)=>b.score-a.score).map((player, idx) => <Goal goal={{name: `${idx+1}位`, desc: `${player.score}分`}} illust={player.illust} selected={player.illust == props.G.players[props.S.player_idx].illust} />)}\n    </div>\n    {/* <button className=\"gb-back-button\" onClick={() => props.actions.change_board(\"GameBoard\")} >返回</button> */}\n  </div>;\n}\n\nconst BOARDS: Record<string, (props:BoardProps)=>JSX.Element> = {\n  GameBoard,\n  GoalBoard,\n  FinalBoard,\n};\n\nexport function Board(props: BGBoardProps<IGame>) {\n  let [S, setS] = useState<IState>(init_state);\n  let actions = map_object<Action, Dispatcher>(\n    action => (...args: any[]) => setS(produce(S => action(S, ...args))), \n    ACTIONS,\n  );\n  let combined = map_object<CombinedAction, Dispatcher>(\n    action => (...args: any[]) => action(props.moves, actions, ...args),\n    COMBINED,\n  );\n  let {G, ctx, moves} = props;\n  let board_props: BoardProps = {\n    G, ctx, moves, S, actions, combined,\n  };\n\n  // Show hand info\n  // Don't use useEffect to change the log, a strange bug may happen\n  // useEffect(()=>{\n  //   if (S.hand_selected != undefined) {\n  //     let card = G.players[S.player_idx].hand[S.hand_selected];\n  //     actions.log_msg(`${card.name}: ${card.desc}`);\n  //   }\n  //   else {\n  //     return;\n  //   }\n  // }, [S.hand_selected]);\n\n  // Show game info\n  // useEffect(() => actions.log_msg(G.gamelog), [G.gamelog]);\n\n  useEffect(() => {\n    if (G.phase == \"place\" && G.ai_players.length != 4) {\n      actions.change_board(\"GoalBoard\");\n    }\n  }, [G.phase]);\n\n  useEffect(() => {\n    setS({...S, player_idx: parseInt(props.playerID || \"0\")});\n    console.log({...props});\n    console.log(`The player ID is: ${props.playerID}`);\n    let is_host = props.playerID == props.G.host + \"\";\n    if (is_host || (props.playerID == undefined)) {\n      console.log(\"This guy is host\");\n      props.moves.setup_scenario(Date());\n    }\n  }, []);\n\n  //@ts-ignore\n  // useEffect(() => {if (props.S && props.S.ai_players) props.moves.set_ai_players(props.S.ai_players)}, []);\n\n  useEffect(() => {\n    if (props.G.round >= 8 || props.G.players.find(x => x.score >= 15) != undefined) {\n      actions.change_board(\"FinalBoard\");\n    }\n  }, [props.G.round]);\n\n  useEffect(()=>{\n    console.log(\"Num places:\", props.G.num_places);\n    if (props.G.ai_players.length == 4 && props.G.phase == \"place\") {\n      console.log(\"Auto place cards\");\n      setTimeout(() => {\n        combined.ai_moves();\n        console.log(\"Placed\");\n      }, 1000);\n    }\n  }, [props.G.ai_players, props.G.num_places]);\n\n  let board: (props:BoardProps) => JSX.Element = BOARDS[S.board] || GameBoard;\n  // let board = GoalBoard;\n\n  return board(board_props);\n}\n\n","import React from 'react';\nimport './Board.css';\nimport './Title.css';\n\ninterface ITitleOperation {\n  name: string,\n  effect?: () => void,\n}\n\nexport const TitleScreen = (props: {title: string, operations: ITitleOperation[], titleImg?: string, dadiao?: boolean}) => (\n  <div className=\"board\">\n  <div className=\"title-block\">\n    <div className=\"title-img-container\">\n      <img className=\"title-img\" src={props.titleImg} />\n    </div>\n    <h2 className=\"title\" >{props.title}</h2>\n    <div style={{display: (props.dadiao)?undefined : \"none\"}} >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\" className=\"title-a\">大雕游戏</a>\n    </div>\n    {props.operations.map(operation => <span><button className=\"title-screen-button primary\" onClick={operation.effect}>{operation.name}</button><br/></span>)}\n  </div>\n  </div>\n);","export const AVATARS = \n[[\"罗宾\", \"http://prts.wiki/images/1/1f/%E5%A4%B4%E5%83%8F_%E7%BD%97%E5%AE%BE.png\"],\n[\"卡夫卡\", \"http://prts.wiki/images/8/8d/%E5%A4%B4%E5%83%8F_%E5%8D%A1%E5%A4%AB%E5%8D%A1.png\"],\n[\"山\", \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E5%B1%B1.png\"],\n[\"松果\", \"http://prts.wiki/images/5/5e/%E5%A4%B4%E5%83%8F_%E6%9D%BE%E6%9E%9C.png\"],\n[\"阿米娅(近卫)\", \"http://prts.wiki/images/5/5b/%E5%A4%B4%E5%83%8F_%E9%98%BF%E7%B1%B3%E5%A8%85%28%E8%BF%91%E5%8D%AB%29.png\"],\n[\"迷迭香\", \"http://prts.wiki/images/3/3b/%E5%A4%B4%E5%83%8F_%E8%BF%B7%E8%BF%AD%E9%A6%99.png\"],\n[\"泥岩\", \"http://prts.wiki/images/0/06/%E5%A4%B4%E5%83%8F_%E6%B3%A5%E5%B2%A9.png\"],\n[\"絮雨\", \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E7%B5%AE%E9%9B%A8.png\"],\n[\"杰克\", \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%9D%B0%E5%85%8B.png\"],\n[\"瑕光\", \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E7%91%95%E5%85%89.png\"],\n[\"奥斯塔\", \"http://prts.wiki/images/4/49/%E5%A4%B4%E5%83%8F_%E5%A5%A5%E6%96%AF%E5%A1%94.png\"],\n[\"鞭刃\", \"http://prts.wiki/images/f/f8/%E5%A4%B4%E5%83%8F_%E9%9E%AD%E5%88%83.png\"],\n[\"泡泡\", \"http://prts.wiki/images/2/28/%E5%A4%B4%E5%83%8F_%E6%B3%A1%E6%B3%A1.png\"],\n[\"史尔特尔\", \"http://prts.wiki/images/e/e1/%E5%A4%B4%E5%83%8F_%E5%8F%B2%E5%B0%94%E7%89%B9%E5%B0%94.png\"],\n[\"四月\", \"http://prts.wiki/images/d/d3/%E5%A4%B4%E5%83%8F_%E5%9B%9B%E6%9C%88.png\"],\n[\"薄绿\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E8%96%84%E7%BB%BF.png\"],\n[\"芳汀\", \"http://prts.wiki/images/6/6a/%E5%A4%B4%E5%83%8F_%E8%8A%B3%E6%B1%80.png\"],\n[\"森蚺\", \"http://prts.wiki/images/7/74/%E5%A4%B4%E5%83%8F_%E6%A3%AE%E8%9A%BA.png\"],\n[\"燧石\", \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E7%87%A7%E7%9F%B3.png\"],\n[\"特米米\", \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E7%89%B9%E7%B1%B3%E7%B1%B3.png\"],\n[\"酸糖\", \"http://prts.wiki/images/e/e9/%E5%A4%B4%E5%83%8F_%E9%85%B8%E7%B3%96.png\"],\n[\"棘刺\", \"http://prts.wiki/images/2/2a/%E5%A4%B4%E5%83%8F_%E6%A3%98%E5%88%BA.png\"],\n[\"安哲拉\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E5%AE%89%E5%93%B2%E6%8B%89.png\"],\n[\"孑\", \"http://prts.wiki/images/5/54/%E5%A4%B4%E5%83%8F_%E5%AD%91.png\"],\n[\"贾维\", \"http://prts.wiki/images/2/2a/%E5%A4%B4%E5%83%8F_%E8%B4%BE%E7%BB%B4.png\"],\n[\"蜜蜡\", \"http://prts.wiki/images/1/1d/%E5%A4%B4%E5%83%8F_%E8%9C%9C%E8%9C%A1.png\"],\n[\"稀音\", \"http://prts.wiki/images/c/c6/%E5%A4%B4%E5%83%8F_%E7%A8%80%E9%9F%B3.png\"],\n[\"铃兰\", \"http://prts.wiki/images/5/55/%E5%A4%B4%E5%83%8F_%E9%93%83%E5%85%B0.png\"],\n[\"断崖\", \"http://prts.wiki/images/e/ea/%E5%A4%B4%E5%83%8F_%E6%96%AD%E5%B4%96.png\"],\n[\"亚叶\", \"http://prts.wiki/images/b/b5/%E5%A4%B4%E5%83%8F_%E4%BA%9A%E5%8F%B6.png\"],\n[\"卡达\", \"http://prts.wiki/images/4/43/%E5%A4%B4%E5%83%8F_%E5%8D%A1%E8%BE%BE.png\"],\n[\"早露\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%97%A9%E9%9C%B2.png\"],\n[\"莱恩哈特\", \"http://prts.wiki/images/0/03/%E5%A4%B4%E5%83%8F_%E8%8E%B1%E6%81%A9%E5%93%88%E7%89%B9.png\"],\n[\"苦艾\", \"http://prts.wiki/images/e/e9/%E5%A4%B4%E5%83%8F_%E8%8B%A6%E8%89%BE.png\"],\n[\"波登可\", \"http://prts.wiki/images/4/43/%E5%A4%B4%E5%83%8F_%E6%B3%A2%E7%99%BB%E5%8F%AF.png\"],\n[\"月禾\", \"http://prts.wiki/images/b/b6/%E5%A4%B4%E5%83%8F_%E6%9C%88%E7%A6%BE.png\"],\n[\"石棉\", \"http://prts.wiki/images/1/18/%E5%A4%B4%E5%83%8F_%E7%9F%B3%E6%A3%89.png\"],\n[\"W\", \"http://prts.wiki/images/d/d6/%E5%A4%B4%E5%83%8F_W.png\"],\n[\"温蒂\", \"http://prts.wiki/images/9/93/%E5%A4%B4%E5%83%8F_%E6%B8%A9%E8%92%82.png\"],\n[\"极境\", \"http://prts.wiki/images/9/97/%E5%A4%B4%E5%83%8F_%E6%9E%81%E5%A2%83.png\"],\n[\"THRM-EX\", \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_THRM-EX.png\"],\n[\"傀影\", \"http://prts.wiki/images/8/83/%E5%A4%B4%E5%83%8F_%E5%82%80%E5%BD%B1.png\"],\n[\"巫恋\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E5%B7%AB%E6%81%8B.png\"],\n[\"铸铁\", \"http://prts.wiki/images/8/84/%E5%A4%B4%E5%83%8F_%E9%93%B8%E9%93%81.png\"],\n[\"刻刀\", \"http://prts.wiki/images/2/2c/%E5%A4%B4%E5%83%8F_%E5%88%BB%E5%88%80.png\"],\n[\"断罪者\", \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%96%AD%E7%BD%AA%E8%80%85.png\"],\n[\"风笛\", \"http://prts.wiki/images/d/de/%E5%A4%B4%E5%83%8F_%E9%A3%8E%E7%AC%9B.png\"],\n[\"慑砂\", \"http://prts.wiki/images/e/e7/%E5%A4%B4%E5%83%8F_%E6%85%91%E7%A0%82.png\"],\n[\"柏喙\", \"http://prts.wiki/images/2/2f/%E5%A4%B4%E5%83%8F_%E6%9F%8F%E5%96%99.png\"],\n[\"宴\", \"http://prts.wiki/images/f/f4/%E5%A4%B4%E5%83%8F_%E5%AE%B4.png\"],\n[\"清流\", \"http://prts.wiki/images/1/19/%E5%A4%B4%E5%83%8F_%E6%B8%85%E6%B5%81.png\"],\n[\"刻俄柏\", \"http://prts.wiki/images/4/4a/%E5%A4%B4%E5%83%8F_%E5%88%BB%E4%BF%84%E6%9F%8F.png\"],\n[\"惊蛰\", \"http://prts.wiki/images/8/81/%E5%A4%B4%E5%83%8F_%E6%83%8A%E8%9B%B0.png\"],\n[\"年\", \"http://prts.wiki/images/9/9c/%E5%A4%B4%E5%83%8F_%E5%B9%B4.png\"],\n[\"阿\", \"http://prts.wiki/images/3/31/%E5%A4%B4%E5%83%8F_%E9%98%BF.png\"],\n[\"吽\", \"http://prts.wiki/images/4/41/%E5%A4%B4%E5%83%8F_%E5%90%BD.png\"],\n[\"雪雉\", \"http://prts.wiki/images/2/24/%E5%A4%B4%E5%83%8F_%E9%9B%AA%E9%9B%89.png\"],\n[\"煌\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E7%85%8C.png\"],\n[\"灰喉\", \"http://prts.wiki/images/3/3b/%E5%A4%B4%E5%83%8F_%E7%81%B0%E5%96%89.png\"],\n[\"安比尔\", \"http://prts.wiki/images/f/ff/%E5%A4%B4%E5%83%8F_%E5%AE%89%E6%AF%94%E5%B0%94.png\"],\n[\"布洛卡\", \"http://prts.wiki/images/0/04/%E5%A4%B4%E5%83%8F_%E5%B8%83%E6%B4%9B%E5%8D%A1.png\"],\n[\"苇草\", \"http://prts.wiki/images/7/7a/%E5%A4%B4%E5%83%8F_%E8%8B%87%E8%8D%89.png\"],\n[\"莫斯提马\", \"http://prts.wiki/images/0/0b/%E5%A4%B4%E5%83%8F_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC.png\"],\n[\"槐琥\", \"http://prts.wiki/images/e/ed/%E5%A4%B4%E5%83%8F_%E6%A7%90%E7%90%A5.png\"],\n[\"拜松\", \"http://prts.wiki/images/b/b2/%E5%A4%B4%E5%83%8F_%E6%8B%9C%E6%9D%BE.png\"],\n[\"梅\", \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%A2%85.png\"],\n[\"微风\", \"http://prts.wiki/images/a/ad/%E5%A4%B4%E5%83%8F_%E5%BE%AE%E9%A3%8E.png\"],\n[\"伊桑\", \"http://prts.wiki/images/c/c1/%E5%A4%B4%E5%83%8F_%E4%BC%8A%E6%A1%91.png\"],\n[\"麦哲伦\", \"http://prts.wiki/images/4/4d/%E5%A4%B4%E5%83%8F_%E9%BA%A6%E5%93%B2%E4%BC%A6.png\"],\n[\"送葬人\", \"http://prts.wiki/images/d/da/%E5%A4%B4%E5%83%8F_%E9%80%81%E8%91%AC%E4%BA%BA.png\"],\n[\"炎客\", \"http://prts.wiki/images/d/d6/%E5%A4%B4%E5%83%8F_%E7%82%8E%E5%AE%A2.png\"],\n[\"红云\", \"http://prts.wiki/images/a/af/%E5%A4%B4%E5%83%8F_%E7%BA%A2%E4%BA%91.png\"],\n[\"坚雷\", \"http://prts.wiki/images/a/ab/%E5%A4%B4%E5%83%8F_%E5%9D%9A%E9%9B%B7.png\"],\n[\"赫拉格\", \"http://prts.wiki/images/c/cd/%E5%A4%B4%E5%83%8F_%E8%B5%AB%E6%8B%89%E6%A0%BC.png\"],\n[\"星极\", \"http://prts.wiki/images/e/ee/%E5%A4%B4%E5%83%8F_%E6%98%9F%E6%9E%81.png\"],\n[\"桃金娘\", \"http://prts.wiki/images/9/9d/%E5%A4%B4%E5%83%8F_%E6%A1%83%E9%87%91%E5%A8%98.png\"],\n[\"黑\", \"http://prts.wiki/images/d/d4/%E5%A4%B4%E5%83%8F_%E9%BB%91.png\"],\n[\"格劳克斯\", \"http://prts.wiki/images/5/53/%E5%A4%B4%E5%83%8F_%E6%A0%BC%E5%8A%B3%E5%85%8B%E6%96%AF.png\"],\n[\"锡兰\", \"http://prts.wiki/images/3/39/%E5%A4%B4%E5%83%8F_%E9%94%A1%E5%85%B0.png\"],\n[\"苏苏洛\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E8%8B%8F%E8%8B%8F%E6%B4%9B.png\"],\n[\"陈\", \"http://prts.wiki/images/c/cf/%E5%A4%B4%E5%83%8F_%E9%99%88.png\"],\n[\"诗怀雅\", \"http://prts.wiki/images/5/50/%E5%A4%B4%E5%83%8F_%E8%AF%97%E6%80%80%E9%9B%85.png\"],\n[\"格雷伊\", \"http://prts.wiki/images/f/fe/%E5%A4%B4%E5%83%8F_%E6%A0%BC%E9%9B%B7%E4%BC%8A.png\"],\n[\"斑点\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E6%96%91%E7%82%B9.png\"],\n[\"泡普卡\", \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%B3%A1%E6%99%AE%E5%8D%A1.png\"],\n[\"斯卡蒂\", \"http://prts.wiki/images/5/53/%E5%A4%B4%E5%83%8F_%E6%96%AF%E5%8D%A1%E8%92%82.png\"],\n[\"格拉尼\", \"http://prts.wiki/images/2/29/%E5%A4%B4%E5%83%8F_%E6%A0%BC%E6%8B%89%E5%B0%BC.png\"],\n[\"夜魔\", \"http://prts.wiki/images/a/a7/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E9%AD%94.png\"],\n[\"猎蜂\", \"http://prts.wiki/images/c/c2/%E5%A4%B4%E5%83%8F_%E7%8C%8E%E8%9C%82.png\"],\n[\"月见夜\", \"http://prts.wiki/images/b/b7/%E5%A4%B4%E5%83%8F_%E6%9C%88%E8%A7%81%E5%A4%9C.png\"],\n[\"空爆\", \"http://prts.wiki/images/c/cd/%E5%A4%B4%E5%83%8F_%E7%A9%BA%E7%88%86.png\"],\n[\"暴行\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E6%9A%B4%E8%A1%8C.png\"],\n[\"银灰\", \"http://prts.wiki/images/2/27/%E5%A4%B4%E5%83%8F_%E9%93%B6%E7%81%B0.png\"],\n[\"塞雷娅\", \"http://prts.wiki/images/e/ee/%E5%A4%B4%E5%83%8F_%E5%A1%9E%E9%9B%B7%E5%A8%85.png\"],\n[\"星熊\", \"http://prts.wiki/images/0/07/%E5%A4%B4%E5%83%8F_%E6%98%9F%E7%86%8A.png\"],\n[\"夜莺\", \"http://prts.wiki/images/6/64/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E8%8E%BA.png\"],\n[\"闪灵\", \"http://prts.wiki/images/5/54/%E5%A4%B4%E5%83%8F_%E9%97%AA%E7%81%B5.png\"],\n[\"安洁莉娜\", \"http://prts.wiki/images/c/ca/%E5%A4%B4%E5%83%8F_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C.png\"],\n[\"艾雅法拉\", \"http://prts.wiki/images/c/cc/%E5%A4%B4%E5%83%8F_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89.png\"],\n[\"伊芙利特\", \"http://prts.wiki/images/e/ed/%E5%A4%B4%E5%83%8F_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9.png\"],\n[\"推进之王\", \"http://prts.wiki/images/b/ba/%E5%A4%B4%E5%83%8F_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B.png\"],\n[\"能天使\", \"http://prts.wiki/images/a/ad/%E5%A4%B4%E5%83%8F_%E8%83%BD%E5%A4%A9%E4%BD%BF.png\"],\n[\"食铁兽\", \"http://prts.wiki/images/d/dd/%E5%A4%B4%E5%83%8F_%E9%A3%9F%E9%93%81%E5%85%BD.png\"],\n[\"狮蝎\", \"http://prts.wiki/images/c/c5/%E5%A4%B4%E5%83%8F_%E7%8B%AE%E8%9D%8E.png\"],\n[\"空\", \"http://prts.wiki/images/5/58/%E5%A4%B4%E5%83%8F_%E7%A9%BA.png\"],\n[\"真理\", \"http://prts.wiki/images/e/e6/%E5%A4%B4%E5%83%8F_%E7%9C%9F%E7%90%86.png\"],\n[\"初雪\", \"http://prts.wiki/images/d/d7/%E5%A4%B4%E5%83%8F_%E5%88%9D%E9%9B%AA.png\"],\n[\"崖心\", \"http://prts.wiki/images/7/7d/%E5%A4%B4%E5%83%8F_%E5%B4%96%E5%BF%83.png\"],\n[\"守林人\", \"http://prts.wiki/images/2/27/%E5%A4%B4%E5%83%8F_%E5%AE%88%E6%9E%97%E4%BA%BA.png\"],\n[\"普罗旺斯\", \"http://prts.wiki/images/7/72/%E5%A4%B4%E5%83%8F_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF.png\"],\n[\"火神\", \"http://prts.wiki/images/f/f1/%E5%A4%B4%E5%83%8F_%E7%81%AB%E7%A5%9E.png\"],\n[\"可颂\", \"http://prts.wiki/images/a/ab/%E5%A4%B4%E5%83%8F_%E5%8F%AF%E9%A2%82.png\"],\n[\"雷蛇\", \"http://prts.wiki/images/f/f5/%E5%A4%B4%E5%83%8F_%E9%9B%B7%E8%9B%87.png\"],\n[\"红\", \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E7%BA%A2.png\"],\n[\"临光\", \"http://prts.wiki/images/1/1a/%E5%A4%B4%E5%83%8F_%E4%B8%B4%E5%85%89.png\"],\n[\"华法琳\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E5%8D%8E%E6%B3%95%E7%90%B3.png\"],\n[\"赫默\", \"http://prts.wiki/images/3/39/%E5%A4%B4%E5%83%8F_%E8%B5%AB%E9%BB%98.png\"],\n[\"梅尔\", \"http://prts.wiki/images/0/07/%E5%A4%B4%E5%83%8F_%E6%A2%85%E5%B0%94.png\"],\n[\"天火\", \"http://prts.wiki/images/f/fa/%E5%A4%B4%E5%83%8F_%E5%A4%A9%E7%81%AB.png\"],\n[\"阿米娅\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E9%98%BF%E7%B1%B3%E5%A8%85.png\"],\n[\"陨星\", \"http://prts.wiki/images/e/ea/%E5%A4%B4%E5%83%8F_%E9%99%A8%E6%98%9F.png\"],\n[\"白金\", \"http://prts.wiki/images/3/3b/%E5%A4%B4%E5%83%8F_%E7%99%BD%E9%87%91.png\"],\n[\"蓝毒\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E8%93%9D%E6%AF%92.png\"],\n[\"幽灵鲨\", \"http://prts.wiki/images/2/28/%E5%A4%B4%E5%83%8F_%E5%B9%BD%E7%81%B5%E9%B2%A8.png\"],\n[\"拉普兰德\", \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7.png\"],\n[\"因陀罗\", \"http://prts.wiki/images/f/fe/%E5%A4%B4%E5%83%8F_%E5%9B%A0%E9%99%80%E7%BD%97.png\"],\n[\"芙兰卡\", \"http://prts.wiki/images/2/2b/%E5%A4%B4%E5%83%8F_%E8%8A%99%E5%85%B0%E5%8D%A1.png\"],\n[\"德克萨斯\", \"http://prts.wiki/images/5/57/%E5%A4%B4%E5%83%8F_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF.png\"],\n[\"凛冬\", \"http://prts.wiki/images/c/cd/%E5%A4%B4%E5%83%8F_%E5%87%9B%E5%86%AC.png\"],\n[\"白面鸮\", \"http://prts.wiki/images/8/83/%E5%A4%B4%E5%83%8F_%E7%99%BD%E9%9D%A2%E9%B8%AE.png\"],\n[\"阿消\", \"http://prts.wiki/images/2/2f/%E5%A4%B4%E5%83%8F_%E9%98%BF%E6%B6%88.png\"],\n[\"地灵\", \"http://prts.wiki/images/5/57/%E5%A4%B4%E5%83%8F_%E5%9C%B0%E7%81%B5.png\"],\n[\"深海色\", \"http://prts.wiki/images/d/d1/%E5%A4%B4%E5%83%8F_%E6%B7%B1%E6%B5%B7%E8%89%B2.png\"],\n[\"古米\", \"http://prts.wiki/images/0/07/%E5%A4%B4%E5%83%8F_%E5%8F%A4%E7%B1%B3.png\"],\n[\"蛇屠箱\", \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E8%9B%87%E5%B1%A0%E7%AE%B1.png\"],\n[\"角峰\", \"http://prts.wiki/images/e/e4/%E5%A4%B4%E5%83%8F_%E8%A7%92%E5%B3%B0.png\"],\n[\"调香师\", \"http://prts.wiki/images/6/6a/%E5%A4%B4%E5%83%8F_%E8%B0%83%E9%A6%99%E5%B8%88.png\"],\n[\"嘉维尔\", \"http://prts.wiki/images/c/cc/%E5%A4%B4%E5%83%8F_%E5%98%89%E7%BB%B4%E5%B0%94.png\"],\n[\"末药\", \"http://prts.wiki/images/d/d9/%E5%A4%B4%E5%83%8F_%E6%9C%AB%E8%8D%AF.png\"],\n[\"暗索\", \"http://prts.wiki/images/d/dd/%E5%A4%B4%E5%83%8F_%E6%9A%97%E7%B4%A2.png\"],\n[\"砾\", \"http://prts.wiki/images/c/ce/%E5%A4%B4%E5%83%8F_%E7%A0%BE.png\"],\n[\"慕斯\", \"http://prts.wiki/images/f/fc/%E5%A4%B4%E5%83%8F_%E6%85%95%E6%96%AF.png\"],\n[\"艾丝黛尔\", \"http://prts.wiki/images/5/57/%E5%A4%B4%E5%83%8F_%E8%89%BE%E4%B8%9D%E9%BB%9B%E5%B0%94.png\"],\n[\"霜叶\", \"http://prts.wiki/images/2/29/%E5%A4%B4%E5%83%8F_%E9%9C%9C%E5%8F%B6.png\"],\n[\"缠丸\", \"http://prts.wiki/images/1/13/%E5%A4%B4%E5%83%8F_%E7%BC%A0%E4%B8%B8.png\"],\n[\"杜宾\", \"http://prts.wiki/images/a/a1/%E5%A4%B4%E5%83%8F_%E6%9D%9C%E5%AE%BE.png\"],\n[\"红豆\", \"http://prts.wiki/images/b/bb/%E5%A4%B4%E5%83%8F_%E7%BA%A2%E8%B1%86.png\"],\n[\"清道夫\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%B8%85%E9%81%93%E5%A4%AB.png\"],\n[\"讯使\", \"http://prts.wiki/images/2/27/%E5%A4%B4%E5%83%8F_%E8%AE%AF%E4%BD%BF.png\"],\n[\"白雪\", \"http://prts.wiki/images/b/b4/%E5%A4%B4%E5%83%8F_%E7%99%BD%E9%9B%AA.png\"],\n[\"流星\", \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%B5%81%E6%98%9F.png\"],\n[\"杰西卡\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%9D%B0%E8%A5%BF%E5%8D%A1.png\"],\n[\"远山\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E8%BF%9C%E5%B1%B1.png\"],\n[\"夜烟\", \"http://prts.wiki/images/5/55/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E7%83%9F.png\"],\n[\"梓兰\", \"http://prts.wiki/images/8/83/%E5%A4%B4%E5%83%8F_%E6%A2%93%E5%85%B0.png\"],\n[\"史都华德\", \"http://prts.wiki/images/b/b3/%E5%A4%B4%E5%83%8F_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7.png\"],\n[\"安赛尔\", \"http://prts.wiki/images/9/94/%E5%A4%B4%E5%83%8F_%E5%AE%89%E8%B5%9B%E5%B0%94.png\"],\n[\"芙蓉\", \"http://prts.wiki/images/d/d3/%E5%A4%B4%E5%83%8F_%E8%8A%99%E8%93%89.png\"],\n[\"炎熔\", \"http://prts.wiki/images/f/fb/%E5%A4%B4%E5%83%8F_%E7%82%8E%E7%86%94.png\"],\n[\"安德切尔\", \"http://prts.wiki/images/f/f6/%E5%A4%B4%E5%83%8F_%E5%AE%89%E5%BE%B7%E5%88%87%E5%B0%94.png\"],\n[\"克洛丝\", \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E5%85%8B%E6%B4%9B%E4%B8%9D.png\"],\n[\"米格鲁\", \"http://prts.wiki/images/3/32/%E5%A4%B4%E5%83%8F_%E7%B1%B3%E6%A0%BC%E9%B2%81.png\"],\n[\"卡缇\", \"http://prts.wiki/images/8/87/%E5%A4%B4%E5%83%8F_%E5%8D%A1%E7%BC%87.png\"],\n[\"玫兰莎\", \"http://prts.wiki/images/4/4b/%E5%A4%B4%E5%83%8F_%E7%8E%AB%E5%85%B0%E8%8E%8E.png\"],\n[\"翎羽\", \"http://prts.wiki/images/1/1f/%E5%A4%B4%E5%83%8F_%E7%BF%8E%E7%BE%BD.png\"],\n[\"香草\", \"http://prts.wiki/images/c/c8/%E5%A4%B4%E5%83%8F_%E9%A6%99%E8%8D%89.png\"],\n[\"芬\", \"http://prts.wiki/images/4/41/%E5%A4%B4%E5%83%8F_%E8%8A%AC.png\"],\n[\"12F\", \"http://prts.wiki/images/b/b7/%E5%A4%B4%E5%83%8F_12F.png\"],\n[\"杜林\", \"http://prts.wiki/images/2/24/%E5%A4%B4%E5%83%8F_%E6%9D%9C%E6%9E%97.png\"],\n[\"巡林者\", \"http://prts.wiki/images/9/93/%E5%A4%B4%E5%83%8F_%E5%B7%A1%E6%9E%97%E8%80%85.png\"],\n[\"黑角\", \"http://prts.wiki/images/f/f1/%E5%A4%B4%E5%83%8F_%E9%BB%91%E8%A7%92.png\"],\n[\"夜刀\", \"http://prts.wiki/images/b/b2/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E5%88%80.png\"],\n[\"Castle-3\", \"http://prts.wiki/images/8/82/%E5%A4%B4%E5%83%8F_Castle-3.png\"],];","import React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './Board.css';\nimport './Lobby.css';\nimport { AVATARS } from './avatars';\nimport { rand } from './utils';\nimport { SocketIO } from 'boardgame.io/dist/types/packages/multiplayer';\n\nconst NUM_PLAYERS = 4;\n\n// const API = \"localhost:3050\";\nconst API = \"47.96.2.148:3050\";\n\n// EH: Client and server should be communicated in a good way, not in this way\ninterface ILobby {\n  player_id: string,\n  rooms: any[],\n  locked: boolean,\n}\n\ninterface IRoomOperation {\n  name?: string,\n  effect?: () => void,\n}\n\ntype Setter = (setter: (L: ILobby) => ILobby) => void;\n\nfunction LobbyAvatar(props:{avatar?: string, is_player?: boolean}) {\n  return <div className=\"lobby-avatar-container\" style={{borderColor: props.is_player?\"#389e0d\":undefined}}>\n    <img className=\"lobby-avatar\" src={props.avatar} />\n  </div>\n}\n\n// align-self\nfunction Room(props:{players: string[], playerID?: string, operation?:IRoomOperation, locked?:boolean}) {\n  return <div className=\"room\">\n    {props.players.map(p => <LobbyAvatar is_player={p==props.playerID} avatar={get_avatar(p)} />)}\n    <button className=\"room-btn\" style={{display:(props.operation == undefined || props.locked)?\"none\":undefined}} onClick={props.operation && props.operation.effect} >{props.operation && props.operation.name}</button>\n  </div>\n}\n\nfunction get_avatar(pid:string): string {\n  let len = AVATARS.length;\n  return AVATARS[Math.floor(rand(pid)*len)][1];\n}\n\nfunction fetch_rooms(setter: (setter_function: (L: ILobby) => ILobby) => void) {\n  let api = `http://${API}/rooms`;\n  fetch(api).then(res => res.json()).then(res => setter(L => ({...L, rooms:res.rooms})));\n}\n\nfunction send_post_req(api:string, data:any) {\n  return fetch(api, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n}\n\nfunction onOperate(setter: Setter) {\n  setter(L => ({...L, locked:true}));\n  // This is not a cool way, but change this needs tons of refractors\n  setTimeout(()=>fetch_rooms(setter), 500);\n}\n\nfunction create_room(player_id: string) {\n  let api = `http://${API}/create`;\n  return send_post_req(api, {player_id, max_players: NUM_PLAYERS});\n}\n\nfunction enter_room(player_id: string, room_id: string) {\n  let api = `http://${API}/enter`;\n  return send_post_req(api, {player_id, room_id});\n}\n\nfunction leave_room(player_id: string, room_id: string) {\n  let api = `http://${API}/leave`;\n  return send_post_req(api, {player_id, room_id});\n}\n\nfunction enter_game(player_id: string, room_id: string) {\n  let api = `http://${API}/entergame`;\n  return send_post_req(api, {player_id, room_id});\n}\n\nfunction leave_lobby(player_id: string) {\n  let api = `http://${API}/leavelobby`;\n  return send_post_req(api, {player_id});\n}\n\nfunction get_room_operation(room: any, player_id: string, player_contained: boolean, setter:Setter) {\n  let player_in_room = room.players.find((x:any) => x.player_id == player_id);\n  if (player_in_room != undefined) {\n    return {name: \"退出\", effect:()=>{leave_room(player_id, room.room_id);onOperate(setter)}};\n  }\n  else {\n    if (player_contained) {\n      return undefined;\n    }\n    else {\n      return {name: \"加入\", effect:()=>{\n        enter_room(player_id, room.room_id);\n        onOperate(setter);\n      }};\n    }\n  }\n}\n\nexport function Lobby(props:{actions:any}) {\n  let [L, setL] = useState<ILobby>({\n    player_id: uuidv4(),\n    rooms: [],\n    locked: false,\n  });\n\n  useEffect(()=>{\n    // setL({...L, player_id: uuidv4()});\n    fetch_rooms(setL);\n    const interval = setInterval(()=>{\n      fetch_rooms(setL);\n      console.log(\"Fetching room from server...\");\n    }, 2500);\n    let exit_lobby = () => {\n      leave_lobby(L.player_id);\n      clearInterval(interval);\n      console.log(`Exit lobby ${L.player_id}`);\n    };\n    window.addEventListener(\"beforeunload\", exit_lobby);\n    return () => {\n      exit_lobby();\n      window.removeEventListener(\"beforeunload\", exit_lobby);\n    }\n  }, []);\n\n  useEffect(() => {\n    let player_room = L.rooms.find(room => room.players.find((p:any) => p.player_id == L.player_id) != undefined);\n    if (player_room && player_room.players.length == NUM_PLAYERS) {\n      let player_idx = player_room.players.map((p:any) => p.player_id).indexOf(L.player_id) + \"\";\n      // enter_game(L.player_id, player_room.room_id);\n      props.actions.enter_game(player_room.room_id, player_idx);\n    }\n  }, [L.rooms]);\n\n  useEffect(() => {\n    if (L.locked) {\n      setTimeout(()=>setL(L=>({...L, locked:false})), 2000);\n    }\n  }, [L.locked]);\n\n  let player_contained = L.rooms.flatMap(room => room.players.map((p:any) => p.player_id)).includes(L.player_id);\n\n  return <div className=\"board\">\n    <div className=\"lobby-player-panel\">\n      <LobbyAvatar avatar={get_avatar(L.player_id)} is_player={true} />\n      <button className=\"room-btn\" style={{display: (player_contained || L.locked)?\"none\":undefined}} onClick={() => setL({...L, player_id:uuidv4()})}>换个形象</button>\n    </div>\n    <div className=\"rooms\">\n      {/* <Room players={[\"1\",\"2\",\"3\"]} operation={{name:\"加入\"}} /> */}\n      {/* .filter(room => room.players.length < NUM_PLAYERS) */}\n      {L.rooms.map(room => <Room players={room.players.map((p:any) => p.player_id)} playerID={L.player_id} operation={get_room_operation(room, L.player_id, player_contained, setL)} locked={L.locked} />)}\n    </div>\n    <div></div>\n    <div style={{display: player_contained?\"none\":undefined}} className=\"lobby-controller\">      \n    <button className=\"lobby-btn\" onClick={()=>props.actions.changer(\"Title\")}>返回</button>\n    <button className=\"lobby-btn\" onClick={()=>{create_room(L.player_id);onOperate(setL);}} >创建房间</button>\n    <button className=\"lobby-btn\" onClick={()=>props.actions.direct_enter()} >重进</button>\n    </div>\n  </div>;\n}\n","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport { Client } from 'boardgame.io/react';\nimport { Local, SocketIO } from 'boardgame.io/multiplayer';\nimport { LobbyClient } from 'boardgame.io/client'\nimport { CSPR } from './Game';\nimport { Board } from './Board';\nimport { TitleScreen } from './Title';\nimport { Lobby } from './Lobby';\nimport { Dispatcher } from './types';\n\nconst SERVER = SocketIO({server:\"47.96.2.148:8000\"});\n// const SERVER = SocketIO({server:\"localhost:8000\"});\n// const SERVER = Local();\n\ninterface IAppState {\n  scene: string,\n  game_instance: {matchID: string, playerID: string} | undefined,\n  ai_players: number,\n}\n\n// const App = Client({\n//   game: CSPR,\n//   board: Board,\n//   debug: false,\n// });\n\nconst SingleClient = Client({\n  game: CSPR,\n  board: Board,\n  debug: false,\n  // multiplayer: Local(),\n  // multiplayer: SocketIO({server: 'localhost:8000'}),\n\n  numPlayers: 1,\n});\n\n// const App = () => {\n//   return <div style={{display: \"flex\"}}>\n//     <CSPRClient playerID=\"0\" />\n//     {/* <CSPRClient playerID=\"1\" matchID=\"default\" /> */}\n//   </div>\n// };\n\nfunction introduce_gameplay() {\n  alert(\"欢迎来到《雀魂：爆炸一姬》！\\n游戏目标：在8局之后，分数全场最高\\n每盘游戏由8局组成(东1局-南4局)，每局由两个阶段组成：\\n* 扣牌阶段：将1张牌扣到任意一名玩家面前，重复7次；\\n* 翻牌阶段：洗混扣在自己面前的所有牌，然后一张一张地翻开；\\n翻到炸弹时直接出局，翻到护甲时可抵挡一次炸弹，翻到操作牌时则执行其效果，\\\"目标牌\\\"在牌堆最底层，翻开后如果达成目标，就能获得分数；\\n(额外说明：翻牌阶段，如果翻到左上角有水果的操作牌时，则要做出抉择：是将这张牌作为操作还是作为水果)\\n举例：\\n* 东1局，扣牌阶段，一姬的目标是\\\"击杀下家\\\"，因此一姬将一张炸弹扣给了下家\\n* 一姬的下家，二姐，发现别人扣给自己牌，感觉不对，于是将一张\\\"护甲\\\"扣给了自己\\n* 一姬的对家，女仆的目标是\\\"获得柠檬\\\"，因此女仆将手里一张左上角有\\\"柠檬\\\"的牌扣给了自己\\n* 就这样扣了7次之后，所有人洗混了自己面前的牌，进入翻牌阶段\");\n}\n\nconst Title = (props: {actions: any}) => {\n  return <TitleScreen \n    title = \"雀魂: 爆炸一姬\"\n    titleImg = \"https://s3.ax1x.com/2021/02/02/ym9Sln.png\"\n    operations = {[\n      {name: \"单人练习\", effect: () => props.actions.changer(\"SingleClient\")},\n      {name: \"多人运动\", effect: () => props.actions.changer(\"CSPRLobby\")},\n      {name: \"玩法教学\", effect: introduce_gameplay},\n  ]}\n  />;\n};\n\nconst CSPRLobby = (props:any) => {\n  return <Lobby {...props} />;\n}\n\nconst App = () => {\n  let [S, setS] = useState<IAppState>({\n    scene: \"Title\",\n    // in_game: false,\n  });\n\n  const scenes: Record<string, JSX.Element> = {\n    CSPRLobby,\n    Title,\n    SingleClient,\n  }\n\n  const actions: Record<string, Dispatcher> = {\n    changer: (scene: string) => setS({...S, scene}),\n    enter_game: (matchID: string, playerID: string) => {\n      // alert(`对局代码为: ${matchID}${playerID}`);\n      setS({...S, game_instance: {matchID, playerID}});\n    },\n    finish_game: () => setS({...S, game_instance:undefined}),\n    direct_enter: () => {\n      let game_data = prompt(\"输入对局代码:\")\n      let playerID = game_data[4];\n      let matchID = game_data.slice(0,4);\n      let ai_players = game_data[6];\n      setS({...S, game_instance:{matchID, playerID}});\n      if (ai_players) {\n        console.log(\"There are some ai players\");\n        setS({...S, ai_players: parseInt(ai_players)});\n      }\n    },\n  }\n\n  let Scene = scenes[S.scene] || Title;\n  if (S.game_instance != undefined) {\n    let GameInstance = Client({\n      // game: {...CSPR, seed:S.game_instance.matchID},\n      game: CSPR,\n      board: Board,\n      debug: false,\n      multiplayer: SERVER,\n      numPlayers: 4,\n      // seed: S.game_instance.matchID,\n    });\n    Scene = (props:any) => <GameInstance matchID={S.game_instance.matchID} playerID={S.game_instance.playerID} {...props} />;\n  }\n\n  return <Scene {...{S, actions}} />;\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}