{"version":3,"sources":["cards.tsx","assets.ts","goals.tsx","utils.ts","Game.tsx","icons.tsx","actions.tsx","combiner.ts","Board.tsx","Title.tsx","avatars.ts","Lobby.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["CARDS","name","desc","illust","effect","G","ctx","player","out","entities","push","has_fruit","score","idx","players","indexOf","upper_idx","lower_idx","add_fruits","move","deck","hand","card","discard","undefined","log_msg","discarded","slice","map","x","includes","AVATARS","goal_illust","score_based_on_fruit","fruit_idx","num_fruit","filter","fruit","length","GOALS","stackable","target_idx","num_archives","find","goal","is_goal","check_requirements","requirements","self","is_achieved","fruits","reduce","acc","val","new_acc","diffs","cnt","agari","console","log","gamelogs","unshift","PUBLIC_GOALS","is_public","map_object","fn","obj","new_obj","k","PRNG","seed","this","i","charCodeAt","Math","sin","result","floor","random","arr","len","randRange","clone","srcIndex","dstIndex","shuffled","Array","randIndex","deck1","deck2","splice","setup_player","goals","previous_action","finished","init_round","phase","round","_","times","rng","shuffle","init_deck","init_player","public_goals","g","init_goals","init_draft","j","get_next_idx","current_idx","next_idx","place","from_idx","card_idx","direction","from_player","change_hands_or_enter_action_phase","hands","num_remained_cards","f1","f2","next_action","active_player_idx","enter_action_phase","placed","flip_card","active_player","shield_idx","proceed","skipped","all_finished","enter_place_phase","flip","player_idx","flip_action","INVALID_MOVE","skipper","skipper_idx","archive","archive_idx","execute","execute_action","added","msg","CSPR","setup","actions","host","ai_players","numPlayers","moves","add_action","action","ai_moves","carry_actions","ai_act","setup_scenario","avatars","add_avatars","minPlayers","maxPlayers","turn","activePlayers","ActivePlayers","ALL","plugins","fnWrap","args","fruit_style","height","width","FRUITS","src","style","shield_icon","skip_icon","init_state","board","get_operations","S","hand_selected","names","get_place_operations","flip_actions","execute_actions","ACTIONS","select_hand","change_hand_selected","clear_state","change_board","COMBINED","add_place_action","TopPanel","props","className","onClick","checkGoal","gameCount","DeckArea","cardNum","PlayArea","Card","playedCard","CardAreas","Avatar","border","selected","InfoLine","color","content","PlayerInfo","info","Player","playerInfo","Central","InfoPanel","Controller","move1","operations","autoMove","useEffect","operation","setTimeout","combined","display","CardContainer","handleClick","CardRow","cards","handleCardClick","get_player_info","entity","get_entity_icon","get_position","diff","GameBoard","list","process_player","indexes","Goal","goal_illust_src","process_public_goal","fruits_lookup","A","B","C","split","char","BOARDS","GoalBoard","Board","useState","setS","produce","board_props","parseInt","playerID","Date","TitleScreen","titleImg","title","href","API","LobbyAvatar","borderColor","is_player","avatar","Room","p","get_avatar","locked","pid","sum","c","rand","fetch_rooms","setter","api","fetch","then","res","json","L","rooms","send_post_req","data","method","headers","body","JSON","stringify","onOperate","get_room_operation","room","player_id","player_contained","room_id","leave_room","enter_room","Lobby","uuidv4","setL","interval","setInterval","exit_lobby","clearInterval","window","addEventListener","removeEventListener","player_room","enter_game","flatMap","changer","max_players","direct_enter","SERVER","SocketIO","server","SingleClient","Client","game","debug","Title","CSPRLobby","App","scene","in_game","matchID","game_instance","finish_game","game_data","prompt","Scene","GameInstance","multiplayer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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C,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,SAAK,iEACN,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,SAAK,iEACN,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,2BAAQ,4FACT,CAAC,2BAAQ,4FACT,CAAC,2BAAQ,4FACT,CAAC,2BAAQ,4FACT,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,SAAK,iEACN,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,2BAAQ,4FACT,CAAC,qBAAO,mFACR,CAAC,qBAAO,mFACR,CAAC,2BAAQ,4FACT,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAAC,eAAM,0EACP,CAAC,eAAM,0EACP,CAAC,qBAAO,mFACR,CAA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","file":"static/js/main.818fe4da.chunk.js","sourcesContent":["import React from 'react';\nimport { ICard } from './types';\nimport { move, out, log_msg, add_fruits } from './Game';\n\nexport const CARDS: ICard[] = [\n  {\n    name: \"炸弹\",\n    desc: \"嘣！\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/emojidex/112/bomb_1f4a3.png\",\n    effect(G, ctx, player) {\n      out(player);\n    },\n  },\n  {\n    name: \"护甲\",\n    desc: \"放入持续区，可抵挡1次出局\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\",\n    effect(G, ctx, player) {\n      player.entities.push(\"shield\");\n    },\n  },\n  {\n    name: \"白嫖\",\n    desc: \"获得1分\",\n    has_fruit: true,\n    illust: \"https://s3.ax1x.com/2020/12/16/rQ2Eef.jpg\",\n    effect(G, ctx, player) {\n      player.score += 1;\n    },\n  },\n{\n    name: \"反向白嫖\",\n    desc: \"失去1分\",\n    // has_fruit: true,\n    illust: \"https://s3.ax1x.com/2020/12/27/r4zS8H.jpg\",\n    effect(G, ctx, player) {\n      player.score -= 1;\n    },\n  },\n{\n    name: \"裸奔\",\n    desc: \"弃掉持续区的所有牌\",\n    // has_fruit: true,\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/man-running_1f3c3-200d-2642-fe0f.png\",\n    effect(G, ctx, player) {\n      player.entities = [];\n    },\n  },\n  {\n    name: \"送温暖\",\n    desc: \"上家和下家各获得1分\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/pot-of-food_1f372.png\",\n    effect(G, ctx, player) {\n      let idx = G.players.indexOf(player);\n      let upper_idx = (idx + 1) % 4;\n      let lower_idx = (idx + 3) % 4;\n      G.players[upper_idx].score += 1;\n      G.players[lower_idx].score += 1;\n    }\n  },\n  {\n    name: \"西红柿\",\n    desc: \"将2个西红柿放入持续区\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/tomato_1f345.png\",\n    effect(G, ctx, player) {\n      // for (let i=0; i<2; i++){\n        // player.entities.push({fruit: 0});\n        add_fruits(G, ctx, player, [2,0,0]);\n      // }\n    }\n  },\n{\n    name: \"柠檬\",\n    desc: \"将2个柠檬放入持续区\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/lemon_1f34b.png\",\n    effect(G, ctx, player) {\n      // for (let i=0; i<2; i++){\n        // player.entities.push({fruit: 1});\n        add_fruits(G, ctx, player, [0,2,0]);\n      // }\n    }\n  },\n{\n    name: \"苹果\",\n    desc: \"将2个苹果放入持续区\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/green-apple_1f34f.png\",\n    effect(G, ctx, player) {\n      // for (let i=0; i<2; i++){\n      //   player.entities.push({fruit: 2});\n      // }\n      add_fruits(G, ctx, player, [0,0,2]);\n    }\n  },\n\n\n\n  // {\n  //   name: \"集体拆弹\",\n  //   desc: \"所有其他玩家弃掉牌库顶的1张牌，每有1个弃掉炸弹的玩家，就获得1分\",\n  //   illust: \"\",\n  //   effect(G, ctx, player) {\n  //     let other_players = G.players.filter(x => x != player);\n  //     for (let p of other_players) {\n\n  //     }\n  //   }\n  // },\n  // {\n  //   name: \"集体拆弹\",\n  //   desc: \"所有其他玩家弃掉牌库顶的1张牌，每有1个弃掉炸弹的玩家，就获得1分\",\n  //   illust: \"\",\n  //   effect(G, ctx, player) {\n  //     let other_players = G.players.filter(x => x != player);\n  //     for (let p of other_players) {\n\n  //     }\n  //   }\n  // },\n  // {\n  //   name: \"集体拆弹\",\n  //   desc: \"所有其他玩家弃掉牌库顶的1张牌，每有1个弃掉炸弹的玩家，就获得1分\",\n  //   illust: \"\",\n  //   effect(G, ctx, player) {\n  //     let other_players = G.players.filter(x => x != player);\n  //     for (let p of other_players) {\n\n  //     }\n  //   }\n  // },\n  {\n    name: \"鞋子\",\n    desc: \"获得1次跳过机会\",\n    has_fruit: true,\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/running-shoe_1f45f.png\",\n    effect(G, ctx, player) {\n      player.entities.push(\"skip\");\n    }\n  },\n{\n    name: \"归档\",\n    desc: \"归档1张牌\",\n    has_fruit: true,\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/whatsapp/273/floppy-disk_1f4be.png\",\n    effect(G, ctx, player) {\n      move(player.deck, player.hand);\n    },\n  },\n{\n    name: \"加速\",\n    desc: \"弃掉牌堆顶的1张牌，并执行其2次\",\n    has_fruit: true,\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/racing-car_1f3ce-fe0f.png\",\n    effect(G, ctx, player) {\n      let card = move(player.deck, player.discard);\n      if (card != undefined && card.effect != undefined) {\n        log_msg(G, ctx, <span>执行了 {card.name} 两次</span>);\n        card.effect(G, ctx, player);\n        card.effect(G, ctx, player);\n      }\n    },\n  },\n  {\n    name: \"拆弹\",\n    desc: \"查看牌堆顶的1张牌，如果是炸弹，将其弃掉，否则放回牌库顶\",\n    has_fruit: true,\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/wrench_1f527.png\",\n    effect(G, ctx, player) {\n      let card = player.deck[0];\n      if (card != undefined) {\n        log_msg(G, ctx, <span>使用拆弹翻开 {card.name}</span>);\n        if (card.name == \"炸弹\") {\n          move(player.deck, player.discard);\n        }\n        else {\n          return;\n        }\n      }\n    }\n  },\n  {\n    name: \"引爆\",\n    desc: \"弃掉牌库顶的2张牌，如果其中有炸弹，则直接出局，否则获得1分\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/fire_1f525.png\",\n    effect(G, ctx, player) {\n      let discarded = G.deck.slice(0, 2);\n      player.deck = player.deck.slice(2);\n      player.discard = [...discarded, ...player.discard];\n      log_msg(G, ctx, <span>因为引爆弃掉了 {discarded.map(x => <span>{x.name} </span>)}</span>);\n      if (discarded.map(x => x.name).includes(\"炸弹\")) {\n        out(player);\n      }\n      else {\n        player.score += 1;\n      }\n    }\n  },\n\n  {\n    name: \"机会\",\n    desc: \"将2张山牌放到牌库顶\",\n    illust: \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/game-die_1f3b2.png\",\n    effect(G, ctx, player) {\n      player.deck = [...G.deck.slice(0,2), ...player.deck];\n      G.deck = G.deck.slice(2);\n    }\n  },\n\n];","export const AVATARS = [\n\"https://s1.ax1x.com/2020/11/08/BI5SKA.png\",\n\"https://s1.ax1x.com/2020/11/08/BI5pDI.png\",\n\"https://s1.ax1x.com/2020/11/08/BI4xvd.png\",\n\"https://s1.ax1x.com/2020/11/08/BI4j8e.png\",\n\"https://s1.ax1x.com/2020/11/08/BI4vgH.png\",\n\"https://s1.ax1x.com/2020/11/08/BI59bt.png\",\n\"https://s1.ax1x.com/2020/11/08/BI5PVP.png\",\n\"https://s1.ax1x.com/2020/11/08/BI5iUf.png\",\n\"https://s1.ax1x.com/2020/11/08/BI5F58.png\",\n\"https://s1.ax1x.com/2020/11/08/BI5APS.png\",\n];\n\nexport const goal_illust = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/beer-mug_1f37a.png\";\n\nexport const public_goal_illust = \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/green-salad_1f957.png\";","import { Ctx } from 'boardgame.io';\nimport React from 'react';\nimport { goal_illust, public_goal_illust } from './assets';\nimport { FRUITS } from './icons';\nimport { ICard, IGame, IPlayer } from './types';\n\nfunction score_based_on_fruit(player: IPlayer, fruit_idx: number) {\n  let num_fruit = player.entities.filter(x => ((typeof x == \"object\") && (x.fruit == fruit_idx))).length;\n  if (num_fruit >= 4) {\n    player.score += 7;\n  }\n  else if (num_fruit == 3) {\n    player.score += 4;\n  }\n  else if (num_fruit == 2) {\n    player.score += 2;\n  }\n  else {\n    return;\n  }\n}\n\nfunction process_goal(goal: ICard): ICard {\n  return {\n    ...goal,\n    is_goal: true,\n    illust: goal_illust,\n  };\n}\n\nfunction process_public_goal(goal: ICard): ICard {\n  return {\n    ...goal,\n    is_goal: true,\n    is_public: true,\n    illust: public_goal_illust,\n  };\n}\n\nexport const goals_raw: ICard[] = [\n  {\n    name: \"目标: 击杀上家\",\n    desc: \"如果上家已经出局，则获得3分\",\n    stackable: true,\n    effect(G, ctx, player) {\n      let player_idx = G.players.indexOf(player);\n      let target_idx = (player_idx + 3) % 4;\n      let target = G.players[target_idx];\n\n      if (target.out == true) {\n        player.score += 3;\n      }\n    }\n  },\n{\n    name: \"目标: 击杀下家\",\n    desc: \"如果下家已经出局，则获得3分\",\n    stackable: true,\n    effect(G, ctx, player) {\n      let player_idx = G.players.indexOf(player);\n      let target_idx = (player_idx + 1) % 4;\n      let target = G.players[target_idx];\n\n      if (target.out == true) {\n        player.score += 3;\n      }\n    }\n  },\n\n{\n    name: \"目标: 保护上家\",\n    desc: \"如果上家依然存活，则获得1分，否则失去1分\",\n    effect(G, ctx, player) {\n      let player_idx = G.players.indexOf(player);\n      let target_idx = (player_idx + 3) % 4;\n      let target = G.players[target_idx];\n\n      if (target.out != true) {\n        player.score += 1;\n      }\n      else {\n        player.score -= 1;\n      }\n    }\n  },\n\n  {\n    name: \"目标: 保护下家\",\n    desc: \"如果下家依然存活，则获得1分，否则失去1分\",\n    effect(G, ctx, player) {\n      let player_idx = G.players.indexOf(player);\n      let target_idx = (player_idx + 1) % 4;\n      let target = G.players[target_idx];\n      if (target.out != true) {\n        player.score += 1;\n      }\n      else {\n        player.score -= 1;\n      }\n    }\n  },\n\n  {\n    name: \"目标: 西红柿\",\n    // desc: <span>如果你拥有2/3/4个{FRUITS[0]}，则获得2/4/7分</span>,\n    desc: \"如果你拥有2/3/4个西红柿，则获得2/4/7分\",\n    effect(G, ctx, player) {\n      score_based_on_fruit(player, 0);\n    }\n  },\n{\n    name: \"目标: 柠檬\",\n    // desc: <span>如果你拥有2/3/4个{FRUITS[1]}，则获得2/4/7分</span>,\n    desc: \"如果你拥有2/3/4个柠檬，则获得2/4/7分\",\n    effect(G, ctx, player) {\n      score_based_on_fruit(player, 1);\n    }\n  },\n{\n    name: \"目标: 青苹果\",\n    // desc: <span>如果你拥有2/3/4个{FRUITS[2]}，则获得2/4/7分</span>,\n    desc: \"如果你拥有2/3/4个苹果，则获得2/4/7分\",\n    effect(G, ctx, player) {\n      score_based_on_fruit(player, 2);\n    }\n  },\n  {\n    name: \"目标: 归档\",\n    desc: \"如果你的存档中有1/2张牌，则获得2/5分\",\n    effect(G, ctx, player) {\n      let num_archives = player.hand.length;\n      if (num_archives == 1) {\n        player.score += 2;\n      }\n      else if (num_archives >= 2) {\n        player.score += 5;\n      }\n      else {\n        return;\n      }\n    }\n  },\n  {\n    name: \"目标: 玩个刺激的\",\n    desc: \"如果你的弃牌堆中有\\\"引爆\\\"，则获得2分\",\n    effect(G, ctx, player) {\n      let card = player.discard.find(x => x.name == \"引爆\");\n      if (card != undefined) {\n        player.score += 2;\n      }\n    }\n  },\n  {\n    name: \"目标: 机会\",\n    desc: \"如果你的弃牌堆中有\\\"机会\\\"，则获得2分\",\n    effect(G, ctx, player) {\n      let card = player.discard.find(x => x.name == \"机会\");\n      if (card != undefined) {\n        player.score += 2;\n      }\n    }\n  },\n];\n\nexport const GOALS = goals_raw.map(process_goal);\n\nconst check_requirements = (requirements: number[], score: number) => (G: IGame, ctx: Ctx, player: IPlayer, self?: ICard) => {\n  if (self && !self.is_achieved) {\n    let fruits = player.entities.reduce((acc, val) => {\n      if (typeof val == \"object\") {\n        let new_acc = [...acc];\n        new_acc[val.fruit] += 1;\n        return new_acc;\n      }\n      else {\n        return acc;\n      }\n    }, [0,0,0]);\n    let diffs = fruits.map((cnt, idx) => (cnt - requirements[idx]) >= 0);\n    let agari = !diffs.includes(false);\n    console.log(`D:${diffs}, F:${fruits}, A:${agari}`);\n    if (agari) {\n      player.score += score;\n      self.is_achieved = true;\n      G.gamelogs.unshift(\"和牌!\");\n    }\n  }\n  else {\n    return;\n  }\n}\n\nexport const public_goals_raw: ICard[] = [\n  {\n    name: \"公共目标(3分)\",\n    desc: \"AAA\",\n    effect: check_requirements([3,0,0], 3),\n  },\n  {\n    name: \"公共目标(3分)\",\n    desc: \"BBB\",\n    effect: check_requirements([0,3,0], 3),\n  },\n  {\n    name: \"公共目标(3分)\",\n    desc: \"CCC\",\n    effect: check_requirements([0,0,3], 3),\n  },\n  {\n    name: \"公共目标(4分)\",\n    desc: \"ABC\",\n    effect: check_requirements([1,1,1], 4),\n  },\n  {\n    name: \"公共目标(4分)\",\n    desc: \"AABB\",\n    effect: check_requirements([2,2,0], 4),\n  },\n  {\n    name: \"公共目标(4分)\",\n    desc: \"AACC\",\n    effect: check_requirements([2,0,2], 4),\n  },\n  {\n    name: \"公共目标(4分)\",\n    desc: \"BBCC\",\n    effect: check_requirements([0,2,2], 4),\n  },\n\n];\n\nexport const PUBLIC_GOALS = public_goals_raw.map(process_public_goal);","import _ from 'lodash';\n\nexport function map_object<a,b>(fn: (arg: a, key?: string) => b, obj: Record<string,a>) {\n  let new_obj: Record<string,b> = {};\n\n  for (let k in obj) {\n    new_obj[k] = fn(obj[k], k);\n  }\n\n  return new_obj;\n}\n\nexport function reorder<a>(list: a[], indexes: number[]): a[] {\n  return indexes.map(idx => list[idx]);\n}\n\nexport function contain_key<a,b>(value: a, key: b) {\n  if (typeof value == \"object\" && key in value) {\n    return true;\n  }\n  else {\n    return false;\n  }\n}\n\nexport function rand(seed: string) {\n  let val = _.sum(seed.split(\"\").map((c, idx) => seed.charCodeAt(idx)));\n  let x = Math.sin(val++) * 10000;\n  return x - Math.floor(x);\n}\n\n\nexport class PRNG {\n  seed: string | number;\n  val: number;\n\n  constructor(seed: string | number, val?: number) {\n    this.seed = seed || 0;\n\n    if (val == undefined) {\n      this.val = 0;\n      if (typeof seed == \"string\"){\n        for (let i=0; i<seed.length; i++) {\n          this.val += seed.charCodeAt(i);\n        }\n      }\n      else {\n        this.val = seed;\n      }\n\n    // this.random = this.random.bind(this);\n    // No need to bind\n    }\n  else {\n    this.val = val;\n  }\n}\n\n  random() {\n    let x = Math.sin(this.val++) * 10000;\n    let result = x - Math.floor(x);\n    this.val += 2; //To ensure this is stable\n    return result;\n  }\n\n  randRange(x: number) {\n    return Math.floor(x * this.random());\n  }\n\n  choice(arr: any[]) {\n    let len = arr.length;\n    return arr[this.randRange(len)];\n  }\n\n  shuffle(deck: any[]) {\n    let clone = deck.slice(0);\n    let srcIndex = deck.length;\n    let dstIndex = 0;\n    let shuffled = new Array(srcIndex);\n\n    while (srcIndex) {\n      let randIndex = (srcIndex * this.random()) | 0;\n      shuffled[dstIndex++] = clone[randIndex];\n      clone[randIndex] = clone[--srcIndex];\n    }\n\n    return shuffled;\n  }\n}","import React, { ReactNode as EL } from 'react';\nimport { ActivePlayers } from 'boardgame.io/core';\nimport _ from 'lodash';\nimport { Ctx, Move as GeneralMove } from 'boardgame.io';\nimport { INVALID_MOVE } from 'boardgame.io/core';\nimport { CARDS } from './cards';\n\nimport { IGame, ICard, IPlayer, IAction, FlipAction, ExecuteAction } from './types';\nimport { AVATARS } from './assets';\nimport { GOALS, PUBLIC_GOALS } from './goals';\nimport { PRNG } from './utils';\n\n// No \"turn based\" stuffs are used\n\nconst NUM_PLAYERS = 4;\n\ntype Move = (G: IGame, ctx: Ctx, ...args: any[]) => any;\n\nexport function move(deck1: ICard[], deck2: ICard[]) {\n  // This time, only procedure method, works\n  let card = deck1.splice(0, 1)[0];\n  if (card) {\n    deck2.unshift(card);\n    return card\n  }\n  else {\n    return undefined;\n  }\n}\n\nfunction init_deck(G:IGame, ctx: Ctx): ICard[] {\n  // let deck_data = \"\".split(\" \")\n  let deck_data = [..._.times(6, () => \"炸弹\"), ..._.times(4, () => \"护甲\"), ..._.times(3, () => \"白嫖\"), ..._.times(2, ()=>\"反向白嫖\"), ..._.times(3, () => \"拆弹\"),..._.times(2, () => \"引爆\"),..._.times(1, () => \"加速\"),..._.times(3, () => \"归档\"),..._.times(2, () => \"鞋子\"),..._.times(1, () => \"裸奔\"),..._.times(2, () => \"送温暖\"),..._.times(1, () => \"西红柿\"),..._.times(1, () => \"柠檬\"),..._.times(1, () => \"苹果\"),..._.times(2, ()=>\"机会\"),];\n  let deck = deck_data.map(name => CARDS.find(x => x.name == name)).filter(x => x != undefined).map(x => ({...x})) as ICard[];\n  for (let card of deck) {\n    if (card.has_fruit) {\n      card.fruit = G.rng.randRange(3);\n    }\n  }\n  return G.rng.shuffle(deck);\n}\n\nfunction setup_player(): IPlayer {\n  const P: IPlayer = {\n    score: 0,\n    hand: [],\n    deck: [],\n    discard: [],\n    goals: [],\n\n    entities: [\"skip\"],\n\n    previous_action: undefined,\n\n    finished: false,\n    out: false,\n\n    // TODO: add goals\n  };\n\n  return P;\n}\n\nconst init_draft: Move = (G, ctx) => {\n  // After all cards are into the deck and deck is shuffled\n  for (let player of G.players) {\n    player.hand = G.deck.slice(0, 7);\n    G.deck = G.deck.slice(7);\n  }\n};\n\nconst add_avatars: Move = (G, ctx) => {\n  let len = G.players.length;\n  console.log(G.rng);\n  console.log(G.rng.shuffle);\n  let avatars = G.rng.shuffle(AVATARS).slice(0, len);\n  for (let i=0; i<len; i++) {\n    G.players[i].illust = avatars[i];\n  }\n}\n\nconst init_goals: Move = (G, ctx) => {\n  let goals = G.rng.shuffle([...GOALS, ...GOALS.filter(x => x.stackable)]);\n\n  // Debug is 1, then change to 2\n  for (let i=0; i<G.players.length; i++) {\n    let player = G.players[i];\n    player.goals = goals.slice(2*i, 2*i+2);\n  }\n\n  G.public_goals = G.rng.shuffle(PUBLIC_GOALS.map(g=>({...g, is_achieved: false}))).slice(0,1);\n}\n\nconst init_round: Move = (G, ctx) => {\n  // Reset the deck, pass the init player\n  G.phase = \"place\";\n  G.round += 1;\n  G.deck = init_deck(G, ctx);\n  G.init_player = (G.init_player + 1) % 4;\n\n  // Reset player data\n  for (let player of G.players) {\n    player.deck = [];\n    player.hand = [];\n    player.discard = [];\n    player.entities = [\"skip\"];\n    player.out = false;\n    player.finished = false;\n    player.previous_action = undefined;\n  }\n\n  init_goals(G, ctx);\n  init_draft(G, ctx);\n}\n\n// This is just for init\nfunction setup(ctx: Ctx): IGame {\n  const G: IGame = {\n    deck: [],\n    players: _.times(NUM_PLAYERS, setup_player),\n    public_goals: [],\n    rng: new PRNG(114514),\n\n    actions: [],\n    round: -1,\n    init_player: 0,\n    active_player_idx: 0,\n    next_action: \"place\",\n\n    phase: \"place\",\n\n    host: 0,\n    ai_players: [0,1,2,3].slice(ctx.numPlayers),\n    gamelogs: [],\n\n    f1: () => \"f1\",\n    f2: () => \"f2\",\n  };\n\n  console.log(`How many Players AI: ${ctx.numPlayers} ${G.ai_players}`);\n\n  return G;\n}\n\nexport const setup_scenario: Move = (G, ctx, seed) => {\n  G.rng = new PRNG(seed);\n  add_avatars(G, ctx);\n  init_round(G, ctx);\n  G.f2 = () => \"f12\";\n}\n\nexport function add_fruits(G:IGame, ctx:Ctx, player: IPlayer, fruits: number[]) {\n  for (let i=0; i<3; i++) {\n    for (let j=0; j<fruits[i]; j++) {\n      player.entities.push({fruit: i});\n    }\n  }\n  for (let goal of G.public_goals) {\n    goal = PUBLIC_GOALS.find(x => x.desc == goal.desc) as ICard;\n    goal.effect(G, ctx, player, goal);\n  }\n}\n\nfunction all_finished(G: IGame): boolean {\n  let unfinished_player = G.players.find(x => !x.finished);\n  if (unfinished_player != undefined) {\n    return false;\n  }\n  else {\n    return true;\n  }\n}\n\nfunction get_next_idx(players: IPlayer[], current_idx: number): number {\n  let next_idx = (current_idx + 1) % (players.length);\n  if (players[next_idx].finished) {\n    return get_next_idx(players, next_idx);\n  }\n  else {\n    return next_idx;\n  }\n}\n\nconst place: Move = (G, ctx, from_idx: number, card_idx: number, direction: number) => {\n  let from_player = G.players[from_idx];\n  let card = from_player.hand[card_idx];\n  from_player.hand = from_player.hand.filter(x => (x != card));\n\n  let to_player = G.players[(from_idx + direction) % G.players.length];\n  to_player.deck.unshift(card);\n\n  from_player.previous_action = direction;\n};\n\nconst ai_moves: Move = (G, ctx) => {\n  for (let idx of G.ai_players) {\n    // AI IMPLEMENT: card_idx and direction\n    let card_idx = G.rng.randRange(G.players[idx].hand.length);\n    let direction = G.rng.randRange(G.players.length);\n    G.actions.push({\n      from_idx: idx,\n      card_idx, \n      direction,\n    });\n  }\n};\n\nconst enter_action_phase: Move = (G, ctx) => {\n  G.phase = \"action\";\n\n  for (let player of G.players) {\n    // console.log(\"Deck before:\", player.deck.map(card=>({...card})));\n    player.deck = G.rng.shuffle(player.deck);\n    player.deck = [...player.deck, ...player.goals];\n    // console.log(player.deck);\n  }\n\n  G.next_action = \"flip\";\n  G.active_player_idx = G.init_player;\n};\n\n\nconst change_hands_or_enter_action_phase: Move = (G, ctx) => {\n  let hands = G.players.map(player => player.hand);\n  let len = hands.length;\n  let num_remained_cards = hands[0].length;\n  console.log(G.rng);\n  console.log(\"Shuffle:\", G.rng.shuffle);\n  console.log(\"F1:\", G.f1);\n  console.log(\"F2:\", G.f2);\n\n  if (num_remained_cards == 0) {\n    console.log(\"Time to enter the action phase\");\n    enter_action_phase(G, ctx);\n  }\n\n  else {\n    console.log(\"Pass hands\");\n    hands = [hands[len-1], ...hands.slice(0, len-1)];\n    for (let i=0; i<len; i++) {\n      G.players[i].hand = hands[i];\n    }\n  }\n\n  for(let player of G.players) {\n    player.placed = false;\n  }\n};\n\nconst carry_actions: Move = (G, ctx) => {\n  for (let action of G.actions) {\n    place(G, ctx, action.from_idx, action.card_idx, action.direction);\n  }\n  G.actions = [];\n\n  change_hands_or_enter_action_phase(G, ctx);\n};\n\nconst add_action: Move = (G, ctx, action: IAction) => {\n  G.actions.push(action);\n  G.players[action.from_idx].placed = true;\n\n  // let host move\n  let from_idx = action.from_idx;\n  if (from_idx == G.host) {\n    ai_moves(G, ctx);\n  }\n  console.log(`Actions length: ${G.actions.length}`);\n\n  // Check whether it's full\n  if (G.actions.length == G.players.length) {\n    carry_actions(G, ctx);\n  }\n};\n\nfunction flip_card(active_player: IPlayer) {\n  let card = active_player.deck[0];\n  if (card != undefined) {\n    active_player.deck = active_player.deck.slice(1);\n    active_player.discard.unshift(card);\n  }\n}\n\nexport function out(player: IPlayer) {\n  let shield_idx = player.entities.map((x,idx) => (x == \"shield\")? idx : undefined).filter(x => x != undefined)[0];\n  console.log(\"Find shield:\", shield_idx);\n  if (shield_idx != undefined) {\n    player.entities = player.entities.filter((x,idx) => (idx != shield_idx));\n  }\n  else {\n    console.log(`Player ${player.score}分 is out`)\n    player.out = true;\n  }\n}\n\n// const enter_place_phase: Move = (G, ctx) => {\n//   G.phase = \"place\";\n//   // EH: Reconstruct this into reset instead of just copy all setup stuffs\n\n//   G.round += 1;\n//   G.init_player = (G.init_player + 1) % 4;\n\n//   for (let player of G.players) {\n//     G.deck = [...G.deck, ...player.discard, ...player.hand, ...player.deck];\n\n//     player.deck = [];\n//     player.hand = [];\n//     player.discard = [];\n//     player.entities = [\"skip\"];\n//     player.out = false;\n//     player.finished = false;\n//     player.previous_action = undefined;\n//   }\n\n//   G.deck = G.rng.shuffle(G.deck);\n\n//   init_draft(G, ctx);\n// };\n\nconst enter_place_phase: Move = (G, ctx) => {\n  init_round(G, ctx);\n}\n\nconst proceed: Move = (G, ctx, skipped?: boolean) => {\n  if (G.next_action == \"execute\" || skipped) {\n    // Check whether end the action phase, or pass to the next player\n    // Or say that pass to the next player, and if there's nobody to pass, then enter the action phase\n    if (all_finished(G)) {\n      enter_place_phase(G, ctx);\n    }\n    else {\n      let next_idx = get_next_idx(G.players, G.active_player_idx);\n      G.active_player_idx = next_idx;\n      G.next_action = \"flip\";\n    }\n  }\n\n  else {\n    G.next_action = \"execute\";\n  }\n};\n\nconst flip: Move = (G, ctx, player_idx: number, flip_action: FlipAction) => {\n  // Double check is fine\n  if (G.next_action == \"flip\" && G.active_player_idx == player_idx) {\n    let active_player = G.players[G.active_player_idx];\n    let skipped = false;\n\n    if (flip_action == \"skip\") {\n      let skipper = active_player.entities.find(x => x == \"skip\");\n      if (skipper != undefined) {\n        let skipper_idx = active_player.entities.indexOf(skipper);\n        flip_card(active_player);\n        active_player.entities.splice(skipper_idx, 1);\n        skipped = true;\n        log_msg(G, ctx, `选择跳过`);\n        // G.active_player_idx = (G.active_player_idx + 1) % NUM_PLAYERS;\n        // G.next_action = \"flip\";\n      }\n      else {\n        return INVALID_MOVE;\n      }\n    }\n\n    // EH: Write this in \"utils\" to make it more haskell-styled\n    else if (typeof(flip_action) == \"object\" && \"archive_idx\" in flip_action) {\n      let archive = active_player.hand[flip_action.archive_idx];\n      if (archive != undefined) {\n        active_player.hand = active_player.hand.filter(x => x != archive);\n        active_player.discard.unshift(archive);\n      }\n      else {\n        return INVALID_MOVE;\n      }\n    }\n\n    // Normal flip goes here\n    else {\n      flip_card(active_player);\n      console.log(\"翻开牌\", active_player.discard[0].name);\n      log_msg(G, ctx, `翻开 ${active_player.discard[0].name}`);\n    }\n\n    proceed(G, ctx, skipped);\n    \n  }\n  else {\n    return INVALID_MOVE;\n  }\n};\n\nconst execute: Move = (G, ctx, player_idx: number, execute_action: ExecuteAction) => {\n  if (player_idx == G.active_player_idx) {\n    let player = G.players[G.active_player_idx];\n    let card = player.discard[0];\n    console.log(`${player_idx} is executing`);\n    if (execute_action == \"fruit\") {\n      console.log(\"Gonna add fruit\");\n      if (card.fruit != undefined) {\n        // player.entities.push({fruit: card.fruit});\n        let added = [0,0,0];\n        added[card.fruit] = 1;\n        add_fruits(G, ctx, player, added);\n        log_msg(G, ctx, `将 ${card.name} 作为水果`);\n      }\n      else {\n        return INVALID_MOVE;\n      }\n    }\n    else {\n      console.log(`Just execute ${card.name}`);\n      // Add functions\n      card = (card.is_goal?GOALS:CARDS).find(x => x.name == card.name) as ICard;\n      console.log({...card});\n      card.effect && card.effect(G, ctx, player, card);\n      log_msg(G, ctx, `执行 ${card.name}`);\n    }\n\n    // Check finished\n    player.finished = (player.out || (player.deck.length == 0));\n\n    proceed(G, ctx);\n  }\n  else {\n    return INVALID_MOVE;\n  }\n};\n\nconst ai_act: Move = (G, ctx, from_idx: number) => {\n  if (G.ai_players.includes(G.active_player_idx) && (G.host == from_idx)) {\n    if (G.next_action == \"flip\") {\n      // AI IMPLEMENT: Flip action and execute action\n      let flip_action: FlipAction = \"flip\"\n      flip(G, ctx, G.active_player_idx, flip_action);\n    }\n    else if (G.next_action == \"execute\") {\n      let execute_action: ExecuteAction = \"execute\"\n      execute(G, ctx, G.active_player_idx, execute_action);\n    }\n    else {\n      return INVALID_MOVE;\n    }\n  }\n  else {\n    return INVALID_MOVE;\n  }\n};\n\nexport const log_msg: Move = (G, ctx, msg: string) => {\n  G.gamelogs.unshift(msg);\n}\n\nexport const CSPR = {\n  setup: setup,\n  moves: {\n    add_action,\n    flip,\n    execute,\n    ai_act,\n    log_msg,\n    setup_scenario,\n  },\n  minPlayers: 1,\n  maxPlayers: 4,\n  turn: {\n    activePlayers: ActivePlayers.ALL,\n  },\n  plugins: [\n    {\n      name: \"rng\",\n      fnWrap: (fn:any) => (G:IGame, ctx:Ctx, ...args:any[]) => {\n        G = fn({...G, rng: new PRNG(114514, G.rng.val)}, ctx, ...args);\n        return G;\n      }\n    },\n  ],\n};","import React, { ReactNode } from 'react';\nimport { Entity } from './types';\n\n// import './icons.css';\nimport { contain_key } from './utils';\n\nconst fruit_style = {\n  height: \"auto\",\n  width: \"1.0em\",\n};\n\nexport const FRUITS: ReactNode[]= [\n  \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/tomato_1f345.png\",\n  \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/lemon_1f34b.png\",\n  \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/green-apple_1f34f.png\",\n].map(src => <img src={src} style={fruit_style} />);\n\nexport const shield_icon = <img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/shield_1f6e1.png\" style={fruit_style} />;\n\nexport const skip_icon = <img src=\"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/twitter/259/running-shoe_1f45f.png\" style={fruit_style} />;\n\nexport function get_entity_icon(entity: Entity): ReactNode {\n  if (typeof entity == \"object\") {\n    return FRUITS[entity.fruit];\n  }\n  else if (entity == \"shield\") {\n    return shield_icon;\n  }\n  else {\n    return skip_icon;\n  }\n}","import React from 'react';\nimport { IState, Action, Phase, IOperation, IGame, ICard, FlipAction } from './types'\n\nexport function init_state(): IState {\n  return {\n    board: \"GoalBoard\",\n    player_idx: 0,\n    log: \"\",\n  };\n}\n\nconst change_hand_selected: Action = (S, idx: number) => {\n  if (S.hand_selected == idx) {\n    S.hand_selected = undefined;\n  }\n  else {\n    S.hand_selected = idx;\n  }\n}\n\nfunction get_place_operations(from_idx: number, card_idx: number): IOperation[] {\n  let directions = [0, 1, 3, 2];\n  let names = [\"自己\", \"下家\", \"上家\", \"对家\"];\n\n  return directions.map((direction, idx) => ({\n    name: names[idx],\n    action: \"add_place_action\",\n    args: [from_idx, card_idx, direction],\n  }));\n}\n\n// const change_operations_on_select_hand: Action = (S, should_change: boolean) => {\n//   if (should_change) {\n//     if (S.hand_selected != undefined) {\n//       S.operations = get_place_operations(S.player_idx, S.hand_selected);\n//     }\n//     else {\n//       S.operations = [];\n//     }\n//   }\n//   else {\n//     console.log(\"Should not change\");\n//     return;\n//   }\n// }\n\nexport function get_operations(G: IGame, S: IState): IOperation[] {\n  let player = G.players[S.player_idx];\n  if (G.phase == \"place\") {\n    if (!player.placed && S.hand_selected != undefined) {\n      return get_place_operations(S.player_idx, S.hand_selected);\n    }\n    else {\n      return [];\n    }\n  }\n  else {\n    if (G.active_player_idx == S.player_idx) {\n      if (G.next_action == \"flip\") {\n        let flip_actions: IOperation[] = [\n          {name: \"翻开\", action: \"flip\", args: [S.player_idx, \"flip\"]},\n        ];\n        if (player.entities.includes(\"skip\")) {\n          flip_actions.push({name: \"跳过\", action: \"flip\", args: [S.player_idx, \"skip\"]});\n        }\n        if ((player.hand.length > 0) && (S.hand_selected != undefined)) {\n          flip_actions.unshift({name: \"打出存档\", action: \"flip\", args: [S.player_idx, {archive_idx: S.hand_selected}]});\n        }\n        return flip_actions;\n      }\n      else {\n        let execute_actions: IOperation[] = [\n          {name: \"执行\", action: \"execute\", args: [S.player_idx, \"execute\"]},\n        ];\n        let top_card = player.discard[0];\n        if (top_card.fruit != undefined) {\n          execute_actions.push({name: \"作为水果\", action: \"execute\", args: [S.player_idx, \"fruit\"]});\n        }\n        return execute_actions;\n      }\n    }\n    else {\n      if (S.player_idx == G.host && G.ai_players.includes(G.active_player_idx)) {\n        return [\n          {\n            name: \"行动\",\n            action: \"ai_act\",\n            args: [S.player_idx],\n          }\n        ];\n      }\n      else {\n        return [];\n      }\n    }\n  }\n}\n\nconst select_hand: Action = (S, idx: number, hand: ICard[]) => {\n  change_hand_selected(S, idx);\n  let card = hand[idx];\n  log_msg(S, <span>{card.name}: {card.desc}</span>);\n}\n\nconst clear_state: Action = (S) => {\n  S.hand_selected = undefined;\n}\n\nconst change_board: Action = (S, board) => {\n  S.board = board;\n}\n\nconst log_msg: Action = (S, msg) => {\n  S.log = msg;\n}\n\nexport const ACTIONS: Record<string, Action> = {\n  select_hand,\n  clear_state,\n  change_board,\n  log_msg,\n};","import { CombinedAction, Dispatcher, ExecuteAction, FlipAction } from './types';\n\nconst add_place_action: CombinedAction = (moves, actions, from_idx: number, card_idx: number, direction: number) => {\n  moves.add_action({from_idx, card_idx, direction});\n  actions.clear_state();\n};\n\nconst ai_act: CombinedAction = (moves, actions, from_idx: number) => {\n  moves.ai_act(from_idx);\n};\n\nconst flip: CombinedAction = (moves, actions, player_idx: number, flip_action: FlipAction) => {\n  moves.flip(player_idx, flip_action);\n}\n\n\nconst execute: CombinedAction = (moves, actions, player_idx: number, execute_action: ExecuteAction) => {\n  moves.execute(player_idx, execute_action);\n}\n\n// const select_hand: CombinedAction = (moves, actions, hand_idx: number) => {\n//   actions.select_hand(hand_idx);\n//   moves.show_hand_info(hand_idx);\n// }\n\nexport const COMBINED: Record<string, CombinedAction> = {\n  add_place_action,\n  ai_act,\n  flip,\n  execute,\n  // select_hand,\n};","import React, { ReactNode as EL, FC, useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport { produce } from 'immer';\nimport { AVATARS } from './assets';\n\nimport './Board.css';\n\nimport { ICard, IPlayer, IGame, IState, Action, IOperation, Dispatcher, CombinedAction, BoardProps } from './types';\nimport { FRUITS, get_entity_icon } from './icons';\nimport { Ctx } from 'boardgame.io';\nimport { BoardProps as BGBoardProps } from 'boardgame.io/react';\nimport { CARDS } from './cards';\nimport { ACTIONS, get_operations, init_state } from './actions';\nimport { map_object, reorder } from './utils';\nimport { COMBINED } from './combiner';\nimport { goal_illust as goal_illust_src } from './assets';\n\nfunction TopPanel(props: {gameCount: string|number, checkGoal:()=>void}) {\n  return <div className=\"top-panel\">\n    <button className=\"check-goal-button\" onClick={props.checkGoal} >查看目标</button>\n    {props.gameCount}\n  </div>;\n}\n\nfunction DeckArea(props: {cardNum: number}) {\n  return <div className=\"deck-area\">\n    <div className=\"card-num\">\n      {props.cardNum}\n    </div>\n  </div>;\n}\n\nfunction PlayArea(props: {playedCard?: ICard}) {\n  return <div className=\"play-area\">\n    <Card {...props.playedCard} />\n  </div>;\n}\n\nfunction CardAreas(props: {cardNum: number, playedCard?: ICard}) {\n  // Both draw pile and discard pile go together,\n  // Also, Card should be 100% and be contained with card containers\n  return <div className=\"card-areas\">\n    <DeckArea cardNum={props.cardNum} />\n    <PlayArea playedCard={props.playedCard} />\n  </div>;\n}\n\nfunction Avatar(props: {illust?: string, selected?: boolean, out?: boolean}) {\n  return <div className=\"avatar\" style={{border:(props.selected)?\"3px solid #61dafb\":(props.out)?\"1px solid #f5222d\":undefined}}>\n    <img src={props.illust} className=\"avatar-img\" />\n  </div>;\n}\n\nfunction InfoLine(props: {content: string|EL}) {\n  return <div className=\"info-line\" style={{color: (props.content==\"扣给你\")?\"#61dafb\":undefined}}>\n    {props.content}\n  </div>;\n}\n\n// TODO: Make an adapter to fit those two\nexport interface IPlayerInfo extends IPlayer {\n  selected?: boolean, \n  name: string, \n  info: string | EL[],\n};\n\nfunction PlayerInfo(props: IPlayerInfo) {\n  return <div className=\"player-info\">\n    <Avatar illust={props.illust} selected={props.selected} out={props.out} />\n    <InfoLine content={`${props.name}(${props.score}分)`} />\n    <InfoLine content={props.info}/>\n  </div>;\n}\n\nfunction Player(props: {playerInfo: IPlayerInfo}) {\n  return <div className=\"player\">\n    <CardAreas cardNum={props.playerInfo.deck.length} playedCard={props.playerInfo.discard[0]} />\n    <PlayerInfo {...props.playerInfo} />\n  </div>;\n}\n\nfunction Central(props: {players: IPlayerInfo[]}) {\n  return <div className=\"central\">\n    {props.players.map(player => \n    // illust name score info\n      <Player playerInfo={player} />\n    )}\n  </div>;\n}\n\nfunction InfoPanel(props: {log: string}) {\n  // Top panel is only used to display count, all other logs are displayed in info panel\n  // useEffect(()=>console.log(props.log), [props.log]);\n  return <div className=\"info-panel\">\n    {props.log}\n  </div>;\n}\n\nfunction Controller(props: {operations: IOperation[], combined: Record<string, Dispatcher>, autoMove?: boolean, G:IGame}) {\n  // Use this method at first, and props.autoMove is only used when needed\n  let move1 = props.operations[0];\n  let autoMove = move1 && (move1.name == \"行动\");\n  useEffect(() => {\n    if (autoMove == true) {\n      let operation = props.operations[0];\n      console.log(`Ready to auto_move ${props.G.active_player_idx} ${props.G.next_action}`);\n      setTimeout(()=>{\n        props.combined[operation.action](...(operation.args || []));\n      }, 600);\n    }\n    else {\n      return;\n    }\n  }, [props.G.active_player_idx, props.G.next_action]);\n\n  let operations = (autoMove)? [] : props.operations;\n\n  return <div className=\"controller\">\n    {operations.map(operation => \n      <button className=\"controller-button\" onClick={() => props.combined[operation.action](...(operation.args || []))}>{operation.name}</button>\n    )}\n  </div>;\n}\n\nfunction Card(props: Partial<ICard>) {\n  return <div className=\"card\">\n    <div className=\"illust-container\">\n      <img className=\"illust\" src={props.illust} />\n    </div>\n    <div className=\"card-fruit\" style={{display:(props.fruit != undefined)?undefined:\"none\"}}>{(props.fruit != undefined)? FRUITS[props.fruit] : \"\"}</div>\n  </div>;\n}\n\nfunction CardContainer(props: {card: Partial<ICard>, handleClick: ()=>void}) {\n  return <div \n    className = \"card-container\" \n    style = {{border:(props.card.selected == true)?\"3px solid #61dafb\":undefined}}\n    onClick = {props.handleClick}\n  >\n    <Card {...props.card} />\n  </div>;\n}\n\nfunction CardRow(props: {cards: ICard[], handleCardClick: (idx: number)=>()=>void}) {\n  return <div className=\"card-row\">\n    {props.cards.map((card, idx) => <CardContainer card={card} handleClick={props.handleCardClick(idx)} />)}\n  </div>;\n}\n\nfunction Template(props: {}) {\n  return <div className=\"template\">\n  </div>;\n}\n\nfunction hand_processor(S: IState): (card: ICard, idx: number) => ICard {\n  return (card, idx) => ({\n    ...card,\n    selected: S.hand_selected == idx,\n  });\n}\n\nfunction get_player_info(player: IPlayer, G: IGame, S: IState): string | EL[] {\n  if (G.phase == \"place\") {\n    if (player.previous_action != undefined) {\n      let target_idx = (G.players.indexOf(player) + player.previous_action) % 4;\n      if (target_idx == S.player_idx && player.previous_action != 0) {\n        return \"扣给你\";\n      }\n      else {\n        return [\"扣给自己\", \"扣给下家\", \"扣给对家\", \"扣给上家\",][player.previous_action];\n      }\n    }\n    else {\n      return \"准备扣牌\";\n    }\n  }\n  else {\n    if (player.finished) {\n      if (player.out) {\n        return \"已出局\";\n      }\n      else {\n        return \"已完成\";\n      }\n    }\n    else {\n      return player.entities.map(entity => get_entity_icon(entity));\n    }\n  }\n}\n\nfunction get_position(idx: number, player_idx: number) {\n  let diff = idx - player_idx;\n  if (diff < 0) {\n    return 4 + diff;\n  }\n  else {\n    return diff;\n  }\n}\n\nfunction process_player(player: IPlayer, idx: number, G: IGame, S: IState): IPlayerInfo {\n  return {\n    ...player,\n    name: [\"玩家\", \"下家\", \"对家\", \"上家\"][get_position(idx, S.player_idx)],\n    info: get_player_info(player, G, S),\n    selected: (G.phase == \"action\") && (idx == G.active_player_idx),\n  };\n}\n\nfunction GameBoard(props: BoardProps){\n  return <div className=\"board\">\n    <Central \n      players = {reorder(props.G.players.map((player, idx) => process_player(player, idx, props.G, props.S)), [(props.S.player_idx+2)%4,(props.S.player_idx+3)%4,(props.S.player_idx+1)%4,props.S.player_idx])}\n    />\n    <InfoPanel log={(props.G.phase == \"place\")? props.S.log : props.G.gamelogs[0]} />\n    {/* <InfoPanel log=\"这是一条log\" /> */}\n    {/* <InfoPanel log={props.S.log} /> */}\n    {/* <InfoPanel log={props.G.gamelog} /> */}\n    <Controller \n      operations = {get_operations(props.G, props.S)}\n      combined = {props.combined}\n      G = {props.G}\n    />\n    <CardRow \n      cards = {props.G.players[props.S.player_idx].hand.map(hand_processor(props.S))}  \n      handleCardClick = {idx => () => props.actions.select_hand(idx, props.G.players[props.S.player_idx].hand)}\n    />\n    <TopPanel gameCount={`${\"東南西\"[Math.floor(props.G.round/4)]}${props.G.round % 4 + 1}局`} checkGoal={()=>props.actions.change_board(\"GoalBoard\")} />\n  </div>;\n}\n\nfunction Goal(props: {goal: Partial<ICard>}) {\n  let goal_illust = (props.goal.is_public == true)? \"https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/google/263/green-salad_1f957.png\":goal_illust_src;\n  return <div className=\"goal\">\n    <div className=\"goal-illust-container\">\n      <img className=\"goal-illust\" src={goal_illust} />\n    </div>\n    <div className=\"goal-desc-container\">\n      {/*props.goal.name <br/> props.goal.desc*/}\n      <div className=\"goal-desc\">\n        {props.goal.name}<br/>\n        {props.goal.desc}\n      </div>\n    </div>\n  </div>;\n}\n\nfunction process_public_goal(desc: string|EL): EL {\n  let fruits_lookup: Record<string, EL> = {A:FRUITS[0], B:FRUITS[1], C:FRUITS[2]};\n  return (desc as string).split(\"\").map(char => fruits_lookup[char]);\n}\n\nfunction GoalBoard(props: BoardProps) {\n  return <div className=\"board\">\n    <div className=\"goals-container\">\n      {props.G.public_goals.filter(goal => !goal.is_achieved).map(goal => <Goal goal={{name: goal.name, desc:process_public_goal(goal.desc), is_public:goal.is_public}} />)}\n      {props.G.players[props.S.player_idx].goals.map(goal => <Goal goal={{name: goal.name, desc:goal.desc, is_public:goal.is_public}}/>)}\n    </div>\n    <button className=\"gb-back-button\" onClick={() => props.actions.change_board(\"GameBoard\")} >返回</button>\n  </div>;\n}\n\nconst BOARDS: Record<string, (props:BoardProps)=>JSX.Element> = {\n  GameBoard,\n  GoalBoard,\n};\n\nexport function Board(props: BGBoardProps<IGame>) {\n  let [S, setS] = useState<IState>(init_state);\n  let actions = map_object<Action, Dispatcher>(\n    action => (...args: any[]) => setS(produce(S => action(S, ...args))), \n    ACTIONS,\n  );\n  let combined = map_object<CombinedAction, Dispatcher>(\n    action => (...args: any[]) => action(props.moves, actions, ...args),\n    COMBINED,\n  );\n  let {G, ctx, moves} = props;\n  let board_props: BoardProps = {\n    G, ctx, moves, S, actions, combined,\n  };\n\n  // Show hand info\n  // Don't use useEffect to change the log, a strange bug may happen\n  // useEffect(()=>{\n  //   if (S.hand_selected != undefined) {\n  //     let card = G.players[S.player_idx].hand[S.hand_selected];\n  //     actions.log_msg(`${card.name}: ${card.desc}`);\n  //   }\n  //   else {\n  //     return;\n  //   }\n  // }, [S.hand_selected]);\n\n  // Show game info\n  // useEffect(() => actions.log_msg(G.gamelog), [G.gamelog]);\n\n  useEffect(() => {\n    if (G.phase == \"place\") {\n      actions.change_board(\"GoalBoard\");\n    }\n  }, [G.phase]);\n\n  useEffect(() => {\n    setS({...S, player_idx: parseInt(props.playerID || \"0\")});\n    console.log({...props});\n    console.log(`The player ID is: ${props.playerID}`);\n    let is_host = props.playerID == props.G.host + \"\";\n    if (is_host || (props.playerID == undefined)) {\n      console.log(\"This guy is host\");\n      props.moves.setup_scenario(Date());\n    }\n  }, []);\n\n  let board: (props:BoardProps) => JSX.Element = BOARDS[S.board] || GameBoard;\n  // let board = GoalBoard;\n\n  return board(board_props);\n}\n\n","import React from 'react';\nimport './Board.css';\nimport './Title.css';\n\ninterface ITitleOperation {\n  name: string,\n  effect?: () => void,\n}\n\nexport const TitleScreen = (props: {title: string, operations: ITitleOperation[], titleImg?: string}) => (\n  <div className=\"board\">\n  <div className=\"title-block\">\n    <div className=\"title-img-container\">\n      <img className=\"title-img\" src={props.titleImg} />\n    </div>\n    <h2 className=\"title\" >{props.title}</h2>\n    <div >\n      制作: <a href=\"https://space.bilibili.com/8492192/dynamic/\" className=\"title-a\">大雕游戏</a>\n    </div>\n    {props.operations.map(operation => <span><button className=\"title-screen-button primary\" onClick={operation.effect}>{operation.name}</button><br/></span>)}\n  </div>\n  </div>\n);","export const AVATARS = \n[[\"罗宾\", \"http://prts.wiki/images/1/1f/%E5%A4%B4%E5%83%8F_%E7%BD%97%E5%AE%BE.png\"],\n[\"卡夫卡\", \"http://prts.wiki/images/8/8d/%E5%A4%B4%E5%83%8F_%E5%8D%A1%E5%A4%AB%E5%8D%A1.png\"],\n[\"山\", \"http://prts.wiki/images/e/ec/%E5%A4%B4%E5%83%8F_%E5%B1%B1.png\"],\n[\"松果\", \"http://prts.wiki/images/5/5e/%E5%A4%B4%E5%83%8F_%E6%9D%BE%E6%9E%9C.png\"],\n[\"阿米娅(近卫)\", \"http://prts.wiki/images/5/5b/%E5%A4%B4%E5%83%8F_%E9%98%BF%E7%B1%B3%E5%A8%85%28%E8%BF%91%E5%8D%AB%29.png\"],\n[\"迷迭香\", \"http://prts.wiki/images/3/3b/%E5%A4%B4%E5%83%8F_%E8%BF%B7%E8%BF%AD%E9%A6%99.png\"],\n[\"泥岩\", \"http://prts.wiki/images/0/06/%E5%A4%B4%E5%83%8F_%E6%B3%A5%E5%B2%A9.png\"],\n[\"絮雨\", \"http://prts.wiki/images/3/34/%E5%A4%B4%E5%83%8F_%E7%B5%AE%E9%9B%A8.png\"],\n[\"杰克\", \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_%E6%9D%B0%E5%85%8B.png\"],\n[\"瑕光\", \"http://prts.wiki/images/f/f7/%E5%A4%B4%E5%83%8F_%E7%91%95%E5%85%89.png\"],\n[\"奥斯塔\", \"http://prts.wiki/images/4/49/%E5%A4%B4%E5%83%8F_%E5%A5%A5%E6%96%AF%E5%A1%94.png\"],\n[\"鞭刃\", \"http://prts.wiki/images/f/f8/%E5%A4%B4%E5%83%8F_%E9%9E%AD%E5%88%83.png\"],\n[\"泡泡\", \"http://prts.wiki/images/2/28/%E5%A4%B4%E5%83%8F_%E6%B3%A1%E6%B3%A1.png\"],\n[\"史尔特尔\", \"http://prts.wiki/images/e/e1/%E5%A4%B4%E5%83%8F_%E5%8F%B2%E5%B0%94%E7%89%B9%E5%B0%94.png\"],\n[\"四月\", \"http://prts.wiki/images/d/d3/%E5%A4%B4%E5%83%8F_%E5%9B%9B%E6%9C%88.png\"],\n[\"薄绿\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E8%96%84%E7%BB%BF.png\"],\n[\"芳汀\", \"http://prts.wiki/images/6/6a/%E5%A4%B4%E5%83%8F_%E8%8A%B3%E6%B1%80.png\"],\n[\"森蚺\", \"http://prts.wiki/images/7/74/%E5%A4%B4%E5%83%8F_%E6%A3%AE%E8%9A%BA.png\"],\n[\"燧石\", \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E7%87%A7%E7%9F%B3.png\"],\n[\"特米米\", \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E7%89%B9%E7%B1%B3%E7%B1%B3.png\"],\n[\"酸糖\", \"http://prts.wiki/images/e/e9/%E5%A4%B4%E5%83%8F_%E9%85%B8%E7%B3%96.png\"],\n[\"棘刺\", \"http://prts.wiki/images/2/2a/%E5%A4%B4%E5%83%8F_%E6%A3%98%E5%88%BA.png\"],\n[\"安哲拉\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E5%AE%89%E5%93%B2%E6%8B%89.png\"],\n[\"孑\", \"http://prts.wiki/images/5/54/%E5%A4%B4%E5%83%8F_%E5%AD%91.png\"],\n[\"贾维\", \"http://prts.wiki/images/2/2a/%E5%A4%B4%E5%83%8F_%E8%B4%BE%E7%BB%B4.png\"],\n[\"蜜蜡\", \"http://prts.wiki/images/1/1d/%E5%A4%B4%E5%83%8F_%E8%9C%9C%E8%9C%A1.png\"],\n[\"稀音\", \"http://prts.wiki/images/c/c6/%E5%A4%B4%E5%83%8F_%E7%A8%80%E9%9F%B3.png\"],\n[\"铃兰\", \"http://prts.wiki/images/5/55/%E5%A4%B4%E5%83%8F_%E9%93%83%E5%85%B0.png\"],\n[\"断崖\", \"http://prts.wiki/images/e/ea/%E5%A4%B4%E5%83%8F_%E6%96%AD%E5%B4%96.png\"],\n[\"亚叶\", \"http://prts.wiki/images/b/b5/%E5%A4%B4%E5%83%8F_%E4%BA%9A%E5%8F%B6.png\"],\n[\"卡达\", \"http://prts.wiki/images/4/43/%E5%A4%B4%E5%83%8F_%E5%8D%A1%E8%BE%BE.png\"],\n[\"早露\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%97%A9%E9%9C%B2.png\"],\n[\"莱恩哈特\", \"http://prts.wiki/images/0/03/%E5%A4%B4%E5%83%8F_%E8%8E%B1%E6%81%A9%E5%93%88%E7%89%B9.png\"],\n[\"苦艾\", \"http://prts.wiki/images/e/e9/%E5%A4%B4%E5%83%8F_%E8%8B%A6%E8%89%BE.png\"],\n[\"波登可\", \"http://prts.wiki/images/4/43/%E5%A4%B4%E5%83%8F_%E6%B3%A2%E7%99%BB%E5%8F%AF.png\"],\n[\"月禾\", \"http://prts.wiki/images/b/b6/%E5%A4%B4%E5%83%8F_%E6%9C%88%E7%A6%BE.png\"],\n[\"石棉\", \"http://prts.wiki/images/1/18/%E5%A4%B4%E5%83%8F_%E7%9F%B3%E6%A3%89.png\"],\n[\"W\", \"http://prts.wiki/images/d/d6/%E5%A4%B4%E5%83%8F_W.png\"],\n[\"温蒂\", \"http://prts.wiki/images/9/93/%E5%A4%B4%E5%83%8F_%E6%B8%A9%E8%92%82.png\"],\n[\"极境\", \"http://prts.wiki/images/9/97/%E5%A4%B4%E5%83%8F_%E6%9E%81%E5%A2%83.png\"],\n[\"THRM-EX\", \"http://prts.wiki/images/d/d8/%E5%A4%B4%E5%83%8F_THRM-EX.png\"],\n[\"傀影\", \"http://prts.wiki/images/8/83/%E5%A4%B4%E5%83%8F_%E5%82%80%E5%BD%B1.png\"],\n[\"巫恋\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E5%B7%AB%E6%81%8B.png\"],\n[\"铸铁\", \"http://prts.wiki/images/8/84/%E5%A4%B4%E5%83%8F_%E9%93%B8%E9%93%81.png\"],\n[\"刻刀\", \"http://prts.wiki/images/2/2c/%E5%A4%B4%E5%83%8F_%E5%88%BB%E5%88%80.png\"],\n[\"断罪者\", \"http://prts.wiki/images/f/f2/%E5%A4%B4%E5%83%8F_%E6%96%AD%E7%BD%AA%E8%80%85.png\"],\n[\"风笛\", \"http://prts.wiki/images/d/de/%E5%A4%B4%E5%83%8F_%E9%A3%8E%E7%AC%9B.png\"],\n[\"慑砂\", \"http://prts.wiki/images/e/e7/%E5%A4%B4%E5%83%8F_%E6%85%91%E7%A0%82.png\"],\n[\"柏喙\", \"http://prts.wiki/images/2/2f/%E5%A4%B4%E5%83%8F_%E6%9F%8F%E5%96%99.png\"],\n[\"宴\", \"http://prts.wiki/images/f/f4/%E5%A4%B4%E5%83%8F_%E5%AE%B4.png\"],\n[\"清流\", \"http://prts.wiki/images/1/19/%E5%A4%B4%E5%83%8F_%E6%B8%85%E6%B5%81.png\"],\n[\"刻俄柏\", \"http://prts.wiki/images/4/4a/%E5%A4%B4%E5%83%8F_%E5%88%BB%E4%BF%84%E6%9F%8F.png\"],\n[\"惊蛰\", \"http://prts.wiki/images/8/81/%E5%A4%B4%E5%83%8F_%E6%83%8A%E8%9B%B0.png\"],\n[\"年\", \"http://prts.wiki/images/9/9c/%E5%A4%B4%E5%83%8F_%E5%B9%B4.png\"],\n[\"阿\", \"http://prts.wiki/images/3/31/%E5%A4%B4%E5%83%8F_%E9%98%BF.png\"],\n[\"吽\", \"http://prts.wiki/images/4/41/%E5%A4%B4%E5%83%8F_%E5%90%BD.png\"],\n[\"雪雉\", \"http://prts.wiki/images/2/24/%E5%A4%B4%E5%83%8F_%E9%9B%AA%E9%9B%89.png\"],\n[\"煌\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E7%85%8C.png\"],\n[\"灰喉\", \"http://prts.wiki/images/3/3b/%E5%A4%B4%E5%83%8F_%E7%81%B0%E5%96%89.png\"],\n[\"安比尔\", \"http://prts.wiki/images/f/ff/%E5%A4%B4%E5%83%8F_%E5%AE%89%E6%AF%94%E5%B0%94.png\"],\n[\"布洛卡\", \"http://prts.wiki/images/0/04/%E5%A4%B4%E5%83%8F_%E5%B8%83%E6%B4%9B%E5%8D%A1.png\"],\n[\"苇草\", \"http://prts.wiki/images/7/7a/%E5%A4%B4%E5%83%8F_%E8%8B%87%E8%8D%89.png\"],\n[\"莫斯提马\", \"http://prts.wiki/images/0/0b/%E5%A4%B4%E5%83%8F_%E8%8E%AB%E6%96%AF%E6%8F%90%E9%A9%AC.png\"],\n[\"槐琥\", \"http://prts.wiki/images/e/ed/%E5%A4%B4%E5%83%8F_%E6%A7%90%E7%90%A5.png\"],\n[\"拜松\", \"http://prts.wiki/images/b/b2/%E5%A4%B4%E5%83%8F_%E6%8B%9C%E6%9D%BE.png\"],\n[\"梅\", \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E6%A2%85.png\"],\n[\"微风\", \"http://prts.wiki/images/a/ad/%E5%A4%B4%E5%83%8F_%E5%BE%AE%E9%A3%8E.png\"],\n[\"伊桑\", \"http://prts.wiki/images/c/c1/%E5%A4%B4%E5%83%8F_%E4%BC%8A%E6%A1%91.png\"],\n[\"麦哲伦\", \"http://prts.wiki/images/4/4d/%E5%A4%B4%E5%83%8F_%E9%BA%A6%E5%93%B2%E4%BC%A6.png\"],\n[\"送葬人\", \"http://prts.wiki/images/d/da/%E5%A4%B4%E5%83%8F_%E9%80%81%E8%91%AC%E4%BA%BA.png\"],\n[\"炎客\", \"http://prts.wiki/images/d/d6/%E5%A4%B4%E5%83%8F_%E7%82%8E%E5%AE%A2.png\"],\n[\"红云\", \"http://prts.wiki/images/a/af/%E5%A4%B4%E5%83%8F_%E7%BA%A2%E4%BA%91.png\"],\n[\"坚雷\", \"http://prts.wiki/images/a/ab/%E5%A4%B4%E5%83%8F_%E5%9D%9A%E9%9B%B7.png\"],\n[\"赫拉格\", \"http://prts.wiki/images/c/cd/%E5%A4%B4%E5%83%8F_%E8%B5%AB%E6%8B%89%E6%A0%BC.png\"],\n[\"星极\", \"http://prts.wiki/images/e/ee/%E5%A4%B4%E5%83%8F_%E6%98%9F%E6%9E%81.png\"],\n[\"桃金娘\", \"http://prts.wiki/images/9/9d/%E5%A4%B4%E5%83%8F_%E6%A1%83%E9%87%91%E5%A8%98.png\"],\n[\"黑\", \"http://prts.wiki/images/d/d4/%E5%A4%B4%E5%83%8F_%E9%BB%91.png\"],\n[\"格劳克斯\", \"http://prts.wiki/images/5/53/%E5%A4%B4%E5%83%8F_%E6%A0%BC%E5%8A%B3%E5%85%8B%E6%96%AF.png\"],\n[\"锡兰\", \"http://prts.wiki/images/3/39/%E5%A4%B4%E5%83%8F_%E9%94%A1%E5%85%B0.png\"],\n[\"苏苏洛\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E8%8B%8F%E8%8B%8F%E6%B4%9B.png\"],\n[\"陈\", \"http://prts.wiki/images/c/cf/%E5%A4%B4%E5%83%8F_%E9%99%88.png\"],\n[\"诗怀雅\", \"http://prts.wiki/images/5/50/%E5%A4%B4%E5%83%8F_%E8%AF%97%E6%80%80%E9%9B%85.png\"],\n[\"格雷伊\", \"http://prts.wiki/images/f/fe/%E5%A4%B4%E5%83%8F_%E6%A0%BC%E9%9B%B7%E4%BC%8A.png\"],\n[\"斑点\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E6%96%91%E7%82%B9.png\"],\n[\"泡普卡\", \"http://prts.wiki/images/1/16/%E5%A4%B4%E5%83%8F_%E6%B3%A1%E6%99%AE%E5%8D%A1.png\"],\n[\"斯卡蒂\", \"http://prts.wiki/images/5/53/%E5%A4%B4%E5%83%8F_%E6%96%AF%E5%8D%A1%E8%92%82.png\"],\n[\"格拉尼\", \"http://prts.wiki/images/2/29/%E5%A4%B4%E5%83%8F_%E6%A0%BC%E6%8B%89%E5%B0%BC.png\"],\n[\"夜魔\", \"http://prts.wiki/images/a/a7/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E9%AD%94.png\"],\n[\"猎蜂\", \"http://prts.wiki/images/c/c2/%E5%A4%B4%E5%83%8F_%E7%8C%8E%E8%9C%82.png\"],\n[\"月见夜\", \"http://prts.wiki/images/b/b7/%E5%A4%B4%E5%83%8F_%E6%9C%88%E8%A7%81%E5%A4%9C.png\"],\n[\"空爆\", \"http://prts.wiki/images/c/cd/%E5%A4%B4%E5%83%8F_%E7%A9%BA%E7%88%86.png\"],\n[\"暴行\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E6%9A%B4%E8%A1%8C.png\"],\n[\"银灰\", \"http://prts.wiki/images/2/27/%E5%A4%B4%E5%83%8F_%E9%93%B6%E7%81%B0.png\"],\n[\"塞雷娅\", \"http://prts.wiki/images/e/ee/%E5%A4%B4%E5%83%8F_%E5%A1%9E%E9%9B%B7%E5%A8%85.png\"],\n[\"星熊\", \"http://prts.wiki/images/0/07/%E5%A4%B4%E5%83%8F_%E6%98%9F%E7%86%8A.png\"],\n[\"夜莺\", \"http://prts.wiki/images/6/64/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E8%8E%BA.png\"],\n[\"闪灵\", \"http://prts.wiki/images/5/54/%E5%A4%B4%E5%83%8F_%E9%97%AA%E7%81%B5.png\"],\n[\"安洁莉娜\", \"http://prts.wiki/images/c/ca/%E5%A4%B4%E5%83%8F_%E5%AE%89%E6%B4%81%E8%8E%89%E5%A8%9C.png\"],\n[\"艾雅法拉\", \"http://prts.wiki/images/c/cc/%E5%A4%B4%E5%83%8F_%E8%89%BE%E9%9B%85%E6%B3%95%E6%8B%89.png\"],\n[\"伊芙利特\", \"http://prts.wiki/images/e/ed/%E5%A4%B4%E5%83%8F_%E4%BC%8A%E8%8A%99%E5%88%A9%E7%89%B9.png\"],\n[\"推进之王\", \"http://prts.wiki/images/b/ba/%E5%A4%B4%E5%83%8F_%E6%8E%A8%E8%BF%9B%E4%B9%8B%E7%8E%8B.png\"],\n[\"能天使\", \"http://prts.wiki/images/a/ad/%E5%A4%B4%E5%83%8F_%E8%83%BD%E5%A4%A9%E4%BD%BF.png\"],\n[\"食铁兽\", \"http://prts.wiki/images/d/dd/%E5%A4%B4%E5%83%8F_%E9%A3%9F%E9%93%81%E5%85%BD.png\"],\n[\"狮蝎\", \"http://prts.wiki/images/c/c5/%E5%A4%B4%E5%83%8F_%E7%8B%AE%E8%9D%8E.png\"],\n[\"空\", \"http://prts.wiki/images/5/58/%E5%A4%B4%E5%83%8F_%E7%A9%BA.png\"],\n[\"真理\", \"http://prts.wiki/images/e/e6/%E5%A4%B4%E5%83%8F_%E7%9C%9F%E7%90%86.png\"],\n[\"初雪\", \"http://prts.wiki/images/d/d7/%E5%A4%B4%E5%83%8F_%E5%88%9D%E9%9B%AA.png\"],\n[\"崖心\", \"http://prts.wiki/images/7/7d/%E5%A4%B4%E5%83%8F_%E5%B4%96%E5%BF%83.png\"],\n[\"守林人\", \"http://prts.wiki/images/2/27/%E5%A4%B4%E5%83%8F_%E5%AE%88%E6%9E%97%E4%BA%BA.png\"],\n[\"普罗旺斯\", \"http://prts.wiki/images/7/72/%E5%A4%B4%E5%83%8F_%E6%99%AE%E7%BD%97%E6%97%BA%E6%96%AF.png\"],\n[\"火神\", \"http://prts.wiki/images/f/f1/%E5%A4%B4%E5%83%8F_%E7%81%AB%E7%A5%9E.png\"],\n[\"可颂\", \"http://prts.wiki/images/a/ab/%E5%A4%B4%E5%83%8F_%E5%8F%AF%E9%A2%82.png\"],\n[\"雷蛇\", \"http://prts.wiki/images/f/f5/%E5%A4%B4%E5%83%8F_%E9%9B%B7%E8%9B%87.png\"],\n[\"红\", \"http://prts.wiki/images/a/ac/%E5%A4%B4%E5%83%8F_%E7%BA%A2.png\"],\n[\"临光\", \"http://prts.wiki/images/1/1a/%E5%A4%B4%E5%83%8F_%E4%B8%B4%E5%85%89.png\"],\n[\"华法琳\", \"http://prts.wiki/images/3/30/%E5%A4%B4%E5%83%8F_%E5%8D%8E%E6%B3%95%E7%90%B3.png\"],\n[\"赫默\", \"http://prts.wiki/images/3/39/%E5%A4%B4%E5%83%8F_%E8%B5%AB%E9%BB%98.png\"],\n[\"梅尔\", \"http://prts.wiki/images/0/07/%E5%A4%B4%E5%83%8F_%E6%A2%85%E5%B0%94.png\"],\n[\"天火\", \"http://prts.wiki/images/f/fa/%E5%A4%B4%E5%83%8F_%E5%A4%A9%E7%81%AB.png\"],\n[\"阿米娅\", \"http://prts.wiki/images/3/36/%E5%A4%B4%E5%83%8F_%E9%98%BF%E7%B1%B3%E5%A8%85.png\"],\n[\"陨星\", \"http://prts.wiki/images/e/ea/%E5%A4%B4%E5%83%8F_%E9%99%A8%E6%98%9F.png\"],\n[\"白金\", \"http://prts.wiki/images/3/3b/%E5%A4%B4%E5%83%8F_%E7%99%BD%E9%87%91.png\"],\n[\"蓝毒\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E8%93%9D%E6%AF%92.png\"],\n[\"幽灵鲨\", \"http://prts.wiki/images/2/28/%E5%A4%B4%E5%83%8F_%E5%B9%BD%E7%81%B5%E9%B2%A8.png\"],\n[\"拉普兰德\", \"http://prts.wiki/images/b/bf/%E5%A4%B4%E5%83%8F_%E6%8B%89%E6%99%AE%E5%85%B0%E5%BE%B7.png\"],\n[\"因陀罗\", \"http://prts.wiki/images/f/fe/%E5%A4%B4%E5%83%8F_%E5%9B%A0%E9%99%80%E7%BD%97.png\"],\n[\"芙兰卡\", \"http://prts.wiki/images/2/2b/%E5%A4%B4%E5%83%8F_%E8%8A%99%E5%85%B0%E5%8D%A1.png\"],\n[\"德克萨斯\", \"http://prts.wiki/images/5/57/%E5%A4%B4%E5%83%8F_%E5%BE%B7%E5%85%8B%E8%90%A8%E6%96%AF.png\"],\n[\"凛冬\", \"http://prts.wiki/images/c/cd/%E5%A4%B4%E5%83%8F_%E5%87%9B%E5%86%AC.png\"],\n[\"白面鸮\", \"http://prts.wiki/images/8/83/%E5%A4%B4%E5%83%8F_%E7%99%BD%E9%9D%A2%E9%B8%AE.png\"],\n[\"阿消\", \"http://prts.wiki/images/2/2f/%E5%A4%B4%E5%83%8F_%E9%98%BF%E6%B6%88.png\"],\n[\"地灵\", \"http://prts.wiki/images/5/57/%E5%A4%B4%E5%83%8F_%E5%9C%B0%E7%81%B5.png\"],\n[\"深海色\", \"http://prts.wiki/images/d/d1/%E5%A4%B4%E5%83%8F_%E6%B7%B1%E6%B5%B7%E8%89%B2.png\"],\n[\"古米\", \"http://prts.wiki/images/0/07/%E5%A4%B4%E5%83%8F_%E5%8F%A4%E7%B1%B3.png\"],\n[\"蛇屠箱\", \"http://prts.wiki/images/0/02/%E5%A4%B4%E5%83%8F_%E8%9B%87%E5%B1%A0%E7%AE%B1.png\"],\n[\"角峰\", \"http://prts.wiki/images/e/e4/%E5%A4%B4%E5%83%8F_%E8%A7%92%E5%B3%B0.png\"],\n[\"调香师\", \"http://prts.wiki/images/6/6a/%E5%A4%B4%E5%83%8F_%E8%B0%83%E9%A6%99%E5%B8%88.png\"],\n[\"嘉维尔\", \"http://prts.wiki/images/c/cc/%E5%A4%B4%E5%83%8F_%E5%98%89%E7%BB%B4%E5%B0%94.png\"],\n[\"末药\", \"http://prts.wiki/images/d/d9/%E5%A4%B4%E5%83%8F_%E6%9C%AB%E8%8D%AF.png\"],\n[\"暗索\", \"http://prts.wiki/images/d/dd/%E5%A4%B4%E5%83%8F_%E6%9A%97%E7%B4%A2.png\"],\n[\"砾\", \"http://prts.wiki/images/c/ce/%E5%A4%B4%E5%83%8F_%E7%A0%BE.png\"],\n[\"慕斯\", \"http://prts.wiki/images/f/fc/%E5%A4%B4%E5%83%8F_%E6%85%95%E6%96%AF.png\"],\n[\"艾丝黛尔\", \"http://prts.wiki/images/5/57/%E5%A4%B4%E5%83%8F_%E8%89%BE%E4%B8%9D%E9%BB%9B%E5%B0%94.png\"],\n[\"霜叶\", \"http://prts.wiki/images/2/29/%E5%A4%B4%E5%83%8F_%E9%9C%9C%E5%8F%B6.png\"],\n[\"缠丸\", \"http://prts.wiki/images/1/13/%E5%A4%B4%E5%83%8F_%E7%BC%A0%E4%B8%B8.png\"],\n[\"杜宾\", \"http://prts.wiki/images/a/a1/%E5%A4%B4%E5%83%8F_%E6%9D%9C%E5%AE%BE.png\"],\n[\"红豆\", \"http://prts.wiki/images/b/bb/%E5%A4%B4%E5%83%8F_%E7%BA%A2%E8%B1%86.png\"],\n[\"清道夫\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%B8%85%E9%81%93%E5%A4%AB.png\"],\n[\"讯使\", \"http://prts.wiki/images/2/27/%E5%A4%B4%E5%83%8F_%E8%AE%AF%E4%BD%BF.png\"],\n[\"白雪\", \"http://prts.wiki/images/b/b4/%E5%A4%B4%E5%83%8F_%E7%99%BD%E9%9B%AA.png\"],\n[\"流星\", \"http://prts.wiki/images/1/14/%E5%A4%B4%E5%83%8F_%E6%B5%81%E6%98%9F.png\"],\n[\"杰西卡\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E6%9D%B0%E8%A5%BF%E5%8D%A1.png\"],\n[\"远山\", \"http://prts.wiki/images/6/63/%E5%A4%B4%E5%83%8F_%E8%BF%9C%E5%B1%B1.png\"],\n[\"夜烟\", \"http://prts.wiki/images/5/55/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E7%83%9F.png\"],\n[\"梓兰\", \"http://prts.wiki/images/8/83/%E5%A4%B4%E5%83%8F_%E6%A2%93%E5%85%B0.png\"],\n[\"史都华德\", \"http://prts.wiki/images/b/b3/%E5%A4%B4%E5%83%8F_%E5%8F%B2%E9%83%BD%E5%8D%8E%E5%BE%B7.png\"],\n[\"安赛尔\", \"http://prts.wiki/images/9/94/%E5%A4%B4%E5%83%8F_%E5%AE%89%E8%B5%9B%E5%B0%94.png\"],\n[\"芙蓉\", \"http://prts.wiki/images/d/d3/%E5%A4%B4%E5%83%8F_%E8%8A%99%E8%93%89.png\"],\n[\"炎熔\", \"http://prts.wiki/images/f/fb/%E5%A4%B4%E5%83%8F_%E7%82%8E%E7%86%94.png\"],\n[\"安德切尔\", \"http://prts.wiki/images/f/f6/%E5%A4%B4%E5%83%8F_%E5%AE%89%E5%BE%B7%E5%88%87%E5%B0%94.png\"],\n[\"克洛丝\", \"http://prts.wiki/images/b/b9/%E5%A4%B4%E5%83%8F_%E5%85%8B%E6%B4%9B%E4%B8%9D.png\"],\n[\"米格鲁\", \"http://prts.wiki/images/3/32/%E5%A4%B4%E5%83%8F_%E7%B1%B3%E6%A0%BC%E9%B2%81.png\"],\n[\"卡缇\", \"http://prts.wiki/images/8/87/%E5%A4%B4%E5%83%8F_%E5%8D%A1%E7%BC%87.png\"],\n[\"玫兰莎\", \"http://prts.wiki/images/4/4b/%E5%A4%B4%E5%83%8F_%E7%8E%AB%E5%85%B0%E8%8E%8E.png\"],\n[\"翎羽\", \"http://prts.wiki/images/1/1f/%E5%A4%B4%E5%83%8F_%E7%BF%8E%E7%BE%BD.png\"],\n[\"香草\", \"http://prts.wiki/images/c/c8/%E5%A4%B4%E5%83%8F_%E9%A6%99%E8%8D%89.png\"],\n[\"芬\", \"http://prts.wiki/images/4/41/%E5%A4%B4%E5%83%8F_%E8%8A%AC.png\"],\n[\"12F\", \"http://prts.wiki/images/b/b7/%E5%A4%B4%E5%83%8F_12F.png\"],\n[\"杜林\", \"http://prts.wiki/images/2/24/%E5%A4%B4%E5%83%8F_%E6%9D%9C%E6%9E%97.png\"],\n[\"巡林者\", \"http://prts.wiki/images/9/93/%E5%A4%B4%E5%83%8F_%E5%B7%A1%E6%9E%97%E8%80%85.png\"],\n[\"黑角\", \"http://prts.wiki/images/f/f1/%E5%A4%B4%E5%83%8F_%E9%BB%91%E8%A7%92.png\"],\n[\"夜刀\", \"http://prts.wiki/images/b/b2/%E5%A4%B4%E5%83%8F_%E5%A4%9C%E5%88%80.png\"],\n[\"Castle-3\", \"http://prts.wiki/images/8/82/%E5%A4%B4%E5%83%8F_Castle-3.png\"],];","import React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './Board.css';\nimport './Lobby.css';\nimport { AVATARS } from './avatars';\nimport { rand } from './utils';\nimport { SocketIO } from 'boardgame.io/dist/types/packages/multiplayer';\n\nconst NUM_PLAYERS = 4;\n\n// const API = \"localhost:3050\";\nconst API = \"47.96.2.148:3050\";\n\n// EH: Client and server should be communicated in a good way, not in this way\ninterface ILobby {\n  player_id: string,\n  rooms: any[],\n  locked: boolean,\n}\n\ninterface IRoomOperation {\n  name?: string,\n  effect?: () => void,\n}\n\ntype Setter = (setter: (L: ILobby) => ILobby) => void;\n\nfunction LobbyAvatar(props:{avatar?: string, is_player?: boolean}) {\n  return <div className=\"lobby-avatar-container\" style={{borderColor: props.is_player?\"#389e0d\":undefined}}>\n    <img className=\"lobby-avatar\" src={props.avatar} />\n  </div>\n}\n\n// align-self\nfunction Room(props:{players: string[], playerID?: string, operation?:IRoomOperation, locked?:boolean}) {\n  return <div className=\"room\">\n    {props.players.map(p => <LobbyAvatar is_player={p==props.playerID} avatar={get_avatar(p)} />)}\n    <button className=\"room-btn\" style={{display:(props.operation == undefined || props.locked)?\"none\":undefined}} onClick={props.operation && props.operation.effect} >{props.operation && props.operation.name}</button>\n  </div>\n}\n\nfunction get_avatar(pid:string): string {\n  let len = AVATARS.length;\n  return AVATARS[Math.floor(rand(pid)*len)][1];\n}\n\nfunction fetch_rooms(setter: (setter_function: (L: ILobby) => ILobby) => void) {\n  let api = `http://${API}/rooms`;\n  fetch(api).then(res => res.json()).then(res => setter(L => ({...L, rooms:res.rooms})));\n}\n\nfunction send_post_req(api:string, data:any) {\n  return fetch(api, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n}\n\nfunction onOperate(setter: Setter) {\n  setter(L => ({...L, locked:true}));\n  // This is not a cool way, but change this needs tons of refractors\n  setTimeout(()=>fetch_rooms(setter), 500);\n}\n\nfunction create_room(player_id: string) {\n  let api = `http://${API}/create`;\n  return send_post_req(api, {player_id, max_players: NUM_PLAYERS});\n}\n\nfunction enter_room(player_id: string, room_id: string) {\n  let api = `http://${API}/enter`;\n  return send_post_req(api, {player_id, room_id});\n}\n\nfunction leave_room(player_id: string, room_id: string) {\n  let api = `http://${API}/leave`;\n  return send_post_req(api, {player_id, room_id});\n}\n\nfunction enter_game(player_id: string, room_id: string) {\n  let api = `http://${API}/entergame`;\n  return send_post_req(api, {player_id, room_id});\n}\n\nfunction leave_lobby(player_id: string) {\n  let api = `http://${API}/leavelobby`;\n  return send_post_req(api, {player_id});\n}\n\nfunction get_room_operation(room: any, player_id: string, player_contained: boolean, setter:Setter) {\n  let player_in_room = room.players.find((x:any) => x.player_id == player_id);\n  if (player_in_room != undefined) {\n    return {name: \"退出\", effect:()=>{leave_room(player_id, room.room_id);onOperate(setter)}};\n  }\n  else {\n    if (player_contained) {\n      return undefined;\n    }\n    else {\n      return {name: \"加入\", effect:()=>{\n        enter_room(player_id, room.room_id);\n        onOperate(setter);\n      }};\n    }\n  }\n}\n\nexport function Lobby(props:{actions:any}) {\n  let [L, setL] = useState<ILobby>({\n    player_id: uuidv4(),\n    rooms: [],\n    locked: false,\n  });\n\n  useEffect(()=>{\n    // setL({...L, player_id: uuidv4()});\n    fetch_rooms(setL);\n    const interval = setInterval(()=>{\n      fetch_rooms(setL);\n      console.log(\"Fetching room from server...\");\n    }, 2500);\n    let exit_lobby = () => {\n      leave_lobby(L.player_id);\n      clearInterval(interval);\n      console.log(`Exit lobby ${L.player_id}`);\n    };\n    window.addEventListener(\"beforeunload\", exit_lobby);\n    return () => {\n      exit_lobby();\n      window.removeEventListener(\"beforeunload\", exit_lobby);\n    }\n  }, []);\n\n  useEffect(() => {\n    let player_room = L.rooms.find(room => room.players.find((p:any) => p.player_id == L.player_id) != undefined);\n    if (player_room && player_room.players.length == NUM_PLAYERS) {\n      let player_idx = player_room.players.map((p:any) => p.player_id).indexOf(L.player_id) + \"\";\n      // enter_game(L.player_id, player_room.room_id);\n      props.actions.enter_game(player_room.room_id, player_idx);\n    }\n  }, [L.rooms]);\n\n  useEffect(() => {\n    if (L.locked) {\n      setTimeout(()=>setL(L=>({...L, locked:false})), 2000);\n    }\n  }, [L.locked]);\n\n  let player_contained = L.rooms.flatMap(room => room.players.map((p:any) => p.player_id)).includes(L.player_id);\n\n  return <div className=\"board\">\n    <div className=\"lobby-player-panel\">\n      <LobbyAvatar avatar={get_avatar(L.player_id)} is_player={true} />\n      <button className=\"room-btn\" style={{display: (player_contained || L.locked)?\"none\":undefined}} onClick={() => setL({...L, player_id:uuidv4()})}>换个形象</button>\n    </div>\n    <div className=\"rooms\">\n      {/* <Room players={[\"1\",\"2\",\"3\"]} operation={{name:\"加入\"}} /> */}\n      {L.rooms.filter(room => room.players.length < NUM_PLAYERS).map(room => <Room players={room.players.map((p:any) => p.player_id)} playerID={L.player_id} operation={get_room_operation(room, L.player_id, player_contained, setL)} locked={L.locked} />)}\n    </div>\n    <div></div>\n    <div style={{display: player_contained?\"none\":undefined}} className=\"lobby-controller\">      \n    <button className=\"lobby-btn\" onClick={()=>props.actions.changer(\"Title\")}>返回</button>\n    <button className=\"lobby-btn\" onClick={()=>{create_room(L.player_id);onOperate(setL);}} >创建房间</button>\n    <button className=\"lobby-btn\" onClick={()=>props.actions.direct_enter()} >重进</button>\n    </div>\n  </div>;\n}\n","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport { Client } from 'boardgame.io/react';\nimport { Local, SocketIO } from 'boardgame.io/multiplayer';\nimport { LobbyClient } from 'boardgame.io/client'\nimport { CSPR } from './Game';\nimport { Board } from './Board';\nimport { TitleScreen } from './Title';\nimport { Lobby } from './Lobby';\nimport { Dispatcher } from './types';\n\nconst SERVER = SocketIO({server:\"47.96.2.148:8000\"});\n// const SERVER = SocketIO({server:\"localhost:8000\"});\n// const SERVER = Local();\n\ninterface IAppState {\n  scene: string,\n  game_instance: {matchID: string, playerID: string} | undefined,\n}\n\n// const App = Client({\n//   game: CSPR,\n//   board: Board,\n//   debug: false,\n// });\n\nconst SingleClient = Client({\n  game: CSPR,\n  board: Board,\n  debug: false,\n  // multiplayer: Local(),\n  // multiplayer: SocketIO({server: 'localhost:8000'}),\n\n  numPlayers: 1,\n});\n\n// const App = () => {\n//   return <div style={{display: \"flex\"}}>\n//     <CSPRClient playerID=\"0\" />\n//     {/* <CSPRClient playerID=\"1\" matchID=\"default\" /> */}\n//   </div>\n// };\n\nconst Title = (props: {actions: any}) => {\n  return <TitleScreen \n    title = \"雀魂: 爆炸一姬\"\n    titleImg = \"https://s3.ax1x.com/2020/12/30/rqw8KA.png\"\n    operations = {[\n      {name: \"单人练习\", effect: () => props.actions.changer(\"SingleClient\")},\n      {name: \"多人运动\", effect: () => props.actions.changer(\"CSPRLobby\")},\n      {name: \"玩法教学\"},\n  ]}\n  />;\n};\n\nconst CSPRLobby = (props:any) => {\n  return <Lobby {...props} />;\n}\n\nconst App = () => {\n  let [S, setS] = useState<IAppState>({\n    scene: \"Title\",\n    in_game: false,\n  });\n\n  const scenes: Record<string, JSX.Element> = {\n    CSPRLobby,\n    Title,\n    SingleClient,\n  }\n\n  const actions: Record<string, Dispatcher> = {\n    changer: (scene: string) => setS({...S, scene}),\n    enter_game: (matchID: string, playerID: string) => {\n      // alert(`对局代码为: ${matchID}${playerID}`);\n      setS({...S, game_instance: {matchID, playerID}});\n    },\n    finish_game: () => setS({...S, game_instance:undefined}),\n    direct_enter: () => {\n      let game_data = prompt(\"输入对局代码:\");\n      let playerID = game_data.slice(-1);\n      let matchID = game_data.slice(0,-1);\n      setS({...S, game_instance:{matchID, playerID}});\n    },\n  }\n\n  let Scene = scenes[S.scene] || Title;\n  if (S.game_instance != undefined) {\n    let GameInstance = Client({\n      // game: {...CSPR, seed:S.game_instance.matchID},\n      game: CSPR,\n      board: Board,\n      debug: false,\n      multiplayer: SERVER,\n      numPlayers: 4,\n      // seed: S.game_instance.matchID,\n    });\n    Scene = () => <GameInstance matchID={S.game_instance.matchID} playerID={S.game_instance.playerID} />;\n  }\n\n  return <Scene {...{S, actions}} />;\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}